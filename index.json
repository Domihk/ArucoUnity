{
  "index.html": {
    "href": "index.html",
    "title": "ArucoUnity | Aruco Unity documentation",
    "keywords": "ArucoUnity Bring augmented reality to Unity by tracking ArUco markers in real time. Standard mono cameras, such as webcams, but also stereo cameras and fisheye lenses are supported. It uses the OpenCV's ArUco Marker Detection module and the OpenCV's camera calibration modules calib3d and ccalib . Left: AR Roll a ball . Right: The markers tracking allows to extend the phone's screen. Usage Get ArucoUnity: Download the latest build release . Or see the Build From Sources documentation page. Then, import ArucoUnity.package in your Unity project. A typical workflow with ArucoUnity is: Create Markers , print and place them in the environment. Calibrate a Camera using a calibration board. Track Markers . See the documentation online for details: https://normanderwan.github.io/ArucoUnity/ . Contributions For any question or comment, please open a new issue . If you'd like to contribute, please fork the repository and use a feature branch. Pull requests are warmly welcome. Support The first version of this project has been developed as part of the master thesis of Erwan Normand and was supported by the ÉTS - École de Technologie Supérieure . I'm developing the second version on my own. If this project helped you, please consider buying me a coffee in return :) Licenses See the LICENSE file for license rights and limitations (3-clause BSD license). See https://github.com/NormandErwan/ArucoUnityPlugin/tree/master/3rdparty for the OpenCV license. ArucoUnity uses the following modules: aruco , cablid3d , ccalib References The OpenCV's Aruco module implements this paper: Garrido-Jurado, S., Muñoz-Salinas, R., Madrid-Cuevas, F. J., & Marín-Jiménez, M. J. (2014). Automatic generation and detection of highly reliable fiducial markers under occlusion. Pattern Recognition, 47(6), 2280-2292. The fisheye calibration operated with the OpenCV's ccalib module is based on these papers: Mei, C., & Rives, P. (2007, April). Single view point omnidirectional camera calibration from planar grids. In Robotics and Automation, 2007 IEEE International Conference on (pp. 3945-3950). IEEE. Li, B., Heng, L., Koser, K., & Pollefeys, M. (2013, November). A multiple-camera system calibration toolbox using a feature descriptor-based calibration pattern. In Intelligent Robots and Systems (IROS), 2013 IEEE/RSJ International Conference on (pp. 1301-1307). IEEE."
  },
  "manual/calibrate-a-camera.html": {
    "href": "manual/calibrate-a-camera.html",
    "title": "Calibrate a Camera | Aruco Unity documentation",
    "keywords": "Calibrate a Camera Motivation In order to be able to track markers you need to calibrate your camera, i.e. measure the camera parameters. The calibration process may seems long but it's only because there is lots of customization options. The principle is straightforward: (1) print a calibration board and (2) take images with your camera of the board in different positions and orientations. ArucoUnity will generate XML file containing the camera parameters. To understand the algorithms used, read these tutorials: Calibration with ArUco and ChArUco and Camera calibration With OpenCV . Calibrate a camera Most of the cameras we use today on our smartphones or laptops are called in ArucoUnity pinhole cameras (camera using a rectilinear lens ) in contrast with cameras using a fisheye lens . So if you want to calibrate your webcam or smartphone, read this section. Make a calibration board. Create a charuco board or a grid board. See the Create Markers page for details. Print the generated image on paper. Stick it on a hard cardboard: the paper must remains as flat as possible during the calibration ( Fig.1 ). Fig.1: Different viewpoints of a charuco calibration board. From OpenCV: https://docs.opencv.org/3.4/da/d13/tutorial_aruco_calibration.html Open the Assets/ArucoUnity/Scenes/CalibrateCamera.unity scene. Configure the ArucoWebcam game object ( Fig.2 ). Set the WebcamId to select the camera you want to use. The first camera's id is 0 . You can list the available webcams with WebCamTexture.devices . MonoArucoCameraDisplay.AutoStart is uncheck because the video stream is displayed by the ArucoCameraCalibrationGUI object. Fig.2: Default configuration of ArucoWebcam using the first webcam (id= 0 ). Configure the calibration board on the PinholeCameraCalibration game object ( Fig.3 ). Set the CalibrationBoard with a charuco board or a grid board. Both are already created in the scene to help you. Configure the calibration board object by measuring the one you just printed : units are in meters this time. The ArucoObjectDisplayer helps you visualize the configured board to see if it's match with the printed one. Don't switch x and y values. Optionally adjust parameters on the PinholeCameraCalibration game object. Set the output camera parameters file with CameraParametersController : The folder is relative to persistentDataPath in builds or to the \"Asset\" folder of your projet in the editor. If the filename is empty, it will be automatically generated from the camera used. If you want to refine a previous calibration, set the filename of the camera parameters XML file (with the .xml extension). Configure the board detection with DetectorParametersController parameters. They are described on the Detector Parameters section of the ArUco camera calibration tutorial . Configure the calibration flags with PinholeCameraCalibrationFlags . They are described on the calib3d::calibrateCamera() function documentation. Fig.3: PinholeCameraCalibration configured with a charuco board. Run the scene and interact with the UI to calibrate your camera ( Fig.4 ). Hold the calibration board in front of your camera and click on the Add Image button. Think to deactivate the autofocus of your camera: a calibration is done for only one focal length at the time. Take at least 10 images of you calibration board in different positions and orientations without moving the camera between each snapshot. See this example of images . Reset the image list if you want to start over with the Reset button. Calibrate your camera with the image list with the Calibrate button. The reprojection error is displayed to score the calibration precision: it should be close to 0 px. Read the responses of this stackoverflow question to improve your calibrations. Fig.4: Calibration scene running. Calibrate a stereoscopic camera The process is the same as in the Calibrate a camera section but we use differents camera and calibration scripts. Make a calibration board. Open the Assets/ArucoUnity/Scenes/CalibrateCamera.unity scene. Configure the camera: Deactivate the ArucoWebcam game object. Drag Assets/ArucoUnity/Prefabs/Cameras/StereoArucoWebcam.prefab into the scene. Set StereoArucoWebcam.WebcamId1 , StereoArucoWebcam.WebcamId2 and uncheck StereoArucoCameraDisplay.AutoStart ( Fig.5 ). Fig.5: Stereo webcam configured to use the first (id1= 0 ) and the second webcam (id2= 1 ) Configure the calibration: Deactivate the PinholeCameraCalibration game object. Drag Assets/ArucoUnity/Prefabs/Calibration/StereoPinholeCameraCalibration.prefab into the scene. Set StereoPinholeCameraCalibration.ArucoCamera with StereoArucoWebcam ( Fig.6 ). Set ArucoCameraCalibrationGUI.ArucoCameraCalibration with StereoPinholeCameraCalibration ( Fig.7 ). Optionally adjust detection and calibration parameters. Fig.6: StereoPinholeCameraCalibration configured with a charuco board. Fig.7: ArucoCameraCalibrationGUI configured with StereoPinholeCameraCalibration . Run the scene and calibration your camera ( Fig.8 ). Fig.8: Calibration scene running. Calibrate a fisheye camera Follow the Calibrate a stereoscopic camera section but use OmnidirCameraCalibration prefab for a monoscopic camera or StereoOmnidirCameraCalibration prefab for a stereoscopic camera ( Fig.9 ). Fig.9: Calibration scene running for a stereoscopic fisheye camera. The algorithms used are described in this tutorial: Omnidirectional Cameara [sic] Calibration . Reuse calibration data You may already have calibrated your camera and want to directly reuse your calibration data. ArucoUnity doesn't use the YAML format used by OpenCV to store these data but use XML files. Therefore you need to create by hand calibration file for ArucoUnity. Make a copy of Assets/ArucoUnity/CameraParameters/<CameraType>Example.xml and transfer your calibration data."
  },
  "manual/aruco-unity-architecture.html": {
    "href": "manual/aruco-unity-architecture.html",
    "title": "ArucoUnity Architecture | Aruco Unity documentation",
    "keywords": "ArucoUnity Architecture ArucoUnity is made of three parts: A plugin that wraps into a C interface the aruco, calib3d and ccalib modules of OpenCV. A C# interface ( ArucoUnity.Plugin namespace ) using the plugin to reproduce the OpenCV modules classes and functions. Unity C# scripts to calibrate cameras and to track markers directly in the editor with good performances. You can code directly with the OpenCV C# equivalent interface but we advise you to work with and extend the Unity scripts. The Unity scripts were originally one camera display and tracking script and one calibration script. For performances and to support multiple types of camera (fisheye, stereoscopic) we decoupled these scripts ( Fig.1 ). Fig.1: Overview class diagram of the Unity scripts."
  },
  "manual/track-markers.html": {
    "href": "manual/track-markers.html",
    "title": "Track Markers | Aruco Unity documentation",
    "keywords": "Track Markers First, make sure you have calibrated your camera: read the Calibrate a Camera page. You need to have a calibration file to track some aruco objects. Also, print and place in the environment the aruco objects you want to track. Read the Create Markers page for details. To track your aruco objects: Open the Assets/ArucoUnity/Scenes/TrackMarkers.unity scene. Configure the camera: For a webcam, use the ArucoWebcamCalibrated object already in the scene. Otherwise, drag the prefab corresponding to your camera : Assets/ArucoUnity/Prefabs/Cameras/<CameraType>Calibrated.prefab . Fill CameraParametersFilename with the camera parameters XML file from the calibration of the camera ( Fig.1 ). Fig.1: ArucoWebcamCalibrated configured with camera parameters from a calibration. Create each aruco objects to track: Configure it with what you measure on the printed aruco object. Units are in meters for tracking, not in pixels. Use a ArucoObjectDisplayer to visualize the aruco object, not a ArucoObjectCreator. Simply add any game object as child of the aruco object e.g. the red cube in Fig.2 . Fig.2: ArucoMarker configured to track a physical aruco marker with a 5.4 cm side length. The ArucoObjectDisplayer helps to visualize in the editor the physical object that will be tracked. Configure the tracker ArucoObjectsTracker : Drag all the aruco objects to track in ArucoObjects . Set ArucoCameraDisplay with the camera prefab you use ( Fig.3 ). Fig.3: ArucoObjectsTracker configured to track three objects for the ArucoCameraCalibrated we configured. Run the scene! The ArucoTracker will place (position, rotation, scale) any detected aruco object in the ArucoObjects list relative to the camera ( Fig.4 ). Fig.4: Roll a ball set as child of an aruco board: the game follows the board movements. To understand the algorithm used, read this tutorial: Detection of ArUco Markers ."
  },
  "manual/build-from-sources.html": {
    "href": "manual/build-from-sources.html",
    "title": "Build From Sources | Aruco Unity documentation",
    "keywords": "Build From Sources Preparation We clone two repository: ArucoUnity which contains the Unity project with C# scripts, and ArucoUnityPlugin which contains the C interface of the OpenCV modules (see ArucoUnity Architecture for details). Run the following commands: git clone https://github.com/NormandErwan/ArucoUnity git clone https://github.com/NormandErwan/ArucoUnityPlugin mkdir -p ArucoUnityPlugin/build/opencv/ Build OpenCV We need a build of OpenCV (3.3 ⩽ version ⩽ 3.4) with the calib3d module and the aruco and ccalib contrib modules. These two contrib modules are not included in the official OpenCV releases. A CMake project is already configured ready to be build. Run the following commands: cd ArucoUnityPlugin/build/opencv/ cmake -DCMAKE_INSTALL_PREFIX=install/ -G <generator_name> ../../3rdparty/opencv_contrib/ cmake --build . --config Release If you're not familiar with CMake generators, see this list of generators to set the <generator_name> variable above. For example, use use \"Visual Studio 15 2017 Win64\" with Visual Studio 2017 installed. Alternatively, you can follow the opencv_contrib instructions . Build ArucoUnityPlugin First, make sure Unity is closed during the installation, unless the plugin installation will fail. Configure the building solution of the ArucoUnityPlugin, compile and install it by running the following commands: cd ArucoUnityPlugin/build/ cmake -DCMAKE_INSTALL_PREFIX=.. -DOpenCV_DIR=build/opencv/install/ -DArucoUnity_DIR=../../ArucoUnity/ -G <generator_name> .. cmake --build . --config Release --target INSTALL The installation will copy the plugin into the bin/ and lib/ folders. It will also copy the plugin and the OpenCV libraries to the ArucoUnity/Assets/Plugins/<platform> folder. On Linux the correct path to the -DOpenCV_DIR option above may be set to build/opencv/install/share/OpenCV/ . Export the ArucoUnity package Open the ArucoUnity/ folder in Unity. No errors should be displayed in the Console panel. A new entry named \"ArucoUnity\" is in the menu bar. Open it and select \"Export package\". Generate Documentation Install the documentation generator DocFX . Run the following commands: cd ArucoUnity cp README.md Documentation/index.md docfx Documentation/docfx.json docfx serve _site Open the generated website on http://localhost:8080 ."
  },
  "api/ArucoUnity.Plugin.Cv.Mat.html": {
    "href": "api/ArucoUnity.Plugin.Cv.Mat.html",
    "title": "Class Cv.Mat | Aruco Unity documentation",
    "keywords": "Class Cv.Mat Inheritance System.Object Utility.HandleCppPtr Cv.Mat Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class Mat : Utility.HandleCppPtr Constructors Mat() Declaration public Mat() Mat(Cv.Size, Cv.Type) Declaration public Mat(Cv.Size size, Cv.Type type) Parameters Type Name Description Cv.Size size Cv.Type type Mat(Int32, Int32, Cv.Type) Declaration public Mat(int rows, int cols, Cv.Type type) Parameters Type Name Description System.Int32 rows System.Int32 cols Cv.Type type Mat(Int32, Int32, Cv.Type, Byte[]) Declaration public Mat(int rows, int cols, Cv.Type type, byte[] data) Parameters Type Name Description System.Int32 rows System.Int32 cols Cv.Type type System.Byte [] data Mat(Int32, Int32, Cv.Type, Double[]) Declaration public Mat(int rows, int cols, Cv.Type type, double[] data) Parameters Type Name Description System.Int32 rows System.Int32 cols Cv.Type type System.Double [] data Properties Cols Declaration public int Cols { get; } Property Value Type Description System.Int32 DataByte Declaration public byte[] DataByte { get; set; } Property Value Type Description System.Byte [] DataIntPtr Declaration public IntPtr DataIntPtr { get; set; } Property Value Type Description System.IntPtr Rows Declaration public int Rows { get; } Property Value Type Description System.Int32 Size Declaration public Cv.Size Size { get; } Property Value Type Description Cv.Size Methods AtDouble(Int32, Int32) Declaration public double AtDouble(int i0, int i1) Parameters Type Name Description System.Int32 i0 System.Int32 i1 Returns Type Description System.Double AtDouble(Int32, Int32, Double) Declaration public void AtDouble(int i0, int i1, double value) Parameters Type Name Description System.Int32 i0 System.Int32 i1 System.Double value AtInt(Int32, Int32) Declaration public int AtInt(int i0, int i1) Parameters Type Name Description System.Int32 i0 System.Int32 i1 Returns Type Description System.Int32 AtInt(Int32, Int32, Int32) Declaration public void AtInt(int i0, int i1, int value) Parameters Type Name Description System.Int32 i0 System.Int32 i1 System.Int32 value Channels() Declaration public int Channels() Returns Type Description System.Int32 Clone() Declaration public Cv.Mat Clone() Returns Type Description Cv.Mat Create(Int32, Int32, Cv.Type) Declaration public void Create(int rows, int cols, Cv.Type type) Parameters Type Name Description System.Int32 rows System.Int32 cols Cv.Type type DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() ElemSize() Declaration public uint ElemSize() Returns Type Description System.UInt32 ElemSize1() Declaration public uint ElemSize1() Returns Type Description System.UInt32 Total() Declaration public uint Total() Returns Type Description System.UInt32 Type() Declaration public Cv.Type Type() Returns Type Description Cv.Type"
  },
  "api/ArucoUnity.Plugin.Cv.InterpolationFlags.html": {
    "href": "api/ArucoUnity.Plugin.Cv.InterpolationFlags.html",
    "title": "Enum Cv.InterpolationFlags | Aruco Unity documentation",
    "keywords": "Enum Cv.InterpolationFlags See the OpenCV documentation for more information: http://docs.opencv.org/3.2.0/da/d54/group__imgproc__transform.html#gga5bb5a1fea74ea38e1a5445ca803ff121ac97d8e4880d8b5d509e96825c7522deb Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public enum InterpolationFlags Fields Name Description Area Cubic Lanczos4 Linear Max Nearest WarpFillOutliers WarpInverseMap"
  },
  "api/ArucoUnity.Plugin.Cv.Exception.html": {
    "href": "api/ArucoUnity.Plugin.Cv.Exception.html",
    "title": "Class Cv.Exception | Aruco Unity documentation",
    "keywords": "Class Cv.Exception Inheritance System.Object Utility.HandleCppPtr Cv.Exception Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class Exception : Utility.HandleCppPtr Constructors Exception() Declaration public Exception() Properties Code Declaration public int Code { get; } Property Value Type Description System.Int32 Methods Check() Declaration public void Check() DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() What() Declaration public string What() Returns Type Description System.String"
  },
  "api/ArucoUnity.Plugin.Aruco.GridBoard.html": {
    "href": "api/ArucoUnity.Plugin.Aruco.GridBoard.html",
    "title": "Class Aruco.GridBoard | Aruco Unity documentation",
    "keywords": "Class Aruco.GridBoard Inheritance System.Object Utility.HandleCppPtr Aruco.Board Aruco.GridBoard Inherited Members Aruco.Board.Dictionary Aruco.Board.Ids Aruco.Board.ObjPoints Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class GridBoard : Aruco.Board Methods Create(Int32, Int32, Single, Single, Aruco.Dictionary, Int32) Declaration public static Aruco.GridBoard Create(int markersX, int markersY, float markerLength, float markerSeparation, Aruco.Dictionary dictionary, int firstMarker = 0) Parameters Type Name Description System.Int32 markersX System.Int32 markersY System.Single markerLength System.Single markerSeparation Aruco.Dictionary dictionary System.Int32 firstMarker Returns Type Description Aruco.GridBoard DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() Draw(Cv.Size, out Cv.Mat, Int32, Int32) Declaration public void Draw(Cv.Size outSize, out Cv.Mat img, int marginSize = 0, int borderBits = 1) Parameters Type Name Description Cv.Size outSize Cv.Mat img System.Int32 marginSize System.Int32 borderBits GetGridSize() Declaration public Cv.Size GetGridSize() Returns Type Description Cv.Size GetMarkerLength() Declaration public float GetMarkerLength() Returns Type Description System.Single GetMarkerSeparation() Declaration public float GetMarkerSeparation() Returns Type Description System.Single"
  },
  "api/ArucoUnity.Plugin.Aruco.Dictionary.html": {
    "href": "api/ArucoUnity.Plugin.Aruco.Dictionary.html",
    "title": "Class Aruco.Dictionary | Aruco Unity documentation",
    "keywords": "Class Aruco.Dictionary Inheritance System.Object Utility.HandleCppPtr Aruco.Dictionary Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class Dictionary : Utility.HandleCppPtr Constructors Dictionary() Declaration public Dictionary() Dictionary(Aruco.Dictionary) Declaration public Dictionary(Aruco.Dictionary dictionary) Parameters Type Name Description Aruco.Dictionary dictionary Dictionary(Cv.Mat, Int32, Int32) Declaration public Dictionary(Cv.Mat bytesList, int markerSize = 0, int maxCorrectionBits = 0) Parameters Type Name Description Cv.Mat bytesList System.Int32 markerSize System.Int32 maxCorrectionBits Properties BytesList Declaration public Cv.Mat BytesList { get; set; } Property Value Type Description Cv.Mat MarkerSize Declaration public int MarkerSize { get; set; } Property Value Type Description System.Int32 MaxCorrectionBits Declaration public int MaxCorrectionBits { get; set; } Property Value Type Description System.Int32 Name Declaration public Aruco.PredefinedDictionaryName Name { get; set; } Property Value Type Description Aruco.PredefinedDictionaryName Methods DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() DrawMarker(Int32, Int32, out Cv.Mat, Int32) Declaration public void DrawMarker(int id, int sidePixels, out Cv.Mat img, int borderBits) Parameters Type Name Description System.Int32 id System.Int32 sidePixels Cv.Mat img System.Int32 borderBits GetBitsFromByteList(Cv.Mat, Int32) Declaration public static Cv.Mat GetBitsFromByteList(Cv.Mat byteList, int markerSiz) Parameters Type Name Description Cv.Mat byteList System.Int32 markerSiz Returns Type Description Cv.Mat GetByteListFromBits(IntPtr) Declaration public static Cv.Mat GetByteListFromBits(IntPtr bits) Parameters Type Name Description System.IntPtr bits Returns Type Description Cv.Mat GetDistanceToId(Aruco.Dictionary, Cv.Mat, Int32, Boolean) Declaration public int GetDistanceToId(Aruco.Dictionary dictionary, Cv.Mat bits, int id, bool allRotations = true) Parameters Type Name Description Aruco.Dictionary dictionary Cv.Mat bits System.Int32 id System.Boolean allRotations Returns Type Description System.Int32 Identify(Aruco.Dictionary, Cv.Mat, out Int32, out Int32, Double) Declaration public bool Identify(Aruco.Dictionary dictionary, Cv.Mat onlyBits, out int idx, out int rotation, double maxCorrectionRate) Parameters Type Name Description Aruco.Dictionary dictionary Cv.Mat onlyBits System.Int32 idx System.Int32 rotation System.Double maxCorrectionRate Returns Type Description System.Boolean"
  },
  "api/ArucoUnity.Plugin.Aruco.DetectorParameters.html": {
    "href": "api/ArucoUnity.Plugin.Aruco.DetectorParameters.html",
    "title": "Class Aruco.DetectorParameters | Aruco Unity documentation",
    "keywords": "Class Aruco.DetectorParameters Inheritance System.Object Utility.HandleCppPtr Aruco.DetectorParameters Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class DetectorParameters : Utility.HandleCppPtr Constructors DetectorParameters() Declaration public DetectorParameters() Properties AdaptiveThreshConstant Declaration public double AdaptiveThreshConstant { get; set; } Property Value Type Description System.Double AdaptiveThreshWinSizeMax Declaration public int AdaptiveThreshWinSizeMax { get; set; } Property Value Type Description System.Int32 AdaptiveThreshWinSizeMin Declaration public int AdaptiveThreshWinSizeMin { get; set; } Property Value Type Description System.Int32 AdaptiveThreshWinSizeStep Declaration public int AdaptiveThreshWinSizeStep { get; set; } Property Value Type Description System.Int32 CornerRefinementMaxIterations Declaration public int CornerRefinementMaxIterations { get; set; } Property Value Type Description System.Int32 CornerRefinementMethod Declaration public Aruco.CornerRefineMethod CornerRefinementMethod { get; set; } Property Value Type Description Aruco.CornerRefineMethod CornerRefinementMinAccuracy Declaration public double CornerRefinementMinAccuracy { get; set; } Property Value Type Description System.Double CornerRefinementWinSize Declaration public int CornerRefinementWinSize { get; set; } Property Value Type Description System.Int32 ErrorCorrectionRate Declaration public double ErrorCorrectionRate { get; set; } Property Value Type Description System.Double MarkerBorderBits Declaration public int MarkerBorderBits { get; set; } Property Value Type Description System.Int32 MaxErroneousBitsInBorderRate Declaration public double MaxErroneousBitsInBorderRate { get; set; } Property Value Type Description System.Double MaxMarkerPerimeterRate Declaration public double MaxMarkerPerimeterRate { get; set; } Property Value Type Description System.Double MinCornerDistanceRate Declaration public double MinCornerDistanceRate { get; set; } Property Value Type Description System.Double MinDistanceToBorder Declaration public int MinDistanceToBorder { get; set; } Property Value Type Description System.Int32 MinMarkerDistanceRate Declaration public double MinMarkerDistanceRate { get; set; } Property Value Type Description System.Double MinMarkerPerimeterRate Declaration public double MinMarkerPerimeterRate { get; set; } Property Value Type Description System.Double MinOtsuStdDev Declaration public double MinOtsuStdDev { get; set; } Property Value Type Description System.Double PerspectiveRemoveIgnoredMarginPerCell Declaration public double PerspectiveRemoveIgnoredMarginPerCell { get; set; } Property Value Type Description System.Double PerspectiveRemovePixelPerCell Declaration public int PerspectiveRemovePixelPerCell { get; set; } Property Value Type Description System.Int32 PolygonalApproxAccuracyRate Declaration public double PolygonalApproxAccuracyRate { get; set; } Property Value Type Description System.Double Methods DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr()"
  },
  "api/ArucoUnity.Plugin.Aruco.CornerRefineMethod.html": {
    "href": "api/ArucoUnity.Plugin.Aruco.CornerRefineMethod.html",
    "title": "Enum Aruco.CornerRefineMethod | Aruco Unity documentation",
    "keywords": "Enum Aruco.CornerRefineMethod Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public enum CornerRefineMethod Fields Name Description Contour None Subpix"
  },
  "api/ArucoUnity.Plugin.Aruco.CharucoBoard.html": {
    "href": "api/ArucoUnity.Plugin.Aruco.CharucoBoard.html",
    "title": "Class Aruco.CharucoBoard | Aruco Unity documentation",
    "keywords": "Class Aruco.CharucoBoard Inheritance System.Object Utility.HandleCppPtr Aruco.Board Aruco.CharucoBoard Inherited Members Aruco.Board.Dictionary Aruco.Board.Ids Aruco.Board.ObjPoints Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class CharucoBoard : Aruco.Board Properties ChessboardCorners Declaration public Std.VectorPoint3f ChessboardCorners { get; set; } Property Value Type Description Std.VectorPoint3f MarkerCorners Declaration public Std.VectorVectorInt MarkerCorners { get; set; } Property Value Type Description Std.VectorVectorInt MarkerIdx Declaration public Std.VectorVectorInt MarkerIdx { get; set; } Property Value Type Description Std.VectorVectorInt Methods Create(Int32, Int32, Single, Single, Aruco.Dictionary) Declaration public static Aruco.CharucoBoard Create(int squaresX, int squaresY, float squareLength, float markerLength, Aruco.Dictionary dictionary) Parameters Type Name Description System.Int32 squaresX System.Int32 squaresY System.Single squareLength System.Single markerLength Aruco.Dictionary dictionary Returns Type Description Aruco.CharucoBoard DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() Draw(Cv.Size, out Cv.Mat, Int32, Int32) Declaration public void Draw(Cv.Size outSize, out Cv.Mat img, int marginSize = 0, int borderBits = 1) Parameters Type Name Description Cv.Size outSize Cv.Mat img System.Int32 marginSize System.Int32 borderBits GetChessboardSize() Declaration public Cv.Size GetChessboardSize() Returns Type Description Cv.Size GetMarkerLength() Declaration public float GetMarkerLength() Returns Type Description System.Single GetSquareLength() Declaration public float GetSquareLength() Returns Type Description System.Single"
  },
  "api/ArucoUnity.Plugin.Aruco.Board.html": {
    "href": "api/ArucoUnity.Plugin.Aruco.Board.html",
    "title": "Class Aruco.Board | Aruco Unity documentation",
    "keywords": "Class Aruco.Board Inheritance System.Object Utility.HandleCppPtr Aruco.Board Aruco.CharucoBoard Aruco.GridBoard Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Utility.HandleCppPtr.DeleteCppPtr() Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public abstract class Board : Utility.HandleCppPtr Properties Dictionary Declaration public Aruco.Dictionary Dictionary { get; set; } Property Value Type Description Aruco.Dictionary Ids Declaration public Std.VectorInt Ids { get; set; } Property Value Type Description Std.VectorInt ObjPoints Declaration public Std.VectorVectorPoint3f ObjPoints { get; set; } Property Value Type Description Std.VectorVectorPoint3f"
  },
  "api/ArucoUnity.Objects.html": {
    "href": "api/ArucoUnity.Objects.html",
    "title": "Namespace ArucoUnity.Objects | Aruco Unity documentation",
    "keywords": "Namespace ArucoUnity.Objects Classes ArucoBoard Describes the shared properties of the ArUco boards. ArucoCharucoBoard Describes a ChArUco board. ArucoDiamond Describes an ChArUco diamond marker. ArucoGridBoard Describes an ArUco grid board. ArucoMarker Describes an ArUco marker. ArucoObject Describes the shared properties of all the ArUco objects. Trackers, Creators and Calibrators use this interface."
  },
  "api/ArucoUnity.Objects.Trackers.html": {
    "href": "api/ArucoUnity.Objects.Trackers.html",
    "title": "Namespace ArucoUnity.Objects.Trackers | Aruco Unity documentation",
    "keywords": "Namespace ArucoUnity.Objects.Trackers Classes ArucoCharucoBoardTracker ArucoDiamondTracker ArucoGridBoardTracker ArucoMarkerTracker ArucoObjectDetector Detects ArUco objects for a camera system according to DetectorParameters . ArucoObjectsController Manages a list of ArucoObject to detect for a camera system. ArucoObjectsTracker Detects ArucoObject , displays detections and applies the estimated transforms to gameObjects associated to the ArUco objects. See the OpenCV documentation for more information about the marker detection: http://docs.opencv.org/3.2.0/d5/dae/tutorial_aruco_detection.html ArucoObjectTracker Base for detecting and estimating the transform of an ArUco object. DetectorParametersController Editor controller for Aruco.DetectorParameters . Interfaces IArucoObjectsController Manages a list of ArucoObject . IArucoObjectsTracker IHasDetectorParameter Contains a Aruco.DetectorParameters ."
  },
  "api/ArucoUnity.Objects.Trackers.IHasDetectorParameter.html": {
    "href": "api/ArucoUnity.Objects.Trackers.IHasDetectorParameter.html",
    "title": "Interface IHasDetectorParameter | Aruco Unity documentation",
    "keywords": "Interface IHasDetectorParameter Contains a Aruco.DetectorParameters . Namespace : ArucoUnity.Objects.Trackers Assembly : cs.temp.dll.dll Syntax public interface IHasDetectorParameter Properties DetectorParameters Gets or sets the parameters to use for the detection. Declaration Aruco.DetectorParameters DetectorParameters { get; set; } Property Value Type Description Aruco.DetectorParameters"
  },
  "api/ArucoUnity.Objects.Trackers.IArucoObjectsTracker.html": {
    "href": "api/ArucoUnity.Objects.Trackers.IArucoObjectsTracker.html",
    "title": "Interface IArucoObjectsTracker | Aruco Unity documentation",
    "keywords": "Interface IArucoObjectsTracker Inherited Members IArucoObjectsController.ArucoObjectAdded IArucoObjectsController.ArucoObjectRemoved IArucoObjectsController.DictionaryAdded IArucoObjectsController.DictionaryRemoved IArucoObjectsController.ArucoObjects IArucoObjectsController.AddArucoObject(ArucoObject) IArucoObjectsController.RemoveArucoObject(ArucoObject) IArucoObjectsController.GetArucoObjects<U>(Aruco.Dictionary) IHasDetectorParameter.DetectorParameters Namespace : ArucoUnity.Objects.Trackers Assembly : cs.temp.dll.dll Syntax public interface IArucoObjectsTracker : IArucoCameraController, IArucoObjectsController, IHasDetectorParameter Properties ArucoCameraDisplay Gets or sets the optional camera display associated with the ArucoCamera. Declaration IArucoCameraDisplay ArucoCameraDisplay { get; set; } Property Value Type Description IArucoCameraDisplay DrawAxes Get or sets if displaying the axes of each detected ArucoBoard and ArucoDiamond . Declaration bool DrawAxes { get; set; } Property Value Type Description System.Boolean DrawDetectedCharucoMarkers Get or sets if displaying the markers of each detected ArucoCharucoBoard . Declaration bool DrawDetectedCharucoMarkers { get; set; } Property Value Type Description System.Boolean DrawDetectedDiamonds Get or sets if displaying each detected ArucoDiamond . Declaration bool DrawDetectedDiamonds { get; set; } Property Value Type Description System.Boolean DrawDetectedMarkers Get or sets if displaying the detected ArucoMarker in the . Declaration bool DrawDetectedMarkers { get; set; } Property Value Type Description System.Boolean DrawRejectedCandidates Get or sets if displaying the rejected markers candidates. Declaration bool DrawRejectedCandidates { get; set; } Property Value Type Description System.Boolean MarkerTracker Gets the ArUco markers tracker used. Declaration ArucoMarkerTracker MarkerTracker { get; } Property Value Type Description ArucoMarkerTracker RefineDetectedMarkers Gets or sets if using refine strategy to detect more markers using the ArucoBoard in the ArucoObjects list. Declaration bool RefineDetectedMarkers { get; set; } Property Value Type Description System.Boolean Methods DeactivateArucoObjects() Hides all the ArUco objects. Declaration void DeactivateArucoObjects() Detect() Detects the ArUco objects on the current . Declaration void Detect() Detect(Cv.Mat[]) Detects the ArUco objects on a set of custom images. Declaration void Detect(Cv.Mat[] images) Parameters Type Name Description Cv.Mat [] images The images set. Draw() Draws each detected ArucoObject on the . Declaration void Draw() Draw(Cv.Mat[]) Draws each detected ArucoObject on a set of custom images. Declaration void Draw(Cv.Mat[] images) Parameters Type Name Description Cv.Mat [] images The images set to draw. EstimateTransforms() Estimates the transforms of each detected ArucoObject on the current . Declaration void EstimateTransforms() UpdateTransforms() Updates transforms of each detected ArucoObject . ArucoCameraDisplay must be set. Declaration void UpdateTransforms()"
  },
  "api/ArucoUnity.Objects.Trackers.IArucoObjectsController.html": {
    "href": "api/ArucoUnity.Objects.Trackers.IArucoObjectsController.html",
    "title": "Interface IArucoObjectsController | Aruco Unity documentation",
    "keywords": "Interface IArucoObjectsController Manages a list of ArucoObject . Namespace : ArucoUnity.Objects.Trackers Assembly : cs.temp.dll.dll Syntax public interface IArucoObjectsController Properties ArucoObjects Gets the list of the ArUco objects to detect. Declaration Dictionary<Aruco.Dictionary, Dictionary<int, ArucoObject>> ArucoObjects { get; } Property Value Type Description Dictionary < Aruco.Dictionary , Dictionary < System.Int32 , ArucoObject >> Methods AddArucoObject(ArucoObject) Adds an ArUco object to the ArucoObjects list. Declaration void AddArucoObject(ArucoObject arucoObject) Parameters Type Name Description ArucoObject arucoObject The ArUco object to add. GetArucoObjects<U>(Aruco.Dictionary) Returns a sublist from ArucoObjects of ArUco objects of a precise type U in a certain dictionary . Declaration HashSet<U> GetArucoObjects<U>(Aruco.Dictionary dictionary) where U : ArucoObject Parameters Type Name Description Aruco.Dictionary dictionary The Aruco.Dictionary to use. Returns Type Description HashSet <U> The sublist. Type Parameters Name Description U The type of the ArUco objects in the returned sublist. RemoveArucoObject(ArucoObject) Removes an ArUco object to the ArucoObjects list. Declaration void RemoveArucoObject(ArucoObject arucoObject) Parameters Type Name Description ArucoObject arucoObject The ArUco object to remove. Events ArucoObjectAdded Called when an ArUco object has been added to ArucoObjects . Declaration event Action<ArucoObject> ArucoObjectAdded Event Type Type Description System.Action < ArucoObject > ArucoObjectRemoved Called when an ArUco object has been removed from ArucoObjects . Declaration event Action<ArucoObject> ArucoObjectRemoved Event Type Type Description System.Action < ArucoObject > DictionaryAdded Called when a new dictionary has been added to ArucoObjects . Declaration event Action<Aruco.Dictionary> DictionaryAdded Event Type Type Description System.Action < Aruco.Dictionary > DictionaryRemoved Called when a dictionary has been removed from ArucoObjects . Declaration event Action<Aruco.Dictionary> DictionaryRemoved Event Type Type Description System.Action < Aruco.Dictionary >"
  },
  "api/ArucoUnity.Objects.Trackers.DetectorParametersController.html": {
    "href": "api/ArucoUnity.Objects.Trackers.DetectorParametersController.html",
    "title": "Class DetectorParametersController | Aruco Unity documentation",
    "keywords": "Class DetectorParametersController Editor controller for Aruco.DetectorParameters . Inheritance System.Object DetectorParametersController Implements IHasDetectorParameter Namespace : ArucoUnity.Objects.Trackers Assembly : cs.temp.dll.dll Syntax public class DetectorParametersController : MonoBehaviour, IHasDetectorParameter Properties DetectorParameters Gets or sets the DetectorParameters . Declaration public Aruco.DetectorParameters DetectorParameters { get; set; } Property Value Type Description Aruco.DetectorParameters Methods Awake() Initializes DetectorParameters from editor fields. Declaration protected virtual void Awake() Implements IHasDetectorParameter"
  },
  "api/ArucoUnity.Objects.Trackers.ArucoObjectTracker.html": {
    "href": "api/ArucoUnity.Objects.Trackers.ArucoObjectTracker.html",
    "title": "Class ArucoObjectTracker | Aruco Unity documentation",
    "keywords": "Class ArucoObjectTracker Base for detecting and estimating the transform of an ArUco object. Inheritance System.Object ArucoObjectTracker ArucoCharucoBoardTracker ArucoDiamondTracker ArucoGridBoardTracker ArucoMarkerTracker Namespace : ArucoUnity.Objects.Trackers Assembly : cs.temp.dll.dll Syntax public abstract class ArucoObjectTracker Fields arucoCamera Declaration protected IArucoCamera arucoCamera Field Value Type Description IArucoCamera arucoCameraDisplay Declaration protected IArucoCameraDisplay arucoCameraDisplay Field Value Type Description IArucoCameraDisplay arucoCameraUndistortion Declaration protected IArucoCameraUndistortion arucoCameraUndistortion Field Value Type Description IArucoCameraUndistortion arucoTracker Declaration protected IArucoObjectsTracker arucoTracker Field Value Type Description IArucoObjectsTracker Properties IsActivated Is the tracker configured and activated? Declaration public bool IsActivated { get; protected set; } Property Value Type Description System.Boolean Methods Activate(IArucoObjectsTracker) Configure and activate the tracker. Declaration public virtual void Activate(IArucoObjectsTracker arucoTracker) Parameters Type Name Description IArucoObjectsTracker arucoTracker ArucoObjectsController_DictionaryAdded(Aruco.Dictionary) Update the properties when a new dictionary is added. Declaration protected virtual void ArucoObjectsController_DictionaryAdded(Aruco.Dictionary dictionary) Parameters Type Name Description Aruco.Dictionary dictionary The new dictionary. ArucoObjectsController_DictionaryRemoved(Aruco.Dictionary) Update the properties when a dictionary is removed. Declaration protected virtual void ArucoObjectsController_DictionaryRemoved(Aruco.Dictionary dictionary) Parameters Type Name Description Aruco.Dictionary dictionary The removed dictionary. Deactivate() Deactivate the tracker. Declaration public virtual void Deactivate() Detect(Int32, Aruco.Dictionary) Detect the ArUco objects on the current image of a camera. Declaration public virtual void Detect(int cameraId, Aruco.Dictionary dictionary) Parameters Type Name Description System.Int32 cameraId The id of the camera to use. Aruco.Dictionary dictionary The dictionary to use for the detection. Detect(Int32, Aruco.Dictionary, Cv.Mat) Detect the ArUco objects for a camera on an custom image. Declaration public virtual void Detect(int cameraId, Aruco.Dictionary dictionary, Cv.Mat image) Parameters Type Name Description System.Int32 cameraId The id of the camera. Aruco.Dictionary dictionary The dictionary to use for the detection. Cv.Mat image The image to use for the detection. Draw(Int32, Aruco.Dictionary) Draw the detected ArUco objects on the current image of a camera. Declaration public virtual void Draw(int cameraId, Aruco.Dictionary dictionary) Parameters Type Name Description System.Int32 cameraId The id of the camera to use. Aruco.Dictionary dictionary The dictionary to use. Draw(Int32, Aruco.Dictionary, Cv.Mat) Draw the detected ArUco objects for a camera on a custom image. Declaration public virtual void Draw(int cameraId, Aruco.Dictionary dictionary, Cv.Mat image) Parameters Type Name Description System.Int32 cameraId The id of the camera to use. Aruco.Dictionary dictionary The dictionary to use. Cv.Mat image Draw on this image. EstimateTransforms(Int32, Aruco.Dictionary) Estimate the gameObject's transform of each detected ArUco object. Declaration public virtual void EstimateTransforms(int cameraId, Aruco.Dictionary dictionary) Parameters Type Name Description System.Int32 cameraId The id of the camera to use. Aruco.Dictionary dictionary The dictionary to use. UpdateTransforms(Int32, Aruco.Dictionary) Place and orient the detected ArUco objects relative to a camera. Declaration public virtual void UpdateTransforms(int cameraId, Aruco.Dictionary dictionary) Parameters Type Name Description System.Int32 cameraId The id of the camera to use. Aruco.Dictionary dictionary The dictionary to use."
  },
  "api/ArucoUnity.Cameras.html": {
    "href": "api/ArucoUnity.Cameras.html",
    "title": "Namespace ArucoUnity.Cameras | Aruco Unity documentation",
    "keywords": "Namespace ArucoUnity.Cameras Classes ArucoCamera Captures images of a camera. ArucoCameraController Generic configurable controller using a ArucoCamera as starting dependency. ArucoWebcam Captures images of a webcam. StereoArucoCamera Captures images of stereo camera. StereoArucoWebcam Captures image of a stereoscopic webcam. WebcamController Get images from multiple webcams. Based on: http://answers.unity3d.com/answers/1155328/view.html Interfaces IArucoCamera Captures images of a camera. IArucoCameraController Configurable controller using a IArucoCamera ."
  },
  "api/ArucoUnity.Cameras.WebcamController.html": {
    "href": "api/ArucoUnity.Cameras.WebcamController.html",
    "title": "Class WebcamController | Aruco Unity documentation",
    "keywords": "Class WebcamController Get images from multiple webcams. Based on: http://answers.unity3d.com/answers/1155328/view.html Inheritance System.Object WebcamController Namespace : ArucoUnity.Cameras Assembly : cs.temp.dll.dll Syntax public class WebcamController : MonoBehaviour Fields Started Called when the webcams started. Declaration public Action<WebcamController> Started Field Value Type Description System.Action < WebcamController > starting Declaration protected bool starting Field Value Type Description System.Boolean Properties Devices Gets the used webcams. Declaration public List<WebCamDevice> Devices { get; } Property Value Type Description List < WebCamDevice > Ids Gets or sets the ids of the webcams to use. Declaration public List<int> Ids { get; } Property Value Type Description List < System.Int32 > IsConfigured Gets if the controller is configured. Declaration public bool IsConfigured { get; } Property Value Type Description System.Boolean IsStarted Gets if the webcams started. Declaration public bool IsStarted { get; } Property Value Type Description System.Boolean Textures Gets the textures of the used webcams. Declaration public List<WebCamTexture> Textures { get; } Property Value Type Description List < WebCamTexture > Textures2D Gets Textures converted in Texture2D. Declaration public List<Texture2D> Textures2D { get; } Property Value Type Description List < Texture2D > Textures2DFormat Gets or sets the format of Textures2D , by default . Declaration public TextureFormat Textures2DFormat { get; set; } Property Value Type Description TextureFormat Methods Awake() Initializes the properties. Declaration protected void Awake() Configure() Configures Devices and Textures from Ids . Declaration public void Configure() StartingAsync() Waits for Unity to start the webcams to set Textures2D , Textures and call . Declaration protected IEnumerator StartingAsync() Returns Type Description IEnumerator StartWebcams() Starts the webcams. Declaration public void StartWebcams() StopWebcams() Stops the webcams. Declaration public void StopWebcams()"
  },
  "api/ArucoUnity.Cameras.Undistortions.html": {
    "href": "api/ArucoUnity.Cameras.Undistortions.html",
    "title": "Namespace ArucoUnity.Cameras.Undistortions | Aruco Unity documentation",
    "keywords": "Namespace ArucoUnity.Cameras.Undistortions Classes ArucoCameraUndistortion Manages the processes of undistortion and rectification of Images . It's a time-consuming operation but it's necessary for cameras with an important distorsion for a good alignement of the images with the 3D content. Base class to reference in editor fields. ArucoCameraUndistortionGeneric<T> Manages the processes of undistortion and rectification of Images . Generic class to inherit, not the base class. OmnidirCameraUndistortion Manages the undistortion and rectification process for fisheye and omnidir ArucoCamera . OmnidirCameraUndistortionGeneric<T> Manages the undistortion and rectification process for fisheye and omnidir ArucoCamera . See the OpenCV's ccalib module documentation for more information: http://docs.opencv.org/3.4/dd/d12/tutorial_omnidir_calib_main.html PinholeCameraUndistortion Manages the undistortion and rectification process for pinhole ArucoCamera . PinholeCameraUndistortionGeneric<T> Manages the undistortion and rectification process for pinhole cameras. See the OpenCV's calibd module documentation for more information: http://docs.opencv.org/3.4/d9/d0c/group__calib3d.html StereoOmnidirCameraUndistortion Manages the undistortion and rectification process for fisheye and omnidir StereoArucoCamera . StereoPinholeCameraUndistortion Manages the undistortion and rectification process for pinhole StereoArucoCamera . Interfaces IArucoCameraUndistortion Manages the processes of undistortion and rectification of Images . Enums OmnidirCameraUndistortionGeneric<T>.RectificationTypes The different algorithms to use for the undistortion of the images."
  },
  "api/ArucoUnity.Cameras.Undistortions.StereoPinholeCameraUndistortion.html": {
    "href": "api/ArucoUnity.Cameras.Undistortions.StereoPinholeCameraUndistortion.html",
    "title": "Class StereoPinholeCameraUndistortion | Aruco Unity documentation",
    "keywords": "Class StereoPinholeCameraUndistortion Manages the undistortion and rectification process for pinhole StereoArucoCamera . Inheritance System.Object ArucoCameraController ArucoCameraUndistortion ArucoCameraUndistortionGeneric < StereoArucoCamera > PinholeCameraUndistortionGeneric < StereoArucoCamera > StereoPinholeCameraUndistortion Implements IArucoCameraUndistortion IArucoCameraController IConfigurableController IHasArucoCameraParameters Inherited Members PinholeCameraUndistortionGeneric<StereoArucoCamera>.RectificationScalingFactor PinholeCameraUndistortionGeneric<StereoArucoCamera>.InitializeUndistortionMaps() ArucoCameraUndistortionGeneric<StereoArucoCamera>.Awake() ArucoCameraUndistortion.undistortionCameraMapsNumber ArucoCameraUndistortion.CameraParameters ArucoCameraUndistortion.RectifiedCameraMatrices ArucoCameraUndistortion.RectificationMatrices ArucoCameraUndistortion.UndistortedDistCoeffs ArucoCameraUndistortion.UndistortionRectificationMaps ArucoCameraUndistortion.noRectificationMatrix ArucoCameraUndistortion.noDistCoeffs ArucoCameraUndistortion.noROI ArucoCameraUndistortion.CameraParametersFilePath ArucoCameraUndistortion.remapThread ArucoCameraUndistortion.Start() ArucoCameraUndistortion.Starting() ArucoCameraUndistortion.Stopping() ArucoCameraUndistortion.ArucoCamera_UndistortRectifyImages(Cv.Mat[], Byte[][]) ArucoCameraUndistortion.UndistortRectifyImages(Cv.Mat[]) ArucoCameraController.ArucoCamera Namespace : ArucoUnity.Cameras.Undistortions Assembly : cs.temp.dll.dll Syntax public class StereoPinholeCameraUndistortion : PinholeCameraUndistortionGeneric<StereoArucoCamera>, IArucoCameraUndistortion, IArucoCameraController, IConfigurableController, IHasArucoCameraParameters Properties RectificationZeroDisparity Gets or sets if the principal point of the images have the same pixel coordinates in the rectified views (true by default). Only applied if using a stereo camera. Declaration public bool RectificationZeroDisparity { get; set; } Property Value Type Description System.Boolean Methods Configuring() Declaration protected override void Configuring() Overrides ArucoCameraUndistortion.Configuring() InitializeRectification() Declaration protected override void InitializeRectification() Overrides ArucoCameraUndistortion.InitializeRectification() Implements IArucoCameraUndistortion IArucoCameraController IConfigurableController IHasArucoCameraParameters"
  },
  "api/ArucoUnity.Cameras.Undistortions.StereoOmnidirCameraUndistortion.html": {
    "href": "api/ArucoUnity.Cameras.Undistortions.StereoOmnidirCameraUndistortion.html",
    "title": "Class StereoOmnidirCameraUndistortion | Aruco Unity documentation",
    "keywords": "Class StereoOmnidirCameraUndistortion Manages the undistortion and rectification process for fisheye and omnidir StereoArucoCamera . Inheritance System.Object ArucoCameraController ArucoCameraUndistortion ArucoCameraUndistortionGeneric < StereoArucoCamera > OmnidirCameraUndistortionGeneric < StereoArucoCamera > StereoOmnidirCameraUndistortion Implements IArucoCameraUndistortion IArucoCameraController IConfigurableController IHasArucoCameraParameters Inherited Members OmnidirCameraUndistortionGeneric<StereoArucoCamera>.minPerspectiveFov OmnidirCameraUndistortionGeneric<StereoArucoCamera>.maxPerspectiveFov OmnidirCameraUndistortionGeneric<StereoArucoCamera>.RectificationType OmnidirCameraUndistortionGeneric<StereoArucoCamera>.PerspectiveFieldOfViews OmnidirCameraUndistortionGeneric<StereoArucoCamera>.rectifyFlags OmnidirCameraUndistortionGeneric<StereoArucoCamera>.OnValidate() OmnidirCameraUndistortionGeneric<StereoArucoCamera>.InitializeUndistortionMaps() ArucoCameraUndistortionGeneric<StereoArucoCamera>.Awake() ArucoCameraUndistortion.undistortionCameraMapsNumber ArucoCameraUndistortion.CameraParameters ArucoCameraUndistortion.RectifiedCameraMatrices ArucoCameraUndistortion.RectificationMatrices ArucoCameraUndistortion.UndistortedDistCoeffs ArucoCameraUndistortion.UndistortionRectificationMaps ArucoCameraUndistortion.noRectificationMatrix ArucoCameraUndistortion.noDistCoeffs ArucoCameraUndistortion.noROI ArucoCameraUndistortion.CameraParametersFilePath ArucoCameraUndistortion.remapThread ArucoCameraUndistortion.Start() ArucoCameraUndistortion.Starting() ArucoCameraUndistortion.Stopping() ArucoCameraUndistortion.ArucoCamera_UndistortRectifyImages(Cv.Mat[], Byte[][]) ArucoCameraUndistortion.UndistortRectifyImages(Cv.Mat[]) ArucoCameraController.ArucoCamera Namespace : ArucoUnity.Cameras.Undistortions Assembly : cs.temp.dll.dll Syntax public class StereoOmnidirCameraUndistortion : OmnidirCameraUndistortionGeneric<StereoArucoCamera>, IArucoCameraUndistortion, IArucoCameraController, IConfigurableController, IHasArucoCameraParameters Methods Configuring() Declaration protected override void Configuring() Overrides ArucoUnity.Cameras.Undistortions.OmnidirCameraUndistortionGeneric<ArucoUnity.Cameras.StereoArucoCamera>.Configuring() InitializeRectification() Initializes with the stereo camera parameters. Declaration protected override void InitializeRectification() Overrides ArucoUnity.Cameras.Undistortions.OmnidirCameraUndistortionGeneric<ArucoUnity.Cameras.StereoArucoCamera>.InitializeRectification() Implements IArucoCameraUndistortion IArucoCameraController IConfigurableController IHasArucoCameraParameters"
  },
  "api/ArucoUnity.Cameras.Undistortions.OmnidirCameraUndistortion.html": {
    "href": "api/ArucoUnity.Cameras.Undistortions.OmnidirCameraUndistortion.html",
    "title": "Class OmnidirCameraUndistortion | Aruco Unity documentation",
    "keywords": "Class OmnidirCameraUndistortion Manages the undistortion and rectification process for fisheye and omnidir ArucoCamera . Inheritance System.Object ArucoCameraController ArucoCameraUndistortion ArucoCameraUndistortionGeneric < ArucoCamera > OmnidirCameraUndistortionGeneric < ArucoCamera > OmnidirCameraUndistortion Implements IArucoCameraUndistortion IArucoCameraController IConfigurableController IHasArucoCameraParameters Inherited Members OmnidirCameraUndistortionGeneric<ArucoCamera>.minPerspectiveFov OmnidirCameraUndistortionGeneric<ArucoCamera>.maxPerspectiveFov OmnidirCameraUndistortionGeneric<ArucoCamera>.RectificationType OmnidirCameraUndistortionGeneric<ArucoCamera>.PerspectiveFieldOfViews OmnidirCameraUndistortionGeneric<ArucoCamera>.rectifyFlags OmnidirCameraUndistortionGeneric<ArucoCamera>.OnValidate() OmnidirCameraUndistortionGeneric<ArucoCamera>.Configuring() OmnidirCameraUndistortionGeneric<ArucoCamera>.InitializeRectification() OmnidirCameraUndistortionGeneric<ArucoCamera>.InitializeUndistortionMaps() ArucoCameraUndistortionGeneric<ArucoCamera>.Awake() ArucoCameraUndistortion.undistortionCameraMapsNumber ArucoCameraUndistortion.CameraParameters ArucoCameraUndistortion.RectifiedCameraMatrices ArucoCameraUndistortion.RectificationMatrices ArucoCameraUndistortion.UndistortedDistCoeffs ArucoCameraUndistortion.UndistortionRectificationMaps ArucoCameraUndistortion.noRectificationMatrix ArucoCameraUndistortion.noDistCoeffs ArucoCameraUndistortion.noROI ArucoCameraUndistortion.CameraParametersFilePath ArucoCameraUndistortion.remapThread ArucoCameraUndistortion.Start() ArucoCameraUndistortion.Starting() ArucoCameraUndistortion.Stopping() ArucoCameraUndistortion.ArucoCamera_UndistortRectifyImages(Cv.Mat[], Byte[][]) ArucoCameraUndistortion.UndistortRectifyImages(Cv.Mat[]) ArucoCameraController.ArucoCamera Namespace : ArucoUnity.Cameras.Undistortions Assembly : cs.temp.dll.dll Syntax public class OmnidirCameraUndistortion : OmnidirCameraUndistortionGeneric<ArucoCamera>, IArucoCameraUndistortion, IArucoCameraController, IConfigurableController, IHasArucoCameraParameters Implements IArucoCameraUndistortion IArucoCameraController IConfigurableController IHasArucoCameraParameters"
  },
  "api/ArucoUnity.Cameras.Undistortions.IArucoCameraUndistortion.html": {
    "href": "api/ArucoUnity.Cameras.Undistortions.IArucoCameraUndistortion.html",
    "title": "Interface IArucoCameraUndistortion | Aruco Unity documentation",
    "keywords": "Interface IArucoCameraUndistortion Manages the processes of undistortion and rectification of Images . Inherited Members IArucoCameraController.ArucoCamera IHasArucoCameraParameters.CameraParameters Namespace : ArucoUnity.Cameras.Undistortions Assembly : cs.temp.dll.dll Syntax public interface IArucoCameraUndistortion : IArucoCameraController, IConfigurableController, IHasArucoCameraParameters Properties RectificationMatrices Gets the rectification rotation matrices of each camera to make both camera image planes the same plane, in case of a stereo camera. Declaration Cv.Mat[] RectificationMatrices { get; } Property Value Type Description Cv.Mat [] RectifiedCameraMatrices Gets the new camera matrices of the undistorted and rectified images of each camera. Declaration Cv.Mat[] RectifiedCameraMatrices { get; } Property Value Type Description Cv.Mat [] UndistortedDistCoeffs Gets the distorsion coefficients of the undistorted and rectified images of each camera. Declaration Cv.Mat[] UndistortedDistCoeffs { get; } Property Value Type Description Cv.Mat [] UndistortionRectificationMaps Gets the undistortion and rectification images transformation map of each camera (two maps per camera). Declaration Cv.Mat[][] UndistortionRectificationMaps { get; } Property Value Type Description Cv.Mat [][]"
  },
  "api/ArucoUnity.Cameras.StereoArucoWebcam.html": {
    "href": "api/ArucoUnity.Cameras.StereoArucoWebcam.html",
    "title": "Class StereoArucoWebcam | Aruco Unity documentation",
    "keywords": "Class StereoArucoWebcam Captures image of a stereoscopic webcam. Inheritance System.Object ArucoCamera StereoArucoCamera StereoArucoWebcam Implements IArucoCamera IConfigurableController Inherited Members StereoArucoCamera.StereoCameraNumber StereoArucoCamera.CameraNumber StereoArucoCamera.CameraId1 StereoArucoCamera.CameraId2 ArucoCamera.dontFlipCode ArucoCamera.ImagesUpdated ArucoCamera.UndistortRectifyImages ArucoCamera.Textures ArucoCamera.Images ArucoCamera.ImageDatas ArucoCamera.ImageDataSizes ArucoCamera.ImageRatios ArucoCamera.NextImages ArucoCamera.NextImageDatas ArucoCamera.currentBuffer ArucoCamera.imageBuffers ArucoCamera.imageDataBuffers ArucoCamera.imagesToTextures ArucoCamera.imagesToTextureDatas ArucoCamera.imagesUpdatedThisFrame ArucoCamera.flipHorizontallyImages ArucoCamera.flipVerticallyImages ArucoCamera.imagesFlipCode ArucoCamera.Update() ArucoCamera.OnImagesUpdated() Namespace : ArucoUnity.Cameras Assembly : cs.temp.dll.dll Syntax public class StereoArucoWebcam : StereoArucoCamera, IArucoCamera, IConfigurableController Properties Name Declaration public override string Name { get; protected set; } Property Value Type Description System.String Overrides ArucoCamera.Name WebcamController Gets the controller of the webcam to use. Declaration public WebcamController WebcamController { get; } Property Value Type Description WebcamController WebcamId1 Gets or sets the id of the first webcam to use. Declaration public int WebcamId1 { get; set; } Property Value Type Description System.Int32 WebcamId2 Gets or sets the id of the second webcam to use. Declaration public int WebcamId2 { get; set; } Property Value Type Description System.Int32 Methods Awake() Initializes WebcamController and subscribes to. Declaration protected override void Awake() Configuring() Calls Configure() and sets Name . Declaration protected override void Configuring() Overrides ArucoCamera.Configuring() OnDestroy() Unsubscribes to WebcamController . Declaration protected override void OnDestroy() OnStarted() Blocks OnStarted() until IsStarted . Declaration protected override void OnStarted() Overrides ArucoCamera.OnStarted() Starting() Calls StartWebcams() . Declaration protected override void Starting() UpdatingImages() Copy current webcam images to NextImages . Declaration protected override bool UpdatingImages() Returns Type Description System.Boolean Overrides ArucoCamera.UpdatingImages() WebcamController_Started(WebcamController) Configures Textures and calls OnStarted() . Declaration protected virtual void WebcamController_Started(WebcamController webcamController) Parameters Type Name Description WebcamController webcamController Implements IArucoCamera IConfigurableController"
  },
  "api/ArucoUnity.Cameras.ArucoCameraController.html": {
    "href": "api/ArucoUnity.Cameras.ArucoCameraController.html",
    "title": "Class ArucoCameraController | Aruco Unity documentation",
    "keywords": "Class ArucoCameraController Generic configurable controller using a ArucoCamera as starting dependency. Inheritance System.Object ArucoCameraController ArucoCameraDisplay ArucoCameraUndistortion Implements IArucoCameraController IConfigurableController Namespace : ArucoUnity.Cameras Assembly : cs.temp.dll.dll Syntax public abstract class ArucoCameraController : ConfigurableController, IArucoCameraController, IConfigurableController Properties ArucoCamera Declaration public IArucoCamera ArucoCamera { get; set; } Property Value Type Description IArucoCamera Methods Configuring() Adds ArucoCamera as dependency. Declaration protected override void Configuring() Implements IArucoCameraController IConfigurableController"
  },
  "api/ArucoUnity.Calibration.Pinhole.html": {
    "href": "api/ArucoUnity.Calibration.Pinhole.html",
    "title": "Namespace ArucoUnity.Calibration.Pinhole | Aruco Unity documentation",
    "keywords": "Namespace ArucoUnity.Calibration.Pinhole Classes PinholeCameraCalibration PinholeCameraCalibrationBase<T> Calibrates a using the pinhole camera model with a ArucoBoard and saves the calibrated camera parameters in a file managed by ArucoCameraParametersController . PinholeCameraCalibrationFlags Manages the flags of the pinhole camera process. StereoPinholeCameraCalibration"
  },
  "api/ArucoUnity.Calibration.Pinhole.StereoPinholeCameraCalibration.html": {
    "href": "api/ArucoUnity.Calibration.Pinhole.StereoPinholeCameraCalibration.html",
    "title": "Class StereoPinholeCameraCalibration | Aruco Unity documentation",
    "keywords": "Class StereoPinholeCameraCalibration Inheritance System.Object ArucoObjectDetector ArucoCameraCalibration ArucoCameraCalibrationGeneric < StereoArucoCamera , PinholeCameraCalibrationFlags > PinholeCameraCalibrationBase < StereoArucoCamera > StereoPinholeCameraCalibration Implements IHasDetectorParameter Inherited Members PinholeCameraCalibrationBase<StereoArucoCamera>.InitializeCameraParameters() ArucoCameraCalibrationGeneric<StereoArucoCamera, PinholeCameraCalibrationFlags>.calibrationFlags ArucoCameraCalibrationGeneric<StereoArucoCamera, PinholeCameraCalibrationFlags>.Awake() ArucoCameraCalibration.CalibrationBoard ArucoCameraCalibration.RefineMarkersDetection ArucoCameraCalibration.CameraParametersController ArucoCameraCalibration.CalibrationFlags ArucoCameraCalibration.AllMarkerCorners ArucoCameraCalibration.AllMarkerIds ArucoCameraCalibration.Images ArucoCameraCalibration.Rvecs ArucoCameraCalibration.Tvecs ArucoCameraCalibration.MarkerCorners ArucoCameraCalibration.MarkerIds ArucoCameraCalibration.IsCalibrated ArucoCameraCalibration.CalibrationRunning ArucoCameraCalibration.Calibrated ArucoCameraCalibration.applicationPath ArucoCameraCalibration.calibratingThread ArucoCameraCalibration.calibratingMutex ArucoCameraCalibration.calibratingException ArucoCameraCalibration.LateUpdate() ArucoCameraCalibration.Configuring() ArucoCameraCalibration.Starting() ArucoCameraCalibration.Stopping() ArucoCameraCalibration.ResetCalibration() ArucoCameraCalibration.DetectMarkers() ArucoCameraCalibration.DrawDetectedMarkers() ArucoCameraCalibration.AddImages() ArucoCameraCalibration.CalibrateAsync() ArucoCameraCalibration.CancelCalibrateAsync() ArucoCameraCalibration.Calibrate() ArucoCameraCalibration.ArucoCamera_ImagesUpdated() ArucoObjectDetector.DetectorParameters Namespace : ArucoUnity.Calibration.Pinhole Assembly : cs.temp.dll.dll Syntax public class StereoPinholeCameraCalibration : PinholeCameraCalibrationBase<StereoArucoCamera>, IHasDetectorParameter Methods Calibrate(Std.VectorVectorPoint2f[], Std.VectorVectorPoint3f[]) Declaration protected override void Calibrate(Std.VectorVectorPoint2f[] imagePoints, Std.VectorVectorPoint3f[] objectPoints) Parameters Type Name Description Std.VectorVectorPoint2f [] imagePoints Std.VectorVectorPoint3f [] objectPoints Overrides ArucoCameraCalibration.Calibrate(Std.VectorVectorPoint2f[], Std.VectorVectorPoint3f[]) Implements IHasDetectorParameter"
  },
  "api/ArucoUnity.Calibration.Pinhole.PinholeCameraCalibration.html": {
    "href": "api/ArucoUnity.Calibration.Pinhole.PinholeCameraCalibration.html",
    "title": "Class PinholeCameraCalibration | Aruco Unity documentation",
    "keywords": "Class PinholeCameraCalibration Inheritance System.Object ArucoObjectDetector ArucoCameraCalibration ArucoCameraCalibrationGeneric < ArucoCamera , PinholeCameraCalibrationFlags > PinholeCameraCalibrationBase < ArucoCamera > PinholeCameraCalibration Implements IHasDetectorParameter Inherited Members PinholeCameraCalibrationBase<ArucoCamera>.InitializeCameraParameters() ArucoCameraCalibrationGeneric<ArucoCamera, PinholeCameraCalibrationFlags>.calibrationFlags ArucoCameraCalibrationGeneric<ArucoCamera, PinholeCameraCalibrationFlags>.Awake() ArucoCameraCalibration.CalibrationBoard ArucoCameraCalibration.RefineMarkersDetection ArucoCameraCalibration.CameraParametersController ArucoCameraCalibration.CalibrationFlags ArucoCameraCalibration.AllMarkerCorners ArucoCameraCalibration.AllMarkerIds ArucoCameraCalibration.Images ArucoCameraCalibration.Rvecs ArucoCameraCalibration.Tvecs ArucoCameraCalibration.MarkerCorners ArucoCameraCalibration.MarkerIds ArucoCameraCalibration.IsCalibrated ArucoCameraCalibration.CalibrationRunning ArucoCameraCalibration.Calibrated ArucoCameraCalibration.applicationPath ArucoCameraCalibration.calibratingThread ArucoCameraCalibration.calibratingMutex ArucoCameraCalibration.calibratingException ArucoCameraCalibration.LateUpdate() ArucoCameraCalibration.Configuring() ArucoCameraCalibration.Starting() ArucoCameraCalibration.Stopping() ArucoCameraCalibration.ResetCalibration() ArucoCameraCalibration.DetectMarkers() ArucoCameraCalibration.DrawDetectedMarkers() ArucoCameraCalibration.AddImages() ArucoCameraCalibration.CalibrateAsync() ArucoCameraCalibration.CancelCalibrateAsync() ArucoCameraCalibration.Calibrate() ArucoCameraCalibration.ArucoCamera_ImagesUpdated() ArucoObjectDetector.DetectorParameters Namespace : ArucoUnity.Calibration.Pinhole Assembly : cs.temp.dll.dll Syntax public class PinholeCameraCalibration : PinholeCameraCalibrationBase<ArucoCamera>, IHasDetectorParameter Methods Calibrate(Std.VectorVectorPoint2f[], Std.VectorVectorPoint3f[]) Declaration protected override void Calibrate(Std.VectorVectorPoint2f[] imagePoints, Std.VectorVectorPoint3f[] objectPoints) Parameters Type Name Description Std.VectorVectorPoint2f [] imagePoints Std.VectorVectorPoint3f [] objectPoints Overrides ArucoCameraCalibration.Calibrate(Std.VectorVectorPoint2f[], Std.VectorVectorPoint3f[]) Implements IHasDetectorParameter"
  },
  "api/ArucoUnity.Calibration.Omnidir.html": {
    "href": "api/ArucoUnity.Calibration.Omnidir.html",
    "title": "Namespace ArucoUnity.Calibration.Omnidir | Aruco Unity documentation",
    "keywords": "Namespace ArucoUnity.Calibration.Omnidir Classes OmnidirCameraCalibration OmnidirCameraCalibrationFlags Manages the flags of the omnidir calibration process. StereoOmnidirCameraCalibration"
  },
  "api/ArucoUnity.Calibration.Omnidir.OmnidirCameraCalibration.html": {
    "href": "api/ArucoUnity.Calibration.Omnidir.OmnidirCameraCalibration.html",
    "title": "Class OmnidirCameraCalibration | Aruco Unity documentation",
    "keywords": "Class OmnidirCameraCalibration Inheritance System.Object ArucoObjectDetector ArucoCameraCalibration ArucoCameraCalibrationGeneric < ArucoCamera , OmnidirCameraCalibrationFlags > OmnidirCameraCalibration Implements IHasDetectorParameter Inherited Members ArucoCameraCalibrationGeneric<ArucoCamera, OmnidirCameraCalibrationFlags>.calibrationFlags ArucoCameraCalibrationGeneric<ArucoCamera, OmnidirCameraCalibrationFlags>.Awake() ArucoCameraCalibration.CalibrationBoard ArucoCameraCalibration.RefineMarkersDetection ArucoCameraCalibration.CameraParametersController ArucoCameraCalibration.CalibrationFlags ArucoCameraCalibration.AllMarkerCorners ArucoCameraCalibration.AllMarkerIds ArucoCameraCalibration.Images ArucoCameraCalibration.Rvecs ArucoCameraCalibration.Tvecs ArucoCameraCalibration.MarkerCorners ArucoCameraCalibration.MarkerIds ArucoCameraCalibration.IsCalibrated ArucoCameraCalibration.CalibrationRunning ArucoCameraCalibration.Calibrated ArucoCameraCalibration.applicationPath ArucoCameraCalibration.calibratingThread ArucoCameraCalibration.calibratingMutex ArucoCameraCalibration.calibratingException ArucoCameraCalibration.LateUpdate() ArucoCameraCalibration.Configuring() ArucoCameraCalibration.Starting() ArucoCameraCalibration.Stopping() ArucoCameraCalibration.ResetCalibration() ArucoCameraCalibration.DetectMarkers() ArucoCameraCalibration.DrawDetectedMarkers() ArucoCameraCalibration.AddImages() ArucoCameraCalibration.CalibrateAsync() ArucoCameraCalibration.CancelCalibrateAsync() ArucoCameraCalibration.Calibrate() ArucoCameraCalibration.ArucoCamera_ImagesUpdated() ArucoCameraCalibration.InitializeCameraParameters() ArucoObjectDetector.DetectorParameters Namespace : ArucoUnity.Calibration.Omnidir Assembly : cs.temp.dll.dll Syntax public class OmnidirCameraCalibration : ArucoCameraCalibrationGeneric<ArucoCamera, OmnidirCameraCalibrationFlags>, IHasDetectorParameter Methods Calibrate(Std.VectorVectorPoint2f[], Std.VectorVectorPoint3f[]) Declaration protected override void Calibrate(Std.VectorVectorPoint2f[] imagePoints, Std.VectorVectorPoint3f[] objectPoints) Parameters Type Name Description Std.VectorVectorPoint2f [] imagePoints Std.VectorVectorPoint3f [] objectPoints Overrides ArucoCameraCalibration.Calibrate(Std.VectorVectorPoint2f[], Std.VectorVectorPoint3f[]) Implements IHasDetectorParameter"
  },
  "api/ArucoUnity.Calibration.CalibrationFlags.html": {
    "href": "api/ArucoUnity.Calibration.CalibrationFlags.html",
    "title": "Class CalibrationFlags | Aruco Unity documentation",
    "keywords": "Class CalibrationFlags Manages the flags of the ArucoCameraCalibration process. Base class to reference in editor fields. Inheritance System.Object CalibrationFlags CalibrationFlagsGeneric<T> Namespace : ArucoUnity.Calibration Assembly : cs.temp.dll.dll Syntax public abstract class CalibrationFlags : MonoBehaviour Properties FixKDistorsionCoefficients Gets or sets if the corresponding radial distortion coefficients are not changed during the calibration. If useIntrinsicGuess is set, the original DistCoeffs values in the camera parameters are used, otherwise they're set to 0. Declaration public bool[] FixKDistorsionCoefficients { get; set; } Property Value Type Description System.Boolean [] FixKLength Gets the length of FixKDistorsionCoefficients array. Declaration protected abstract int FixKLength { get; } Property Value Type Description System.Int32 UseIntrinsicGuess Gets or sets if the CameraMatrices has valid initial value that will be optimized by the calibration process. Declaration public bool UseIntrinsicGuess { get; set; } Property Value Type Description System.Boolean Value Gets or sets if the equivalent int, used by OpenCV, of the calibration flags. Declaration public abstract int Value { get; set; } Property Value Type Description System.Int32 Methods OnValidate() Keeps the FixKDistorsionCoefficients array to its fixed length FixKLength in the editor. Declaration protected virtual void OnValidate() UpdateCalibrationFlags() Updates Value from the flag properties. Declaration protected abstract void UpdateCalibrationFlags() UpdateCalibrationOptions() Updates the flag property values from Value . Declaration protected abstract void UpdateCalibrationOptions()"
  },
  "api/ArucoUnity.Calibration.ArucoCameraCalibrationGeneric-2.html": {
    "href": "api/ArucoUnity.Calibration.ArucoCameraCalibrationGeneric-2.html",
    "title": "Class ArucoCameraCalibrationGeneric<T, U> | Aruco Unity documentation",
    "keywords": "Class ArucoCameraCalibrationGeneric<T, U> Inheritance System.Object ArucoObjectDetector ArucoCameraCalibration ArucoCameraCalibrationGeneric<T, U> OmnidirCameraCalibration StereoOmnidirCameraCalibration PinholeCameraCalibrationBase<T> Implements IHasDetectorParameter Inherited Members ArucoCameraCalibration.CalibrationBoard ArucoCameraCalibration.RefineMarkersDetection ArucoCameraCalibration.CameraParametersController ArucoCameraCalibration.CalibrationFlags ArucoCameraCalibration.AllMarkerCorners ArucoCameraCalibration.AllMarkerIds ArucoCameraCalibration.Images ArucoCameraCalibration.Rvecs ArucoCameraCalibration.Tvecs ArucoCameraCalibration.MarkerCorners ArucoCameraCalibration.MarkerIds ArucoCameraCalibration.IsCalibrated ArucoCameraCalibration.CalibrationRunning ArucoCameraCalibration.Calibrated ArucoCameraCalibration.applicationPath ArucoCameraCalibration.calibratingThread ArucoCameraCalibration.calibratingMutex ArucoCameraCalibration.calibratingException ArucoCameraCalibration.LateUpdate() ArucoCameraCalibration.Configuring() ArucoCameraCalibration.Starting() ArucoCameraCalibration.Stopping() ArucoCameraCalibration.ResetCalibration() ArucoCameraCalibration.DetectMarkers() ArucoCameraCalibration.DrawDetectedMarkers() ArucoCameraCalibration.AddImages() ArucoCameraCalibration.CalibrateAsync() ArucoCameraCalibration.CancelCalibrateAsync() ArucoCameraCalibration.Calibrate() ArucoCameraCalibration.ArucoCamera_ImagesUpdated() ArucoCameraCalibration.InitializeCameraParameters() ArucoCameraCalibration.Calibrate(Std.VectorVectorPoint2f[], Std.VectorVectorPoint3f[]) ArucoObjectDetector.DetectorParameters Namespace : ArucoUnity.Calibration Assembly : cs.temp.dll.dll Syntax public abstract class ArucoCameraCalibrationGeneric<T, U> : ArucoCameraCalibration, IHasDetectorParameter where T : ArucoCamera where U : CalibrationFlags Type Parameters Name Description T U Fields calibrationFlags Declaration protected U calibrationFlags Field Value Type Description U Methods Awake() Sets and CalibrationFlags with editor fields if not nulls. Declaration protected override void Awake() Implements IHasDetectorParameter"
  },
  "api/ArucoUnity.Plugin.Utility.DeleteResponsibility.html": {
    "href": "api/ArucoUnity.Plugin.Utility.DeleteResponsibility.html",
    "title": "Enum Utility.DeleteResponsibility | Aruco Unity documentation",
    "keywords": "Enum Utility.DeleteResponsibility Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public enum DeleteResponsibility Fields Name Description False True"
  },
  "api/ArucoUnity.Plugin.Std.html": {
    "href": "api/ArucoUnity.Plugin.Std.html",
    "title": "Class Std | Aruco Unity documentation",
    "keywords": "Class Std Inheritance System.Object Std Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public static class Std"
  },
  "api/ArucoUnity.Plugin.Std.VectorVectorVectorPoint2f.html": {
    "href": "api/ArucoUnity.Plugin.Std.VectorVectorVectorPoint2f.html",
    "title": "Class Std.VectorVectorVectorPoint2f | Aruco Unity documentation",
    "keywords": "Class Std.VectorVectorVectorPoint2f Inheritance System.Object Utility.HandleCppPtr Std.VectorVectorVectorPoint2f Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class VectorVectorVectorPoint2f : Utility.HandleCppPtr Constructors VectorVectorVectorPoint2f() Declaration public VectorVectorVectorPoint2f() VectorVectorVectorPoint2f(IntPtr, Utility.DeleteResponsibility) Declaration public VectorVectorVectorPoint2f(IntPtr vectorVectorVectorPoint2fPtr, Utility.DeleteResponsibility deleteResponsibility = Utility.DeleteResponsibility.True) Parameters Type Name Description System.IntPtr vectorVectorVectorPoint2fPtr Utility.DeleteResponsibility deleteResponsibility Methods At(UInt32) Declaration public Std.VectorVectorPoint2f At(uint pos) Parameters Type Name Description System.UInt32 pos Returns Type Description Std.VectorVectorPoint2f Data() Declaration public Std.VectorVectorPoint2f[] Data() Returns Type Description Std.VectorVectorPoint2f [] DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() PushBack(Std.VectorVectorPoint2f) Declaration public void PushBack(Std.VectorVectorPoint2f value) Parameters Type Name Description Std.VectorVectorPoint2f value Size() Declaration public uint Size() Returns Type Description System.UInt32"
  },
  "api/ArucoUnity.Plugin.Std.VectorVectorPoint3f.html": {
    "href": "api/ArucoUnity.Plugin.Std.VectorVectorPoint3f.html",
    "title": "Class Std.VectorVectorPoint3f | Aruco Unity documentation",
    "keywords": "Class Std.VectorVectorPoint3f Inheritance System.Object Utility.HandleCppPtr Std.VectorVectorPoint3f Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class VectorVectorPoint3f : Utility.HandleCppPtr Constructors VectorVectorPoint3f() Declaration public VectorVectorPoint3f() VectorVectorPoint3f(IntPtr, Utility.DeleteResponsibility) Declaration public VectorVectorPoint3f(IntPtr vectorVectorPoint3fPtr, Utility.DeleteResponsibility deleteResponsibility = Utility.DeleteResponsibility.True) Parameters Type Name Description System.IntPtr vectorVectorPoint3fPtr Utility.DeleteResponsibility deleteResponsibility Methods At(UInt32) Declaration public Std.VectorPoint3f At(uint pos) Parameters Type Name Description System.UInt32 pos Returns Type Description Std.VectorPoint3f Data() Declaration public Std.VectorPoint3f[] Data() Returns Type Description Std.VectorPoint3f [] DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() PushBack(Std.VectorPoint3f) Declaration public void PushBack(Std.VectorPoint3f value) Parameters Type Name Description Std.VectorPoint3f value Size() Declaration public uint Size() Returns Type Description System.UInt32"
  },
  "api/ArucoUnity.Plugin.Std.VectorVectorPoint2f.html": {
    "href": "api/ArucoUnity.Plugin.Std.VectorVectorPoint2f.html",
    "title": "Class Std.VectorVectorPoint2f | Aruco Unity documentation",
    "keywords": "Class Std.VectorVectorPoint2f Inheritance System.Object Utility.HandleCppPtr Std.VectorVectorPoint2f Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class VectorVectorPoint2f : Utility.HandleCppPtr Constructors VectorVectorPoint2f() Declaration public VectorVectorPoint2f() VectorVectorPoint2f(IntPtr, Utility.DeleteResponsibility) Declaration public VectorVectorPoint2f(IntPtr vectorVectorPoint2fPtr, Utility.DeleteResponsibility deleteResponsibility = Utility.DeleteResponsibility.True) Parameters Type Name Description System.IntPtr vectorVectorPoint2fPtr Utility.DeleteResponsibility deleteResponsibility Methods At(UInt32) Declaration public Std.VectorPoint2f At(uint pos) Parameters Type Name Description System.UInt32 pos Returns Type Description Std.VectorPoint2f Data() Declaration public Std.VectorPoint2f[] Data() Returns Type Description Std.VectorPoint2f [] DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() PushBack(Std.VectorPoint2f) Declaration public void PushBack(Std.VectorPoint2f value) Parameters Type Name Description Std.VectorPoint2f value Size() Declaration public uint Size() Returns Type Description System.UInt32"
  },
  "api/ArucoUnity.Plugin.Std.VectorVectorInt.html": {
    "href": "api/ArucoUnity.Plugin.Std.VectorVectorInt.html",
    "title": "Class Std.VectorVectorInt | Aruco Unity documentation",
    "keywords": "Class Std.VectorVectorInt Inheritance System.Object Utility.HandleCppPtr Std.VectorVectorInt Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class VectorVectorInt : Utility.HandleCppPtr Constructors VectorVectorInt() Declaration public VectorVectorInt() VectorVectorInt(IntPtr, Utility.DeleteResponsibility) Declaration public VectorVectorInt(IntPtr vectorVectorIntPtr, Utility.DeleteResponsibility deleteResponsibility = Utility.DeleteResponsibility.True) Parameters Type Name Description System.IntPtr vectorVectorIntPtr Utility.DeleteResponsibility deleteResponsibility Methods At(UInt32) Declaration public Std.VectorInt At(uint pos) Parameters Type Name Description System.UInt32 pos Returns Type Description Std.VectorInt Data() Declaration public Std.VectorInt[] Data() Returns Type Description Std.VectorInt [] DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() PushBack(Std.VectorInt) Declaration public void PushBack(Std.VectorInt value) Parameters Type Name Description Std.VectorInt value Size() Declaration public uint Size() Returns Type Description System.UInt32"
  },
  "api/ArucoUnity.Plugin.Std.VectorVec4i.html": {
    "href": "api/ArucoUnity.Plugin.Std.VectorVec4i.html",
    "title": "Class Std.VectorVec4i | Aruco Unity documentation",
    "keywords": "Class Std.VectorVec4i Inheritance System.Object Utility.HandleCppPtr Std.VectorVec4i Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class VectorVec4i : Utility.HandleCppPtr Constructors VectorVec4i() Declaration public VectorVec4i() VectorVec4i(IntPtr, Utility.DeleteResponsibility) Declaration public VectorVec4i(IntPtr vectorVec4iPtr, Utility.DeleteResponsibility deleteResponsibility = Utility.DeleteResponsibility.True) Parameters Type Name Description System.IntPtr vectorVec4iPtr Utility.DeleteResponsibility deleteResponsibility Methods At(UInt32) Declaration public Cv.Vec4i At(uint pos) Parameters Type Name Description System.UInt32 pos Returns Type Description Cv.Vec4i Data() Declaration public Cv.Vec4i[] Data() Returns Type Description Cv.Vec4i [] DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() PushBack(Cv.Vec4i) Declaration public void PushBack(Cv.Vec4i value) Parameters Type Name Description Cv.Vec4i value Size() Declaration public uint Size() Returns Type Description System.UInt32"
  },
  "api/ArucoUnity.Plugin.Cv.Vec3d.html": {
    "href": "api/ArucoUnity.Plugin.Cv.Vec3d.html",
    "title": "Class Cv.Vec3d | Aruco Unity documentation",
    "keywords": "Class Cv.Vec3d Inheritance System.Object Utility.HandleCppPtr Cv.Vec3d Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class Vec3d : Utility.HandleCppPtr Constructors Vec3d(Double, Double, Double) Declaration public Vec3d(double v0 = 0, double v1 = 0, double v2 = 0) Parameters Type Name Description System.Double v0 System.Double v1 System.Double v2 Vec3d(IntPtr, Utility.DeleteResponsibility) Declaration public Vec3d(IntPtr vec3dPtr, Utility.DeleteResponsibility deleteResponsibility = Utility.DeleteResponsibility.True) Parameters Type Name Description System.IntPtr vec3dPtr Utility.DeleteResponsibility deleteResponsibility Methods DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() Get(Int32) Declaration public double Get(int i) Parameters Type Name Description System.Int32 i Returns Type Description System.Double Set(Int32, Double) Declaration public void Set(int i, double value) Parameters Type Name Description System.Int32 i System.Double value ToPosition() Converts the Vec3d as an OpenCV's translation vector to a Vector3. Declaration public Vector3 ToPosition() Returns Type Description Vector3 The converted vector. ToRotation() Converts the Vec3d as an OpenCV's rotation vector to a Quaternion. Based on: http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/ Declaration public Quaternion ToRotation() Returns Type Description Quaternion The converted quaternion."
  },
  "api/ArucoUnity.Plugin.Cv.BorderTypes.html": {
    "href": "api/ArucoUnity.Plugin.Cv.BorderTypes.html",
    "title": "Enum Cv.BorderTypes | Aruco Unity documentation",
    "keywords": "Enum Cv.BorderTypes See the OpenCV documentation for more information: http://docs.opencv.org/3.2.0/d2/de8/group__core__array.html#ga209f2f4869e304c82d07739337eae7c5 Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public enum BorderTypes Fields Name Description Constant Default Isolated Reflect Reflect101 Replicate Transparent Wrap"
  },
  "api/ArucoUnity.Plugin.Aruco.html": {
    "href": "api/ArucoUnity.Plugin.Aruco.html",
    "title": "Class Aruco | Aruco Unity documentation",
    "keywords": "Class Aruco Inheritance System.Object Aruco Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public static class Aruco Methods CalibrateCameraAruco(Std.VectorVectorPoint2f, Std.VectorInt, Std.VectorInt, Aruco.Board, Cv.Size, Cv.Mat, Cv.Mat) Declaration public static double CalibrateCameraAruco(Std.VectorVectorPoint2f corners, Std.VectorInt ids, Std.VectorInt counter, Aruco.Board board, Cv.Size imageSize, Cv.Mat cameraMatrix, Cv.Mat distCoeffs) Parameters Type Name Description Std.VectorVectorPoint2f corners Std.VectorInt ids Std.VectorInt counter Aruco.Board board Cv.Size imageSize Cv.Mat cameraMatrix Cv.Mat distCoeffs Returns Type Description System.Double CalibrateCameraAruco(Std.VectorVectorPoint2f, Std.VectorInt, Std.VectorInt, Aruco.Board, Cv.Size, Cv.Mat, Cv.Mat, out Std.VectorMat) Declaration public static double CalibrateCameraAruco(Std.VectorVectorPoint2f corners, Std.VectorInt ids, Std.VectorInt counter, Aruco.Board board, Cv.Size imageSize, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, out Std.VectorMat rvecs) Parameters Type Name Description Std.VectorVectorPoint2f corners Std.VectorInt ids Std.VectorInt counter Aruco.Board board Cv.Size imageSize Cv.Mat cameraMatrix Cv.Mat distCoeffs Std.VectorMat rvecs Returns Type Description System.Double CalibrateCameraAruco(Std.VectorVectorPoint2f, Std.VectorInt, Std.VectorInt, Aruco.Board, Cv.Size, Cv.Mat, Cv.Mat, out Std.VectorMat, out Std.VectorMat, Cv.Calib) Declaration public static double CalibrateCameraAruco(Std.VectorVectorPoint2f corners, Std.VectorInt ids, Std.VectorInt counter, Aruco.Board board, Cv.Size imageSize, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, out Std.VectorMat rvecs, out Std.VectorMat tvecs, Cv.Calib flags = (Cv.Calib)0) Parameters Type Name Description Std.VectorVectorPoint2f corners Std.VectorInt ids Std.VectorInt counter Aruco.Board board Cv.Size imageSize Cv.Mat cameraMatrix Cv.Mat distCoeffs Std.VectorMat rvecs Std.VectorMat tvecs Cv.Calib flags Returns Type Description System.Double CalibrateCameraAruco(Std.VectorVectorPoint2f, Std.VectorInt, Std.VectorInt, Aruco.Board, Cv.Size, Cv.Mat, Cv.Mat, out Std.VectorMat, out Std.VectorMat, Cv.Calib, Cv.TermCriteria) Declaration public static double CalibrateCameraAruco(Std.VectorVectorPoint2f corners, Std.VectorInt ids, Std.VectorInt counter, Aruco.Board board, Cv.Size imageSize, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, out Std.VectorMat rvecs, out Std.VectorMat tvecs, Cv.Calib flags, Cv.TermCriteria criteria) Parameters Type Name Description Std.VectorVectorPoint2f corners Std.VectorInt ids Std.VectorInt counter Aruco.Board board Cv.Size imageSize Cv.Mat cameraMatrix Cv.Mat distCoeffs Std.VectorMat rvecs Std.VectorMat tvecs Cv.Calib flags Cv.TermCriteria criteria Returns Type Description System.Double CalibrateCameraCharuco(Std.VectorVectorPoint2f, Std.VectorVectorInt, Aruco.CharucoBoard, Cv.Size, Cv.Mat, Cv.Mat) Declaration public static double CalibrateCameraCharuco(Std.VectorVectorPoint2f charucoCorners, Std.VectorVectorInt charucoIds, Aruco.CharucoBoard board, Cv.Size imageSize, Cv.Mat cameraMatrix, Cv.Mat distCoeffs) Parameters Type Name Description Std.VectorVectorPoint2f charucoCorners Std.VectorVectorInt charucoIds Aruco.CharucoBoard board Cv.Size imageSize Cv.Mat cameraMatrix Cv.Mat distCoeffs Returns Type Description System.Double CalibrateCameraCharuco(Std.VectorVectorPoint2f, Std.VectorVectorInt, Aruco.CharucoBoard, Cv.Size, Cv.Mat, Cv.Mat, out Std.VectorMat) Declaration public static double CalibrateCameraCharuco(Std.VectorVectorPoint2f charucoCorners, Std.VectorVectorInt charucoIds, Aruco.CharucoBoard board, Cv.Size imageSize, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, out Std.VectorMat rvecs) Parameters Type Name Description Std.VectorVectorPoint2f charucoCorners Std.VectorVectorInt charucoIds Aruco.CharucoBoard board Cv.Size imageSize Cv.Mat cameraMatrix Cv.Mat distCoeffs Std.VectorMat rvecs Returns Type Description System.Double CalibrateCameraCharuco(Std.VectorVectorPoint2f, Std.VectorVectorInt, Aruco.CharucoBoard, Cv.Size, Cv.Mat, Cv.Mat, out Std.VectorMat, out Std.VectorMat, Cv.Calib) Declaration public static double CalibrateCameraCharuco(Std.VectorVectorPoint2f charucoCorners, Std.VectorVectorInt charucoIds, Aruco.CharucoBoard board, Cv.Size imageSize, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, out Std.VectorMat rvecs, out Std.VectorMat tvecs, Cv.Calib flags = (Cv.Calib)0) Parameters Type Name Description Std.VectorVectorPoint2f charucoCorners Std.VectorVectorInt charucoIds Aruco.CharucoBoard board Cv.Size imageSize Cv.Mat cameraMatrix Cv.Mat distCoeffs Std.VectorMat rvecs Std.VectorMat tvecs Cv.Calib flags Returns Type Description System.Double CalibrateCameraCharuco(Std.VectorVectorPoint2f, Std.VectorVectorInt, Aruco.CharucoBoard, Cv.Size, Cv.Mat, Cv.Mat, out Std.VectorMat, out Std.VectorMat, Cv.Calib, Cv.TermCriteria) Declaration public static double CalibrateCameraCharuco(Std.VectorVectorPoint2f charucoCorners, Std.VectorVectorInt charucoIds, Aruco.CharucoBoard board, Cv.Size imageSize, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, out Std.VectorMat rvecs, out Std.VectorMat tvecs, Cv.Calib flags, Cv.TermCriteria criteria) Parameters Type Name Description Std.VectorVectorPoint2f charucoCorners Std.VectorVectorInt charucoIds Aruco.CharucoBoard board Cv.Size imageSize Cv.Mat cameraMatrix Cv.Mat distCoeffs Std.VectorMat rvecs Std.VectorMat tvecs Cv.Calib flags Cv.TermCriteria criteria Returns Type Description System.Double DetectCharucoDiamond(Cv.Mat, Std.VectorVectorPoint2f, Std.VectorInt, Single, out Std.VectorVectorPoint2f, out Std.VectorVec4i) Declaration public static void DetectCharucoDiamond(Cv.Mat image, Std.VectorVectorPoint2f markerCorners, Std.VectorInt markerIds, float squareMarkerLengthRate, out Std.VectorVectorPoint2f diamondCorners, out Std.VectorVec4i diamondIds) Parameters Type Name Description Cv.Mat image Std.VectorVectorPoint2f markerCorners Std.VectorInt markerIds System.Single squareMarkerLengthRate Std.VectorVectorPoint2f diamondCorners Std.VectorVec4i diamondIds DetectCharucoDiamond(Cv.Mat, Std.VectorVectorPoint2f, Std.VectorInt, Single, out Std.VectorVectorPoint2f, out Std.VectorVec4i, Cv.Mat) Declaration public static void DetectCharucoDiamond(Cv.Mat image, Std.VectorVectorPoint2f markerCorners, Std.VectorInt markerIds, float squareMarkerLengthRate, out Std.VectorVectorPoint2f diamondCorners, out Std.VectorVec4i diamondIds, Cv.Mat cameraMatrix) Parameters Type Name Description Cv.Mat image Std.VectorVectorPoint2f markerCorners Std.VectorInt markerIds System.Single squareMarkerLengthRate Std.VectorVectorPoint2f diamondCorners Std.VectorVec4i diamondIds Cv.Mat cameraMatrix DetectCharucoDiamond(Cv.Mat, Std.VectorVectorPoint2f, Std.VectorInt, Single, out Std.VectorVectorPoint2f, out Std.VectorVec4i, Cv.Mat, Cv.Mat) Declaration public static void DetectCharucoDiamond(Cv.Mat image, Std.VectorVectorPoint2f markerCorners, Std.VectorInt markerIds, float squareMarkerLengthRate, out Std.VectorVectorPoint2f diamondCorners, out Std.VectorVec4i diamondIds, Cv.Mat cameraMatrix, Cv.Mat distCoeffs) Parameters Type Name Description Cv.Mat image Std.VectorVectorPoint2f markerCorners Std.VectorInt markerIds System.Single squareMarkerLengthRate Std.VectorVectorPoint2f diamondCorners Std.VectorVec4i diamondIds Cv.Mat cameraMatrix Cv.Mat distCoeffs DetectMarkers(Cv.Mat, Aruco.Dictionary, out Std.VectorVectorPoint2f, out Std.VectorInt) Declaration public static void DetectMarkers(Cv.Mat image, Aruco.Dictionary dictionary, out Std.VectorVectorPoint2f corners, out Std.VectorInt ids) Parameters Type Name Description Cv.Mat image Aruco.Dictionary dictionary Std.VectorVectorPoint2f corners Std.VectorInt ids DetectMarkers(Cv.Mat, Aruco.Dictionary, out Std.VectorVectorPoint2f, out Std.VectorInt, Aruco.DetectorParameters) Declaration public static void DetectMarkers(Cv.Mat image, Aruco.Dictionary dictionary, out Std.VectorVectorPoint2f corners, out Std.VectorInt ids, Aruco.DetectorParameters parameters) Parameters Type Name Description Cv.Mat image Aruco.Dictionary dictionary Std.VectorVectorPoint2f corners Std.VectorInt ids Aruco.DetectorParameters parameters DetectMarkers(Cv.Mat, Aruco.Dictionary, out Std.VectorVectorPoint2f, out Std.VectorInt, Aruco.DetectorParameters, out Std.VectorVectorPoint2f) Declaration public static void DetectMarkers(Cv.Mat image, Aruco.Dictionary dictionary, out Std.VectorVectorPoint2f corners, out Std.VectorInt ids, Aruco.DetectorParameters parameters, out Std.VectorVectorPoint2f rejectedImgPoints) Parameters Type Name Description Cv.Mat image Aruco.Dictionary dictionary Std.VectorVectorPoint2f corners Std.VectorInt ids Aruco.DetectorParameters parameters Std.VectorVectorPoint2f rejectedImgPoints DrawAxis(Cv.Mat, Cv.Mat, Cv.Mat, Cv.Vec3d, Cv.Vec3d, Single) Declaration public static void DrawAxis(Cv.Mat image, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, Cv.Vec3d rvec, Cv.Vec3d tvec, float length) Parameters Type Name Description Cv.Mat image Cv.Mat cameraMatrix Cv.Mat distCoeffs Cv.Vec3d rvec Cv.Vec3d tvec System.Single length DrawCharucoDiamond(Aruco.Dictionary, Cv.Vec4i, Int32, Int32, out Cv.Mat, Int32, Int32) Declaration public static void DrawCharucoDiamond(Aruco.Dictionary dictionary, Cv.Vec4i ids, int squareLength, int markerLength, out Cv.Mat image, int marginSize = 0, int borderBits = 1) Parameters Type Name Description Aruco.Dictionary dictionary Cv.Vec4i ids System.Int32 squareLength System.Int32 markerLength Cv.Mat image System.Int32 marginSize System.Int32 borderBits DrawDetectedCornersCharuco(Cv.Mat, Std.VectorPoint2f) Declaration public static void DrawDetectedCornersCharuco(Cv.Mat image, Std.VectorPoint2f charucoCorners) Parameters Type Name Description Cv.Mat image Std.VectorPoint2f charucoCorners DrawDetectedCornersCharuco(Cv.Mat, Std.VectorPoint2f, Std.VectorInt) Declaration public static void DrawDetectedCornersCharuco(Cv.Mat image, Std.VectorPoint2f charucoCorners, Std.VectorInt charucoIds) Parameters Type Name Description Cv.Mat image Std.VectorPoint2f charucoCorners Std.VectorInt charucoIds DrawDetectedCornersCharuco(Cv.Mat, Std.VectorPoint2f, Std.VectorInt, Cv.Scalar) Declaration public static void DrawDetectedCornersCharuco(Cv.Mat image, Std.VectorPoint2f charucoCorners, Std.VectorInt charucoIds, Cv.Scalar cornerColor) Parameters Type Name Description Cv.Mat image Std.VectorPoint2f charucoCorners Std.VectorInt charucoIds Cv.Scalar cornerColor DrawDetectedDiamonds(Cv.Mat, Std.VectorVectorPoint2f) Declaration public static void DrawDetectedDiamonds(Cv.Mat image, Std.VectorVectorPoint2f diamondCorners) Parameters Type Name Description Cv.Mat image Std.VectorVectorPoint2f diamondCorners DrawDetectedDiamonds(Cv.Mat, Std.VectorVectorPoint2f, Std.VectorVec4i) Declaration public static void DrawDetectedDiamonds(Cv.Mat image, Std.VectorVectorPoint2f diamondCorners, Std.VectorVec4i diamondIds) Parameters Type Name Description Cv.Mat image Std.VectorVectorPoint2f diamondCorners Std.VectorVec4i diamondIds DrawDetectedDiamonds(Cv.Mat, Std.VectorVectorPoint2f, Std.VectorVec4i, Cv.Scalar) Declaration public static void DrawDetectedDiamonds(Cv.Mat image, Std.VectorVectorPoint2f diamondCorners, Std.VectorVec4i diamondIds, Cv.Scalar borderColor) Parameters Type Name Description Cv.Mat image Std.VectorVectorPoint2f diamondCorners Std.VectorVec4i diamondIds Cv.Scalar borderColor DrawDetectedMarkers(Cv.Mat, Std.VectorVectorPoint2f) Declaration public static void DrawDetectedMarkers(Cv.Mat image, Std.VectorVectorPoint2f diamondCorners) Parameters Type Name Description Cv.Mat image Std.VectorVectorPoint2f diamondCorners DrawDetectedMarkers(Cv.Mat, Std.VectorVectorPoint2f, Std.VectorInt) Declaration public static void DrawDetectedMarkers(Cv.Mat image, Std.VectorVectorPoint2f diamondCorners, Std.VectorInt ids) Parameters Type Name Description Cv.Mat image Std.VectorVectorPoint2f diamondCorners Std.VectorInt ids DrawDetectedMarkers(Cv.Mat, Std.VectorVectorPoint2f, Std.VectorInt, Cv.Scalar) Declaration public static void DrawDetectedMarkers(Cv.Mat image, Std.VectorVectorPoint2f corners, Std.VectorInt ids, Cv.Scalar borderColor) Parameters Type Name Description Cv.Mat image Std.VectorVectorPoint2f corners Std.VectorInt ids Cv.Scalar borderColor EstimatePoseBoard(Std.VectorVectorPoint2f, Std.VectorInt, Aruco.Board, Cv.Mat, Cv.Mat, out Cv.Vec3d, out Cv.Vec3d) Declaration public static int EstimatePoseBoard(Std.VectorVectorPoint2f corners, Std.VectorInt ids, Aruco.Board board, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, out Cv.Vec3d rvec, out Cv.Vec3d tvec) Parameters Type Name Description Std.VectorVectorPoint2f corners Std.VectorInt ids Aruco.Board board Cv.Mat cameraMatrix Cv.Mat distCoeffs Cv.Vec3d rvec Cv.Vec3d tvec Returns Type Description System.Int32 EstimatePoseCharucoBoard(Std.VectorPoint2f, Std.VectorInt, Aruco.CharucoBoard, Cv.Mat, Cv.Mat, out Cv.Vec3d, out Cv.Vec3d) Declaration public static bool EstimatePoseCharucoBoard(Std.VectorPoint2f charucoCorners, Std.VectorInt charucoIds, Aruco.CharucoBoard board, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, out Cv.Vec3d rvec, out Cv.Vec3d tvec) Parameters Type Name Description Std.VectorPoint2f charucoCorners Std.VectorInt charucoIds Aruco.CharucoBoard board Cv.Mat cameraMatrix Cv.Mat distCoeffs Cv.Vec3d rvec Cv.Vec3d tvec Returns Type Description System.Boolean EstimatePoseSingleMarkers(Std.VectorVectorPoint2f, Single, Cv.Mat, Cv.Mat, out Std.VectorVec3d, out Std.VectorVec3d) Declaration public static void EstimatePoseSingleMarkers(Std.VectorVectorPoint2f corners, float markerLength, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, out Std.VectorVec3d rvecs, out Std.VectorVec3d tvecs) Parameters Type Name Description Std.VectorVectorPoint2f corners System.Single markerLength Cv.Mat cameraMatrix Cv.Mat distCoeffs Std.VectorVec3d rvecs Std.VectorVec3d tvecs GenerateCustomDictionary(Int32, Int32) Declaration public static Aruco.Dictionary GenerateCustomDictionary(int nMarkers, int markerSize) Parameters Type Name Description System.Int32 nMarkers System.Int32 markerSize Returns Type Description Aruco.Dictionary GenerateCustomDictionary(Int32, Int32, Aruco.Dictionary) Declaration public static Aruco.Dictionary GenerateCustomDictionary(int nMarkers, int markerSize, Aruco.Dictionary baseDictionary) Parameters Type Name Description System.Int32 nMarkers System.Int32 markerSize Aruco.Dictionary baseDictionary Returns Type Description Aruco.Dictionary GetBoardObjectAndImagePoints(Aruco.Board, Std.VectorVectorPoint2f, Std.VectorInt, out Std.VectorPoint3f, out Std.VectorPoint2f) Declaration public static void GetBoardObjectAndImagePoints(Aruco.Board board, Std.VectorVectorPoint2f detectedCorners, Std.VectorInt detectedIds, out Std.VectorPoint3f objPoints, out Std.VectorPoint2f imgPoints) Parameters Type Name Description Aruco.Board board Std.VectorVectorPoint2f detectedCorners Std.VectorInt detectedIds Std.VectorPoint3f objPoints Std.VectorPoint2f imgPoints GetPredefinedDictionary(Aruco.PredefinedDictionaryName) Declaration public static Aruco.Dictionary GetPredefinedDictionary(Aruco.PredefinedDictionaryName name) Parameters Type Name Description Aruco.PredefinedDictionaryName name Returns Type Description Aruco.Dictionary InterpolateCornersCharuco(Std.VectorVectorPoint2f, Std.VectorInt, Cv.Mat, Aruco.CharucoBoard, out Std.VectorPoint2f, out Std.VectorInt) Declaration public static int InterpolateCornersCharuco(Std.VectorVectorPoint2f markerCorners, Std.VectorInt markerIds, Cv.Mat image, Aruco.CharucoBoard board, out Std.VectorPoint2f charucoCorners, out Std.VectorInt charucoIds) Parameters Type Name Description Std.VectorVectorPoint2f markerCorners Std.VectorInt markerIds Cv.Mat image Aruco.CharucoBoard board Std.VectorPoint2f charucoCorners Std.VectorInt charucoIds Returns Type Description System.Int32 InterpolateCornersCharuco(Std.VectorVectorPoint2f, Std.VectorInt, Cv.Mat, Aruco.CharucoBoard, out Std.VectorPoint2f, out Std.VectorInt, Cv.Mat) Declaration public static int InterpolateCornersCharuco(Std.VectorVectorPoint2f markerCorners, Std.VectorInt markerIds, Cv.Mat image, Aruco.CharucoBoard board, out Std.VectorPoint2f charucoCorners, out Std.VectorInt charucoIds, Cv.Mat cameraMatrix) Parameters Type Name Description Std.VectorVectorPoint2f markerCorners Std.VectorInt markerIds Cv.Mat image Aruco.CharucoBoard board Std.VectorPoint2f charucoCorners Std.VectorInt charucoIds Cv.Mat cameraMatrix Returns Type Description System.Int32 InterpolateCornersCharuco(Std.VectorVectorPoint2f, Std.VectorInt, Cv.Mat, Aruco.CharucoBoard, out Std.VectorPoint2f, out Std.VectorInt, Cv.Mat, Cv.Mat) Declaration public static int InterpolateCornersCharuco(Std.VectorVectorPoint2f markerCorners, Std.VectorInt markerIds, Cv.Mat image, Aruco.CharucoBoard board, out Std.VectorPoint2f charucoCorners, out Std.VectorInt charucoIds, Cv.Mat cameraMatrix, Cv.Mat distCoeffs) Parameters Type Name Description Std.VectorVectorPoint2f markerCorners Std.VectorInt markerIds Cv.Mat image Aruco.CharucoBoard board Std.VectorPoint2f charucoCorners Std.VectorInt charucoIds Cv.Mat cameraMatrix Cv.Mat distCoeffs Returns Type Description System.Int32 RefineDetectedMarkers(Cv.Mat, Aruco.Board, Std.VectorVectorPoint2f, Std.VectorInt, Std.VectorVectorPoint2f) Declaration public static void RefineDetectedMarkers(Cv.Mat image, Aruco.Board board, Std.VectorVectorPoint2f detectedCorners, Std.VectorInt detectedIds, Std.VectorVectorPoint2f rejectedCorners) Parameters Type Name Description Cv.Mat image Aruco.Board board Std.VectorVectorPoint2f detectedCorners Std.VectorInt detectedIds Std.VectorVectorPoint2f rejectedCorners RefineDetectedMarkers(Cv.Mat, Aruco.Board, Std.VectorVectorPoint2f, Std.VectorInt, Std.VectorVectorPoint2f, Cv.Mat) Declaration public static void RefineDetectedMarkers(Cv.Mat image, Aruco.Board board, Std.VectorVectorPoint2f detectedCorners, Std.VectorInt detectedIds, Std.VectorVectorPoint2f rejectedCorners, Cv.Mat cameraMatrix) Parameters Type Name Description Cv.Mat image Aruco.Board board Std.VectorVectorPoint2f detectedCorners Std.VectorInt detectedIds Std.VectorVectorPoint2f rejectedCorners Cv.Mat cameraMatrix RefineDetectedMarkers(Cv.Mat, Aruco.Board, Std.VectorVectorPoint2f, Std.VectorInt, Std.VectorVectorPoint2f, Cv.Mat, Cv.Mat, Single, Single, Boolean) Declaration public static void RefineDetectedMarkers(Cv.Mat image, Aruco.Board board, Std.VectorVectorPoint2f detectedCorners, Std.VectorInt detectedIds, Std.VectorVectorPoint2f rejectedCorners, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, float minRepDistance = 10F, float errorCorrectionRate = 3F, bool checkAllOrders = true) Parameters Type Name Description Cv.Mat image Aruco.Board board Std.VectorVectorPoint2f detectedCorners Std.VectorInt detectedIds Std.VectorVectorPoint2f rejectedCorners Cv.Mat cameraMatrix Cv.Mat distCoeffs System.Single minRepDistance System.Single errorCorrectionRate System.Boolean checkAllOrders RefineDetectedMarkers(Cv.Mat, Aruco.Board, Std.VectorVectorPoint2f, Std.VectorInt, Std.VectorVectorPoint2f, Cv.Mat, Cv.Mat, Single, Single, Boolean, Std.VectorInt) Declaration public static void RefineDetectedMarkers(Cv.Mat image, Aruco.Board board, Std.VectorVectorPoint2f detectedCorners, Std.VectorInt detectedIds, Std.VectorVectorPoint2f rejectedCorners, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, float minRepDistance, float errorCorrectionRate, bool checkAllOrders, Std.VectorInt recoveredIdxs) Parameters Type Name Description Cv.Mat image Aruco.Board board Std.VectorVectorPoint2f detectedCorners Std.VectorInt detectedIds Std.VectorVectorPoint2f rejectedCorners Cv.Mat cameraMatrix Cv.Mat distCoeffs System.Single minRepDistance System.Single errorCorrectionRate System.Boolean checkAllOrders Std.VectorInt recoveredIdxs RefineDetectedMarkers(Cv.Mat, Aruco.Board, Std.VectorVectorPoint2f, Std.VectorInt, Std.VectorVectorPoint2f, Cv.Mat, Cv.Mat, Single, Single, Boolean, Std.VectorInt, Aruco.DetectorParameters) Declaration public static void RefineDetectedMarkers(Cv.Mat image, Aruco.Board board, Std.VectorVectorPoint2f detectedCorners, Std.VectorInt detectedIds, Std.VectorVectorPoint2f rejectedCorners, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, float minRepDistance, float errorCorrectionRate, bool checkAllOrders, Std.VectorInt recoveredIdxs, Aruco.DetectorParameters parameters) Parameters Type Name Description Cv.Mat image Aruco.Board board Std.VectorVectorPoint2f detectedCorners Std.VectorInt detectedIds Std.VectorVectorPoint2f rejectedCorners Cv.Mat cameraMatrix Cv.Mat distCoeffs System.Single minRepDistance System.Single errorCorrectionRate System.Boolean checkAllOrders Std.VectorInt recoveredIdxs Aruco.DetectorParameters parameters"
  },
  "api/ArucoUnity.Plugin.Aruco.PredefinedDictionaryName.html": {
    "href": "api/ArucoUnity.Plugin.Aruco.PredefinedDictionaryName.html",
    "title": "Enum Aruco.PredefinedDictionaryName | Aruco Unity documentation",
    "keywords": "Enum Aruco.PredefinedDictionaryName Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public enum PredefinedDictionaryName Fields Name Description Dict4x4_100 Dict4x4_1000 Dict4x4_250 Dict4x4_50 Dict5x5_100 Dict5x5_1000 Dict5x5_250 Dict5x5_50 Dict6x6_100 Dict6x6_1000 Dict6x6_250 Dict6x6_50 Dict7x7_100 Dict7x7_1000 Dict7x7_250 Dict7x7_50 DictArucoOriginal"
  },
  "api/ArucoUnity.Objects.Trackers.ArucoMarkerTracker.html": {
    "href": "api/ArucoUnity.Objects.Trackers.ArucoMarkerTracker.html",
    "title": "Class ArucoMarkerTracker | Aruco Unity documentation",
    "keywords": "Class ArucoMarkerTracker Inheritance System.Object ArucoObjectTracker ArucoMarkerTracker Inherited Members ArucoObjectTracker.IsActivated ArucoObjectTracker.arucoTracker ArucoObjectTracker.arucoCamera ArucoObjectTracker.arucoCameraUndistortion ArucoObjectTracker.arucoCameraDisplay ArucoObjectTracker.Detect(Int32, Aruco.Dictionary) ArucoObjectTracker.Draw(Int32, Aruco.Dictionary) Namespace : ArucoUnity.Objects.Trackers Assembly : cs.temp.dll.dll Syntax public class ArucoMarkerTracker : ArucoObjectTracker Fields estimatePoseMarkerLength Declaration protected const float estimatePoseMarkerLength = 1F Field Value Type Description System.Single rejectedMarkerCandidatesColor Declaration protected readonly Color rejectedMarkerCandidatesColor Field Value Type Description Color Properties DetectedMarkers Declaration public Dictionary<Aruco.Dictionary, int>[] DetectedMarkers { get; protected set; } Property Value Type Description Dictionary < Aruco.Dictionary , System.Int32 >[] MarkerCorners Vector of the detected marker corners on each . Updated by Detect(Int32, Aruco.Dictionary, Cv.Mat) . Declaration public Dictionary<Aruco.Dictionary, Std.VectorVectorPoint2f>[] MarkerCorners { get; protected set; } Property Value Type Description Dictionary < Aruco.Dictionary , Std.VectorVectorPoint2f >[] MarkerIds Vector of identifiers of the detected markers on each . Updated by Detect(Int32, Aruco.Dictionary, Cv.Mat) . Declaration public Dictionary<Aruco.Dictionary, Std.VectorInt>[] MarkerIds { get; protected set; } Property Value Type Description Dictionary < Aruco.Dictionary , Std.VectorInt >[] MarkerRvecs Vector of rotation vectors of the detected markers on each . Declaration public Dictionary<Aruco.Dictionary, Std.VectorVec3d>[] MarkerRvecs { get; protected set; } Property Value Type Description Dictionary < Aruco.Dictionary , Std.VectorVec3d >[] MarkerTvecs Vector of translation vectors of the detected markers on each . Declaration public Dictionary<Aruco.Dictionary, Std.VectorVec3d>[] MarkerTvecs { get; protected set; } Property Value Type Description Dictionary < Aruco.Dictionary , Std.VectorVec3d >[] RejectedCandidateCorners Vector of the corners with not a correct identification on each . Updated by Detect(Int32, Aruco.Dictionary, Cv.Mat) . Declaration public Dictionary<Aruco.Dictionary, Std.VectorVectorPoint2f>[] RejectedCandidateCorners { get; protected set; } Property Value Type Description Dictionary < Aruco.Dictionary , Std.VectorVectorPoint2f >[] Methods Activate(IArucoObjectsTracker) Declaration public override void Activate(IArucoObjectsTracker arucoTracker) Parameters Type Name Description IArucoObjectsTracker arucoTracker Overrides ArucoObjectTracker.Activate(IArucoObjectsTracker) ArucoObjectsController_DictionaryAdded(Aruco.Dictionary) Declaration protected override void ArucoObjectsController_DictionaryAdded(Aruco.Dictionary dictionary) Parameters Type Name Description Aruco.Dictionary dictionary Overrides ArucoObjectTracker.ArucoObjectsController_DictionaryAdded(Aruco.Dictionary) ArucoObjectsController_DictionaryRemoved(Aruco.Dictionary) Declaration protected override void ArucoObjectsController_DictionaryRemoved(Aruco.Dictionary dictionary) Parameters Type Name Description Aruco.Dictionary dictionary Overrides ArucoObjectTracker.ArucoObjectsController_DictionaryRemoved(Aruco.Dictionary) Deactivate() Declaration public override void Deactivate() Overrides ArucoObjectTracker.Deactivate() Detect(Int32, Aruco.Dictionary, Cv.Mat) Declaration public override void Detect(int cameraId, Aruco.Dictionary dictionary, Cv.Mat image) Parameters Type Name Description System.Int32 cameraId Aruco.Dictionary dictionary Cv.Mat image Overrides ArucoObjectTracker.Detect(Int32, Aruco.Dictionary, Cv.Mat) Draw(Int32, Aruco.Dictionary, Cv.Mat) Declaration public override void Draw(int cameraId, Aruco.Dictionary dictionary, Cv.Mat image) Parameters Type Name Description System.Int32 cameraId Aruco.Dictionary dictionary Cv.Mat image Overrides ArucoObjectTracker.Draw(Int32, Aruco.Dictionary, Cv.Mat) EstimateTransforms(Int32, Aruco.Dictionary) Declaration public override void EstimateTransforms(int cameraId, Aruco.Dictionary dictionary) Parameters Type Name Description System.Int32 cameraId Aruco.Dictionary dictionary Overrides ArucoObjectTracker.EstimateTransforms(Int32, Aruco.Dictionary) UpdateTransforms(Int32, Aruco.Dictionary) Declaration public override void UpdateTransforms(int cameraId, Aruco.Dictionary dictionary) Parameters Type Name Description System.Int32 cameraId Aruco.Dictionary dictionary Overrides ArucoObjectTracker.UpdateTransforms(Int32, Aruco.Dictionary)"
  },
  "api/ArucoUnity.Objects.ArucoGridBoard.html": {
    "href": "api/ArucoUnity.Objects.ArucoGridBoard.html",
    "title": "Class ArucoGridBoard | Aruco Unity documentation",
    "keywords": "Class ArucoGridBoard Describes an ArUco grid board. Inheritance System.Object ArucoObject ArucoBoard ArucoGridBoard Inherited Members ArucoBoard.MarginsLength ArucoBoard.ImageSize ArucoBoard.Board ArucoBoard.AxisLength ArucoBoard.Rvec ArucoBoard.Tvec ArucoBoard.Awake() ArucoBoard.UpdateProperties() ArucoObject.metersToPixels300ppp ArucoObject.PropertyUpdating ArucoObject.PropertyUpdated ArucoObject.ArucoHashCode ArucoObject.Dictionary ArucoObject.MarkerSideLength ArucoObject.MarkerBorderBits ArucoObject.DisplayInEditor ArucoObject.OnValidate() ArucoObject.OnPropertyUpdating() ArucoObject.OnPropertyUpdated() ArucoObject.GetInPixels(Single) Namespace : ArucoUnity.Objects Assembly : cs.temp.dll.dll Syntax public class ArucoGridBoard : ArucoBoard Properties MarkerSeparation Gets or sets the separation between two consecutive markers in the grid. In pixels for Creators. In meters for Trackers and Calibrators. Declaration public float MarkerSeparation { get; set; } Property Value Type Description System.Single MarkersNumberX Gets or sets the number of markers in the X direction. Declaration public int MarkersNumberX { get; set; } Property Value Type Description System.Int32 MarkersNumberY Gets or sets the number of markers in the Y direction. Declaration public int MarkersNumberY { get; set; } Property Value Type Description System.Int32 MarkersUsedForEstimation Gets or sets the number of markers employed by the tracker the last frame for the estimation of the transform of the board. Declaration public int MarkersUsedForEstimation { get; } Property Value Type Description System.Int32 Methods Draw() Declaration public override Cv.Mat Draw() Returns Type Description Cv.Mat Overrides ArucoObject.Draw() GenerateName() Declaration public override string GenerateName() Returns Type Description System.String Overrides ArucoObject.GenerateName() GetArucoHashCode(Int32, Int32, Single, Single) Computes the hash code of a grid board. Declaration public static int GetArucoHashCode(int markersNumberX, int markersNumberY, float markerSideLength, float markerSeparation) Parameters Type Name Description System.Int32 markersNumberX The number of markers in the X direction. System.Int32 markersNumberY The number of markers in the Y direction. System.Single markerSideLength The side length of each marker. System.Single markerSeparation The separation between two consecutive markers in the grid. Returns Type Description System.Int32 The calculated ArUco hash code. GetGameObjectScale() Declaration public override Vector3 GetGameObjectScale() Returns Type Description Vector3 Overrides ArucoObject.GetGameObjectScale() UpdateArucoHashCode() Declaration protected override void UpdateArucoHashCode() Overrides ArucoObject.UpdateArucoHashCode() UpdateBoard() Declaration protected override void UpdateBoard() Overrides ArucoBoard.UpdateBoard()"
  },
  "api/ArucoUnity.Objects.ArucoDiamond.html": {
    "href": "api/ArucoUnity.Objects.ArucoDiamond.html",
    "title": "Class ArucoDiamond | Aruco Unity documentation",
    "keywords": "Class ArucoDiamond Describes an ChArUco diamond marker. Inheritance System.Object ArucoObject ArucoDiamond Inherited Members ArucoObject.metersToPixels300ppp ArucoObject.PropertyUpdating ArucoObject.PropertyUpdated ArucoObject.ArucoHashCode ArucoObject.Dictionary ArucoObject.MarkerSideLength ArucoObject.MarkerBorderBits ArucoObject.DisplayInEditor ArucoObject.Awake() ArucoObject.OnPropertyUpdating() ArucoObject.OnPropertyUpdated() ArucoObject.UpdateProperties() ArucoObject.GetInPixels(Single) Namespace : ArucoUnity.Objects Assembly : cs.temp.dll.dll Syntax public class ArucoDiamond : ArucoObject Fields ids Declaration protected int[] ids Field Value Type Description System.Int32 [] SquareNumberPerSide A ChArUco diamond marker is composed of 3x3 squares(3 per side). Declaration protected const int SquareNumberPerSide = 3 Field Value Type Description System.Int32 Properties Ids Gets or sets the four ids of the four markers of the diamond. Declaration public int[] Ids { get; set; } Property Value Type Description System.Int32 [] SquareSideLength Gets or sets the side length of each square. In pixels for Creators. In meters for Trackers and Calibrators. Declaration public float SquareSideLength { get; set; } Property Value Type Description System.Single Methods Draw() Declaration public override Cv.Mat Draw() Returns Type Description Cv.Mat Overrides ArucoObject.Draw() GenerateName() Declaration public override string GenerateName() Returns Type Description System.String Overrides ArucoObject.GenerateName() GetArucoHashCode(Int32[]) Computes the hash code of a ChArUco diamond marker. Declaration public static int GetArucoHashCode(int[] ids) Parameters Type Name Description System.Int32 [] ids The list of ids of the four markers. Returns Type Description System.Int32 The calculated ArUco hash code. GetGameObjectScale() Declaration public override Vector3 GetGameObjectScale() Returns Type Description Vector3 Overrides ArucoObject.GetGameObjectScale() OnValidate() Declaration protected override void OnValidate() Overrides ArucoObject.OnValidate() UpdateArucoHashCode() Declaration protected override void UpdateArucoHashCode() Overrides ArucoObject.UpdateArucoHashCode()"
  },
  "api/ArucoUnity.Objects.ArucoCharucoBoard.html": {
    "href": "api/ArucoUnity.Objects.ArucoCharucoBoard.html",
    "title": "Class ArucoCharucoBoard | Aruco Unity documentation",
    "keywords": "Class ArucoCharucoBoard Describes a ChArUco board. Inheritance System.Object ArucoObject ArucoBoard ArucoCharucoBoard Inherited Members ArucoBoard.MarginsLength ArucoBoard.ImageSize ArucoBoard.Board ArucoBoard.AxisLength ArucoBoard.Rvec ArucoBoard.Tvec ArucoBoard.Awake() ArucoBoard.UpdateProperties() ArucoObject.metersToPixels300ppp ArucoObject.PropertyUpdating ArucoObject.PropertyUpdated ArucoObject.ArucoHashCode ArucoObject.Dictionary ArucoObject.MarkerSideLength ArucoObject.MarkerBorderBits ArucoObject.DisplayInEditor ArucoObject.OnValidate() ArucoObject.OnPropertyUpdating() ArucoObject.OnPropertyUpdated() ArucoObject.GetInPixels(Single) Namespace : ArucoUnity.Objects Assembly : cs.temp.dll.dll Syntax public class ArucoCharucoBoard : ArucoBoard Properties DetectedCorners Gets or sets the list of the detected marker by the tracker the last frame. Declaration public Std.VectorPoint2f DetectedCorners { get; } Property Value Type Description Std.VectorPoint2f DetectedIds Gets or sets the list of the ids of the detected marker by the tracker the last frame. Declaration public Std.VectorInt DetectedIds { get; } Property Value Type Description Std.VectorInt SquareSideLength Gets or sets the side length of each square. In pixels for Creators. In meters for Trackers and Calibrators. Declaration public float SquareSideLength { get; set; } Property Value Type Description System.Single SquaresNumberX Gets or sets the number of squares in the X direction. Declaration public int SquaresNumberX { get; set; } Property Value Type Description System.Int32 SquaresNumberY Gets or sets the number of squares in the Y direction. Declaration public int SquaresNumberY { get; set; } Property Value Type Description System.Int32 ValidTransform Gets or sets if the transform of the board has been correctly estimated by the tracker the last frame. Declaration public bool ValidTransform { get; } Property Value Type Description System.Boolean Methods Draw() Declaration public override Cv.Mat Draw() Returns Type Description Cv.Mat Overrides ArucoObject.Draw() GenerateName() Declaration public override string GenerateName() Returns Type Description System.String Overrides ArucoObject.GenerateName() GetArucoHashCode(Int32, Int32, Single, Single) Computes the hash code of a ChAruco board. Declaration public static int GetArucoHashCode(int squaresNumberX, int squaresNumberY, float markerSideLength, float squareSideLength) Parameters Type Name Description System.Int32 squaresNumberX The number of squares in the X direction. System.Int32 squaresNumberY The number of squares in the Y direction. System.Single markerSideLength The side length of each marker. System.Single squareSideLength The side length of each square. Returns Type Description System.Int32 The calculated ArUco hash code. GetGameObjectScale() Declaration public override Vector3 GetGameObjectScale() Returns Type Description Vector3 Overrides ArucoObject.GetGameObjectScale() UpdateArucoHashCode() Declaration protected override void UpdateArucoHashCode() Overrides ArucoObject.UpdateArucoHashCode() UpdateBoard() Declaration protected override void UpdateBoard() Overrides ArucoBoard.UpdateBoard()"
  },
  "api/ArucoUnity.Cameras.Undistortions.PinholeCameraUndistortionGeneric-1.html": {
    "href": "api/ArucoUnity.Cameras.Undistortions.PinholeCameraUndistortionGeneric-1.html",
    "title": "Class PinholeCameraUndistortionGeneric<T> | Aruco Unity documentation",
    "keywords": "Class PinholeCameraUndistortionGeneric<T> Manages the undistortion and rectification process for pinhole cameras. See the OpenCV's calibd module documentation for more information: http://docs.opencv.org/3.4/d9/d0c/group__calib3d.html Inheritance System.Object ArucoCameraController ArucoCameraUndistortion ArucoCameraUndistortionGeneric <T> PinholeCameraUndistortionGeneric<T> PinholeCameraUndistortion StereoPinholeCameraUndistortion Implements IArucoCameraUndistortion IArucoCameraController IConfigurableController IHasArucoCameraParameters Inherited Members ArucoCameraUndistortionGeneric<T>.Awake() ArucoCameraUndistortion.undistortionCameraMapsNumber ArucoCameraUndistortion.CameraParameters ArucoCameraUndistortion.RectifiedCameraMatrices ArucoCameraUndistortion.RectificationMatrices ArucoCameraUndistortion.UndistortedDistCoeffs ArucoCameraUndistortion.UndistortionRectificationMaps ArucoCameraUndistortion.noRectificationMatrix ArucoCameraUndistortion.noDistCoeffs ArucoCameraUndistortion.noROI ArucoCameraUndistortion.CameraParametersFilePath ArucoCameraUndistortion.remapThread ArucoCameraUndistortion.Start() ArucoCameraUndistortion.Configuring() ArucoCameraUndistortion.Starting() ArucoCameraUndistortion.Stopping() ArucoCameraUndistortion.ArucoCamera_UndistortRectifyImages(Cv.Mat[], Byte[][]) ArucoCameraUndistortion.UndistortRectifyImages(Cv.Mat[]) ArucoCameraUndistortion.InitializeRectification() ArucoCameraController.ArucoCamera Namespace : ArucoUnity.Cameras.Undistortions Assembly : cs.temp.dll.dll Syntax public abstract class PinholeCameraUndistortionGeneric<T> : ArucoCameraUndistortionGeneric<T>, IArucoCameraUndistortion, IArucoCameraController, IConfigurableController, IHasArucoCameraParameters where T : ArucoCamera Type Parameters Name Description T Properties RectificationScalingFactor Gets or sets the scaling factor (alpha coefficient) between 0 and 1: 0 to zoom the images so that only valid pixels are visible (no black areas after rectification), 1 to shift the images so that no source image pixels are lost. Applied both on mono and stereo cameras. Declaration public float RectificationScalingFactor { get; set; } Property Value Type Description System.Single Methods InitializeUndistortionMaps() Declaration protected override void InitializeUndistortionMaps() Overrides ArucoCameraUndistortion.InitializeUndistortionMaps() Implements IArucoCameraUndistortion IArucoCameraController IConfigurableController IHasArucoCameraParameters"
  },
  "api/ArucoUnity.Cameras.Undistortions.OmnidirCameraUndistortionGeneric-1.RectificationTypes.html": {
    "href": "api/ArucoUnity.Cameras.Undistortions.OmnidirCameraUndistortionGeneric-1.RectificationTypes.html",
    "title": "Enum OmnidirCameraUndistortionGeneric<T>.RectificationTypes | Aruco Unity documentation",
    "keywords": "Enum OmnidirCameraUndistortionGeneric<T>.RectificationTypes The different algorithms to use for the undistortion of the images. Namespace : ArucoUnity.Cameras.Undistortions Assembly : cs.temp.dll.dll Syntax public enum RectificationTypes Fields Name Description Cylindrical LongitudeLatitude Perspective Stereographic"
  },
  "api/ArucoUnity.Cameras.Undistortions.ArucoCameraUndistortionGeneric-1.html": {
    "href": "api/ArucoUnity.Cameras.Undistortions.ArucoCameraUndistortionGeneric-1.html",
    "title": "Class ArucoCameraUndistortionGeneric<T> | Aruco Unity documentation",
    "keywords": "Class ArucoCameraUndistortionGeneric<T> Manages the processes of undistortion and rectification of Images . Generic class to inherit, not the base class. Inheritance System.Object ArucoCameraController ArucoCameraUndistortion ArucoCameraUndistortionGeneric<T> OmnidirCameraUndistortionGeneric<T> PinholeCameraUndistortionGeneric<T> Implements IArucoCameraUndistortion IArucoCameraController IConfigurableController IHasArucoCameraParameters Inherited Members ArucoCameraUndistortion.undistortionCameraMapsNumber ArucoCameraUndistortion.CameraParameters ArucoCameraUndistortion.RectifiedCameraMatrices ArucoCameraUndistortion.RectificationMatrices ArucoCameraUndistortion.UndistortedDistCoeffs ArucoCameraUndistortion.UndistortionRectificationMaps ArucoCameraUndistortion.noRectificationMatrix ArucoCameraUndistortion.noDistCoeffs ArucoCameraUndistortion.noROI ArucoCameraUndistortion.CameraParametersFilePath ArucoCameraUndistortion.remapThread ArucoCameraUndistortion.Start() ArucoCameraUndistortion.Configuring() ArucoCameraUndistortion.Starting() ArucoCameraUndistortion.Stopping() ArucoCameraUndistortion.ArucoCamera_UndistortRectifyImages(Cv.Mat[], Byte[][]) ArucoCameraUndistortion.UndistortRectifyImages(Cv.Mat[]) ArucoCameraUndistortion.InitializeRectification() ArucoCameraUndistortion.InitializeUndistortionMaps() ArucoCameraController.ArucoCamera Namespace : ArucoUnity.Cameras.Undistortions Assembly : cs.temp.dll.dll Syntax public abstract class ArucoCameraUndistortionGeneric<T> : ArucoCameraUndistortion, IArucoCameraUndistortion, IArucoCameraController, IConfigurableController, IHasArucoCameraParameters where T : ArucoCamera Type Parameters Name Description T Methods Awake() Sets ArucoCamera with editor field if not null. Declaration protected override void Awake() Implements IArucoCameraUndistortion IArucoCameraController IConfigurableController IHasArucoCameraParameters"
  },
  "api/ArucoUnity.Cameras.Undistortions.ArucoCameraUndistortion.html": {
    "href": "api/ArucoUnity.Cameras.Undistortions.ArucoCameraUndistortion.html",
    "title": "Class ArucoCameraUndistortion | Aruco Unity documentation",
    "keywords": "Class ArucoCameraUndistortion Manages the processes of undistortion and rectification of Images . It's a time-consuming operation but it's necessary for cameras with an important distorsion for a good alignement of the images with the 3D content. Base class to reference in editor fields. Inheritance System.Object ArucoCameraController ArucoCameraUndistortion ArucoCameraUndistortionGeneric<T> Implements IArucoCameraUndistortion IArucoCameraController IConfigurableController IHasArucoCameraParameters Inherited Members ArucoCameraController.ArucoCamera Namespace : ArucoUnity.Cameras.Undistortions Assembly : cs.temp.dll.dll Syntax public abstract class ArucoCameraUndistortion : ArucoCameraController, IArucoCameraUndistortion, IArucoCameraController, IConfigurableController, IHasArucoCameraParameters Fields CameraParametersFilePath Declaration protected string CameraParametersFilePath Field Value Type Description System.String noDistCoeffs Declaration protected Cv.Mat noDistCoeffs Field Value Type Description Cv.Mat noRectificationMatrix Declaration protected Cv.Mat noRectificationMatrix Field Value Type Description Cv.Mat noROI Declaration protected Cv.Rect noROI Field Value Type Description Cv.Rect remapThread Declaration protected ArucoCameraSeparateThread remapThread Field Value Type Description ArucoCameraSeparateThread undistortionCameraMapsNumber Declaration public const int undistortionCameraMapsNumber = 2 Field Value Type Description System.Int32 Properties CameraParameters Declaration public ArucoCameraParameters CameraParameters { get; set; } Property Value Type Description ArucoCameraParameters RectificationMatrices Declaration public Cv.Mat[] RectificationMatrices { get; protected set; } Property Value Type Description Cv.Mat [] RectifiedCameraMatrices Declaration public Cv.Mat[] RectifiedCameraMatrices { get; protected set; } Property Value Type Description Cv.Mat [] UndistortedDistCoeffs Declaration public Cv.Mat[] UndistortedDistCoeffs { get; } Property Value Type Description Cv.Mat [] UndistortionRectificationMaps Declaration public Cv.Mat[][] UndistortionRectificationMaps { get; protected set; } Property Value Type Description Cv.Mat [][] Methods ArucoCamera_UndistortRectifyImages(Cv.Mat[], Byte[][]) Updates the undistortion thread with the images and stops if there was an exception from this thread. Declaration protected virtual void ArucoCamera_UndistortRectifyImages(Cv.Mat[] images, byte[][] imageDatas) Parameters Type Name Description Cv.Mat [] images System.Byte [][] imageDatas Configuring() Initializes the properties from CameraParameters . Declaration protected override void Configuring() Overrides ArucoCameraController.Configuring() InitializeRectification() Initializes the RectificationMatrices of each camera image. Declaration protected abstract void InitializeRectification() InitializeUndistortionMaps() Initializes the UndistortionRectificationMaps of each camera image. Declaration protected abstract void InitializeUndistortionMaps() Start() Initializes the properties. Declaration protected override void Start() Starting() Calls InitializeRectification() and InitializeUndistortionMaps() and susbcribes to UndistortRectifyImages . Declaration protected override void Starting() Stopping() Unsusbcribes from UndistortRectifyImages . Declaration protected override void Stopping() UndistortRectifyImages(Cv.Mat[]) Undistorts and rectifies the images using UndistortionRectificationMaps on a separate thread. Declaration protected virtual void UndistortRectifyImages(Cv.Mat[] images) Parameters Type Name Description Cv.Mat [] images Implements IArucoCameraUndistortion IArucoCameraController IConfigurableController IHasArucoCameraParameters"
  },
  "api/ArucoUnity.Cameras.Parameters.html": {
    "href": "api/ArucoUnity.Cameras.Parameters.html",
    "title": "Namespace ArucoUnity.Cameras.Parameters | Aruco Unity documentation",
    "keywords": "Namespace ArucoUnity.Cameras.Parameters Classes ArucoCameraParameters Manage the camera parameters from a calibration. ArucoCameraParametersController Editor controller for CameraParameters . StereoArucoCameraParameters Manages the camera parameters of a stereo camera calibration. Interfaces IHasArucoCameraParameters Contains a ArucoCameraParameters ."
  },
  "api/ArucoUnity.Cameras.IArucoCameraController.html": {
    "href": "api/ArucoUnity.Cameras.IArucoCameraController.html",
    "title": "Interface IArucoCameraController | Aruco Unity documentation",
    "keywords": "Interface IArucoCameraController Configurable controller using a IArucoCamera . Namespace : ArucoUnity.Cameras Assembly : cs.temp.dll.dll Syntax public interface IArucoCameraController : IConfigurableController Properties ArucoCamera Gets or sets the camera to use. Declaration IArucoCamera ArucoCamera { get; set; } Property Value Type Description IArucoCamera"
  },
  "api/ArucoUnity.Cameras.Displays.StereoVRArucoCameraDisplay.html": {
    "href": "api/ArucoUnity.Cameras.Displays.StereoVRArucoCameraDisplay.html",
    "title": "Class StereoVRArucoCameraDisplay | Aruco Unity documentation",
    "keywords": "Class StereoVRArucoCameraDisplay Displays a StereoArucoCamera in a VR HMD. Inheritance System.Object ArucoCameraController ArucoCameraDisplay ArucoCameraDisplayGeneric < StereoArucoCamera , ArucoCameraUndistortion > StereoVRArucoCameraDisplay Implements IArucoCameraDisplay IArucoCameraController IConfigurableController Inherited Members ArucoCameraDisplayGeneric<StereoArucoCamera, ArucoCameraUndistortion>.Awake() ArucoCameraDisplay.cameraBackgroundDistance ArucoCameraDisplay.Cameras ArucoCameraDisplay.BackgroundCameras ArucoCameraDisplay.Backgrounds ArucoCameraDisplay.ArucoCameraUndistortion ArucoCameraDisplay.Configuring() ArucoCameraDisplay.Starting() ArucoCameraDisplay.Stopping() ArucoCameraDisplay.SetDisplayActive(Boolean) ArucoCameraDisplay.ConfigureDefaultBackgrounds() ArucoCameraController.ArucoCamera Namespace : ArucoUnity.Cameras.Displays Assembly : cs.temp.dll.dll Syntax public class StereoVRArucoCameraDisplay : ArucoCameraDisplayGeneric<StereoArucoCamera, ArucoCameraUndistortion>, IArucoCameraDisplay, IArucoCameraController, IConfigurableController Fields arucoObjectPlacementZFactor Declaration protected float arucoObjectPlacementZFactor Field Value Type Description System.Single backgroundsPositionOffset Declaration protected Vector3 backgroundsPositionOffset Field Value Type Description Vector3 cameraFocalLength Declaration protected float cameraFocalLength Field Value Type Description System.Single Methods Awake() Populates , , and from editor fields if not nulls. Declaration protected override void Awake() Overrides ArucoUnity.Cameras.Displays.ArucoCameraDisplayGeneric<ArucoUnity.Cameras.StereoArucoCamera, ArucoCameraUndistortion>.Awake() ConfigureDisplay() Configure the backgrounds for VR mode. Declaration protected override void ConfigureDisplay() Overrides ArucoCameraDisplay.ConfigureDisplay() ConfigureRectifiedBackground(Int32) Places the taking account of the difference of the focal length between the VR and from . Declaration protected override void ConfigureRectifiedBackground(int cameraId) Parameters Type Name Description System.Int32 cameraId The id of the background and the background camera to configure. Overrides ArucoCameraDisplay.ConfigureRectifiedBackground(Int32) ConfigureRectifiedCamera(Int32) Cancels the base class configuration of the virtual cameras as Unity already handles them. Declaration protected override void ConfigureRectifiedCamera(int cameraId) Parameters Type Name Description System.Int32 cameraId Overrides ArucoCameraDisplay.ConfigureRectifiedCamera(Int32) PlaceArucoObject(Transform, Int32, Vector3, Quaternion) Declaration public override void PlaceArucoObject(Transform arucoObject, int cameraId, Vector3 localPosition, Quaternion localRotation) Parameters Type Name Description Transform arucoObject System.Int32 cameraId Vector3 localPosition Quaternion localRotation Overrides ArucoCameraDisplay.PlaceArucoObject(Transform, Int32, Vector3, Quaternion) Implements IArucoCameraDisplay IArucoCameraController IConfigurableController"
  },
  "api/ArucoUnity.Cameras.Displays.StereoArucoCameraDisplay.html": {
    "href": "api/ArucoUnity.Cameras.Displays.StereoArucoCameraDisplay.html",
    "title": "Class StereoArucoCameraDisplay | Aruco Unity documentation",
    "keywords": "Class StereoArucoCameraDisplay Displays a StereoArucoCamera . Inheritance System.Object ArucoCameraController ArucoCameraDisplay ArucoCameraDisplayGeneric < StereoArucoCamera , ArucoCameraUndistortion > StereoArucoCameraDisplay Implements IArucoCameraDisplay IArucoCameraController IConfigurableController Inherited Members ArucoCameraDisplayGeneric<StereoArucoCamera, ArucoCameraUndistortion>.Awake() ArucoCameraDisplay.cameraBackgroundDistance ArucoCameraDisplay.Cameras ArucoCameraDisplay.BackgroundCameras ArucoCameraDisplay.Backgrounds ArucoCameraDisplay.ArucoCameraUndistortion ArucoCameraDisplay.Configuring() ArucoCameraDisplay.Starting() ArucoCameraDisplay.Stopping() ArucoCameraDisplay.SetDisplayActive(Boolean) ArucoCameraDisplay.ConfigureDefaultBackgrounds() ArucoCameraDisplay.ConfigureRectifiedBackground(Int32) ArucoCameraController.ArucoCamera Namespace : ArucoUnity.Cameras.Displays Assembly : cs.temp.dll.dll Syntax public class StereoArucoCameraDisplay : ArucoCameraDisplayGeneric<StereoArucoCamera, ArucoCameraUndistortion>, IArucoCameraDisplay, IArucoCameraController, IConfigurableController Fields backgroundsPositionOffset Declaration protected Vector3 backgroundsPositionOffset Field Value Type Description Vector3 Properties Eyes Gets or sets the containers of the and the . Declaration public Transform[] Eyes { get; protected set; } Property Value Type Description Transform [] Methods Awake() Sets Eyes , , and from editor fields if not nulls. Declaration protected override void Awake() Overrides ArucoUnity.Cameras.Displays.ArucoCameraDisplayGeneric<ArucoUnity.Cameras.StereoArucoCamera, ArucoCameraUndistortion>.Awake() ConfigureDisplay() Declaration protected override void ConfigureDisplay() Overrides ArucoCameraDisplay.ConfigureDisplay() ConfigureRectifiedCamera(Int32) Place the virtual cameras in the same placement than the physical cameras. Declaration protected override void ConfigureRectifiedCamera(int cameraId) Parameters Type Name Description System.Int32 cameraId The id of the camera to configure. Overrides ArucoCameraDisplay.ConfigureRectifiedCamera(Int32) PlaceArucoObject(Transform, Int32, Vector3, Quaternion) Declaration public override void PlaceArucoObject(Transform arucoObject, int cameraId, Vector3 localPosition, Quaternion localRotation) Parameters Type Name Description Transform arucoObject System.Int32 cameraId Vector3 localPosition Quaternion localRotation Overrides ArucoCameraDisplay.PlaceArucoObject(Transform, Int32, Vector3, Quaternion) Implements IArucoCameraDisplay IArucoCameraController IConfigurableController"
  },
  "api/ArucoUnity.Cameras.Displays.ArucoCameraDisplayGeneric-2.html": {
    "href": "api/ArucoUnity.Cameras.Displays.ArucoCameraDisplayGeneric-2.html",
    "title": "Class ArucoCameraDisplayGeneric<T, U> | Aruco Unity documentation",
    "keywords": "Class ArucoCameraDisplayGeneric<T, U> Inheritance System.Object ArucoCameraController ArucoCameraDisplay ArucoCameraDisplayGeneric<T, U> MonoArucoCameraDisplay StereoArucoCameraDisplay StereoVRArucoCameraDisplay Implements IArucoCameraDisplay IArucoCameraController IConfigurableController Inherited Members ArucoCameraDisplay.cameraBackgroundDistance ArucoCameraDisplay.Cameras ArucoCameraDisplay.BackgroundCameras ArucoCameraDisplay.Backgrounds ArucoCameraDisplay.ArucoCameraUndistortion ArucoCameraDisplay.Configuring() ArucoCameraDisplay.Starting() ArucoCameraDisplay.Stopping() ArucoCameraDisplay.PlaceArucoObject(Transform, Int32, Vector3, Quaternion) ArucoCameraDisplay.ConfigureDisplay() ArucoCameraDisplay.SetDisplayActive(Boolean) ArucoCameraDisplay.ConfigureDefaultBackgrounds() ArucoCameraDisplay.ConfigureRectifiedCamera(Int32) ArucoCameraDisplay.ConfigureRectifiedBackground(Int32) ArucoCameraController.ArucoCamera Namespace : ArucoUnity.Cameras.Displays Assembly : cs.temp.dll.dll Syntax public abstract class ArucoCameraDisplayGeneric<T, U> : ArucoCameraDisplay, IArucoCameraDisplay, IArucoCameraController, IConfigurableController where T : ArucoCamera where U : ArucoCameraUndistortion Type Parameters Name Description T U Methods Awake() Sets and ArucoCameraUndistortion from editor fields if not nulls. Declaration protected override void Awake() Implements IArucoCameraDisplay IArucoCameraController IConfigurableController"
  },
  "api/ArucoUnity.Calibration.Pinhole.PinholeCameraCalibrationBase-1.html": {
    "href": "api/ArucoUnity.Calibration.Pinhole.PinholeCameraCalibrationBase-1.html",
    "title": "Class PinholeCameraCalibrationBase<T> | Aruco Unity documentation",
    "keywords": "Class PinholeCameraCalibrationBase<T> Calibrates a using the pinhole camera model with a ArucoBoard and saves the calibrated camera parameters in a file managed by ArucoCameraParametersController . Inheritance System.Object ArucoObjectDetector ArucoCameraCalibration ArucoCameraCalibrationGeneric <T, PinholeCameraCalibrationFlags > PinholeCameraCalibrationBase<T> PinholeCameraCalibration StereoPinholeCameraCalibration Implements IHasDetectorParameter Inherited Members ArucoCameraCalibrationGeneric<T, PinholeCameraCalibrationFlags>.calibrationFlags ArucoCameraCalibrationGeneric<T, PinholeCameraCalibrationFlags>.Awake() ArucoCameraCalibration.CalibrationBoard ArucoCameraCalibration.RefineMarkersDetection ArucoCameraCalibration.CameraParametersController ArucoCameraCalibration.CalibrationFlags ArucoCameraCalibration.AllMarkerCorners ArucoCameraCalibration.AllMarkerIds ArucoCameraCalibration.Images ArucoCameraCalibration.Rvecs ArucoCameraCalibration.Tvecs ArucoCameraCalibration.MarkerCorners ArucoCameraCalibration.MarkerIds ArucoCameraCalibration.IsCalibrated ArucoCameraCalibration.CalibrationRunning ArucoCameraCalibration.Calibrated ArucoCameraCalibration.applicationPath ArucoCameraCalibration.calibratingThread ArucoCameraCalibration.calibratingMutex ArucoCameraCalibration.calibratingException ArucoCameraCalibration.LateUpdate() ArucoCameraCalibration.Configuring() ArucoCameraCalibration.Starting() ArucoCameraCalibration.Stopping() ArucoCameraCalibration.ResetCalibration() ArucoCameraCalibration.DetectMarkers() ArucoCameraCalibration.DrawDetectedMarkers() ArucoCameraCalibration.AddImages() ArucoCameraCalibration.CalibrateAsync() ArucoCameraCalibration.CancelCalibrateAsync() ArucoCameraCalibration.Calibrate() ArucoCameraCalibration.ArucoCamera_ImagesUpdated() ArucoCameraCalibration.Calibrate(Std.VectorVectorPoint2f[], Std.VectorVectorPoint3f[]) ArucoObjectDetector.DetectorParameters Namespace : ArucoUnity.Calibration.Pinhole Assembly : cs.temp.dll.dll Syntax public abstract class PinholeCameraCalibrationBase<T> : ArucoCameraCalibrationGeneric<T, PinholeCameraCalibrationFlags>, IHasDetectorParameter where T : ArucoCamera Type Parameters Name Description T Methods InitializeCameraParameters() Declaration protected override void InitializeCameraParameters() Overrides ArucoCameraCalibration.InitializeCameraParameters() Implements IHasDetectorParameter"
  },
  "api/ArucoUnity.Plugin.Cv.html": {
    "href": "api/ArucoUnity.Plugin.Cv.html",
    "title": "Class Cv | Aruco Unity documentation",
    "keywords": "Class Cv Inheritance System.Object Cv Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public static class Cv Fields bothAxesFlipCode Declaration public const int bothAxesFlipCode = -1 Field Value Type Description System.Int32 CN_SHIFT Declaration public const int CN_SHIFT = 3 Field Value Type Description System.Int32 DEPTH_MAX Declaration public const int DEPTH_MAX = 8 Field Value Type Description System.Int32 EPSILON Declaration public const double EPSILON = 2.2204460492503131E-16 Field Value Type Description System.Double horizontalFlipCode Declaration public const int horizontalFlipCode = 1 Field Value Type Description System.Int32 MAT_DEPTH_MAX Declaration public const int MAT_DEPTH_MAX = 7 Field Value Type Description System.Int32 verticalFlipCode Declaration public const int verticalFlipCode = 0 Field Value Type Description System.Int32 Methods CalibrateCamera(Std.VectorVectorPoint3f, Std.VectorVectorPoint2f, Cv.Size, Cv.Mat, Cv.Mat, out Std.VectorVec3d, out Std.VectorVec3d, Cv.Calib) Declaration public static double CalibrateCamera(Std.VectorVectorPoint3f objectPoints, Std.VectorVectorPoint2f imagePoints, Cv.Size imageSize, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, out Std.VectorVec3d rvecs, out Std.VectorVec3d tvecs, Cv.Calib flags = (Cv.Calib)0) Parameters Type Name Description Std.VectorVectorPoint3f objectPoints Std.VectorVectorPoint2f imagePoints Cv.Size imageSize Cv.Mat cameraMatrix Cv.Mat distCoeffs Std.VectorVec3d rvecs Std.VectorVec3d tvecs Cv.Calib flags Returns Type Description System.Double CalibrateCamera(Std.VectorVectorPoint3f, Std.VectorVectorPoint2f, Cv.Size, Cv.Mat, Cv.Mat, out Std.VectorVec3d, out Std.VectorVec3d, Cv.Calib, Cv.TermCriteria) Declaration public static double CalibrateCamera(Std.VectorVectorPoint3f objectPoints, Std.VectorVectorPoint2f imagePoints, Cv.Size imageSize, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, out Std.VectorVec3d rvecs, out Std.VectorVec3d tvecs, Cv.Calib flags, Cv.TermCriteria criteria) Parameters Type Name Description Std.VectorVectorPoint3f objectPoints Std.VectorVectorPoint2f imagePoints Cv.Size imageSize Cv.Mat cameraMatrix Cv.Mat distCoeffs Std.VectorVec3d rvecs Std.VectorVec3d tvecs Cv.Calib flags Cv.TermCriteria criteria Returns Type Description System.Double CalibrateCamera(Std.VectorVectorPoint3f, Std.VectorVectorPoint2f, Cv.Size, Cv.Mat, Cv.Mat, out Std.VectorVec3d, out Std.VectorVec3d, Std.VectorDouble, Std.VectorDouble, Std.VectorDouble, Cv.Calib) Declaration public static double CalibrateCamera(Std.VectorVectorPoint3f objectPoints, Std.VectorVectorPoint2f imagePoints, Cv.Size imageSize, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, out Std.VectorVec3d rvecs, out Std.VectorVec3d tvecs, Std.VectorDouble stdDeviationsIntrinsics, Std.VectorDouble stdDeviationsExtrinsics, Std.VectorDouble perViewErrors, Cv.Calib flags = (Cv.Calib)0) Parameters Type Name Description Std.VectorVectorPoint3f objectPoints Std.VectorVectorPoint2f imagePoints Cv.Size imageSize Cv.Mat cameraMatrix Cv.Mat distCoeffs Std.VectorVec3d rvecs Std.VectorVec3d tvecs Std.VectorDouble stdDeviationsIntrinsics Std.VectorDouble stdDeviationsExtrinsics Std.VectorDouble perViewErrors Cv.Calib flags Returns Type Description System.Double CalibrateCamera(Std.VectorVectorPoint3f, Std.VectorVectorPoint2f, Cv.Size, Cv.Mat, Cv.Mat, out Std.VectorVec3d, out Std.VectorVec3d, Std.VectorDouble, Std.VectorDouble, Std.VectorDouble, Cv.Calib, Cv.TermCriteria) Declaration public static double CalibrateCamera(Std.VectorVectorPoint3f objectPoints, Std.VectorVectorPoint2f imagePoints, Cv.Size imageSize, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, out Std.VectorVec3d rvecs, out Std.VectorVec3d tvecs, Std.VectorDouble stdDeviationsIntrinsics, Std.VectorDouble stdDeviationsExtrinsics, Std.VectorDouble perViewErrors, Cv.Calib flags, Cv.TermCriteria criteria) Parameters Type Name Description Std.VectorVectorPoint3f objectPoints Std.VectorVectorPoint2f imagePoints Cv.Size imageSize Cv.Mat cameraMatrix Cv.Mat distCoeffs Std.VectorVec3d rvecs Std.VectorVec3d tvecs Std.VectorDouble stdDeviationsIntrinsics Std.VectorDouble stdDeviationsExtrinsics Std.VectorDouble perViewErrors Cv.Calib flags Cv.TermCriteria criteria Returns Type Description System.Double Flip(Cv.Mat, Cv.Mat, Int32) Declaration public static void Flip(Cv.Mat src, Cv.Mat dst, int flipCode) Parameters Type Name Description Cv.Mat src Cv.Mat dst System.Int32 flipCode GetOptimalNewCameraMatrix(Cv.Mat, Cv.Mat, Cv.Size, Double) Declaration public static Cv.Mat GetOptimalNewCameraMatrix(Cv.Mat cameraMatrix, Cv.Mat distCoeffs, Cv.Size imageSize, double scalingFactor) Parameters Type Name Description Cv.Mat cameraMatrix Cv.Mat distCoeffs Cv.Size imageSize System.Double scalingFactor Returns Type Description Cv.Mat GetOptimalNewCameraMatrix(Cv.Mat, Cv.Mat, Cv.Size, Double, Cv.Size) Declaration public static Cv.Mat GetOptimalNewCameraMatrix(Cv.Mat cameraMatrix, Cv.Mat distCoeffs, Cv.Size imageSize, double scalingFactor, Cv.Size newImageSize) Parameters Type Name Description Cv.Mat cameraMatrix Cv.Mat distCoeffs Cv.Size imageSize System.Double scalingFactor Cv.Size newImageSize Returns Type Description Cv.Mat GetOptimalNewCameraMatrix(Cv.Mat, Cv.Mat, Cv.Size, Double, Cv.Size, Cv.Rect, Boolean) Declaration public static Cv.Mat GetOptimalNewCameraMatrix(Cv.Mat cameraMatrix, Cv.Mat distCoeffs, Cv.Size imageSize, double scalingFactor, Cv.Size newImageSize, Cv.Rect validPixRoi, bool centerPrincipalPoint = false) Parameters Type Name Description Cv.Mat cameraMatrix Cv.Mat distCoeffs Cv.Size imageSize System.Double scalingFactor Cv.Size newImageSize Cv.Rect validPixRoi System.Boolean centerPrincipalPoint Returns Type Description Cv.Mat InitCameraMatrix2D(Std.VectorVectorPoint3f, Std.VectorVectorPoint2f, Cv.Size, Double) Declaration public static Cv.Mat InitCameraMatrix2D(Std.VectorVectorPoint3f objectPoints, Std.VectorVectorPoint2f imagePoints, Cv.Size imageSize, double aspectRatio = 1) Parameters Type Name Description Std.VectorVectorPoint3f objectPoints Std.VectorVectorPoint2f imagePoints Cv.Size imageSize System.Double aspectRatio Returns Type Description Cv.Mat InitUndistortRectifyMap(Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Size, Cv.Type, out Cv.Mat, out Cv.Mat) Declaration public static void InitUndistortRectifyMap(Cv.Mat cameraMatrix, Cv.Mat distCoeffs, Cv.Mat R, Cv.Mat newCameraMatrix, Cv.Size size, Cv.Type m1type, out Cv.Mat map1, out Cv.Mat map2) Parameters Type Name Description Cv.Mat cameraMatrix Cv.Mat distCoeffs Cv.Mat R Cv.Mat newCameraMatrix Cv.Size size Cv.Type m1type Cv.Mat map1 Cv.Mat map2 Remap(Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.InterpolationFlags, Cv.BorderTypes) Declaration public static void Remap(Cv.Mat src, Cv.Mat dst, Cv.Mat map1, Cv.Mat map2, Cv.InterpolationFlags interpolation, Cv.BorderTypes borderType = Cv.BorderTypes.Constant) Parameters Type Name Description Cv.Mat src Cv.Mat dst Cv.Mat map1 Cv.Mat map2 Cv.InterpolationFlags interpolation Cv.BorderTypes borderType Remap(Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.InterpolationFlags, Cv.BorderTypes, Cv.Scalar) Declaration public static void Remap(Cv.Mat src, Cv.Mat dst, Cv.Mat map1, Cv.Mat map2, Cv.InterpolationFlags interpolation, Cv.BorderTypes borderType, Cv.Scalar borderValue) Parameters Type Name Description Cv.Mat src Cv.Mat dst Cv.Mat map1 Cv.Mat map2 Cv.InterpolationFlags interpolation Cv.BorderTypes borderType Cv.Scalar borderValue Rodrigues(Cv.Mat, out Cv.Vec3d) Declaration public static void Rodrigues(Cv.Mat rotationMatrix, out Cv.Vec3d rotationVector) Parameters Type Name Description Cv.Mat rotationMatrix Cv.Vec3d rotationVector Rodrigues(Cv.Vec3d, out Cv.Mat) Declaration public static void Rodrigues(Cv.Vec3d rotationVector, out Cv.Mat rotationMatrix) Parameters Type Name Description Cv.Vec3d rotationVector Cv.Mat rotationMatrix StereoCalibrate(Std.VectorVectorPoint3f, Std.VectorVectorPoint2f, Std.VectorVectorPoint2f, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Size, out Cv.Mat, out Cv.Vec3d, out Cv.Mat, out Cv.Mat, Cv.Calib) Declaration public static double StereoCalibrate(Std.VectorVectorPoint3f objectPoints, Std.VectorVectorPoint2f imagePoints1, Std.VectorVectorPoint2f imagePoints2, Cv.Mat cameraMatrix1, Cv.Mat distCoeffs1, Cv.Mat cameraMatrix2, Cv.Mat distCoeffs2, Cv.Size imageSize, out Cv.Mat rotationMatrix, out Cv.Vec3d tvec, out Cv.Mat essentialMatrix, out Cv.Mat fundamentalMatrix, Cv.Calib flags = Cv.Calib.FixIntrinsic) Parameters Type Name Description Std.VectorVectorPoint3f objectPoints Std.VectorVectorPoint2f imagePoints1 Std.VectorVectorPoint2f imagePoints2 Cv.Mat cameraMatrix1 Cv.Mat distCoeffs1 Cv.Mat cameraMatrix2 Cv.Mat distCoeffs2 Cv.Size imageSize Cv.Mat rotationMatrix Cv.Vec3d tvec Cv.Mat essentialMatrix Cv.Mat fundamentalMatrix Cv.Calib flags Returns Type Description System.Double StereoCalibrate(Std.VectorVectorPoint3f, Std.VectorVectorPoint2f, Std.VectorVectorPoint2f, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Size, out Cv.Mat, out Cv.Vec3d, out Cv.Mat, out Cv.Mat, Cv.Calib, Cv.TermCriteria) Declaration public static double StereoCalibrate(Std.VectorVectorPoint3f objectPoints, Std.VectorVectorPoint2f imagePoints1, Std.VectorVectorPoint2f imagePoints2, Cv.Mat cameraMatrix1, Cv.Mat distCoeffs1, Cv.Mat cameraMatrix2, Cv.Mat distCoeffs2, Cv.Size imageSize, out Cv.Mat rotationMatrix, out Cv.Vec3d tvec, out Cv.Mat essentialMatrix, out Cv.Mat fundamentalMatrix, Cv.Calib flags, Cv.TermCriteria criteria) Parameters Type Name Description Std.VectorVectorPoint3f objectPoints Std.VectorVectorPoint2f imagePoints1 Std.VectorVectorPoint2f imagePoints2 Cv.Mat cameraMatrix1 Cv.Mat distCoeffs1 Cv.Mat cameraMatrix2 Cv.Mat distCoeffs2 Cv.Size imageSize Cv.Mat rotationMatrix Cv.Vec3d tvec Cv.Mat essentialMatrix Cv.Mat fundamentalMatrix Cv.Calib flags Cv.TermCriteria criteria Returns Type Description System.Double StereoRectify(Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Size, Cv.Mat, Cv.Vec3d, out Cv.Mat, out Cv.Mat, out Cv.Mat, out Cv.Mat, out Cv.Mat, Cv.StereoRectifyFlags, Double) Declaration public static void StereoRectify(Cv.Mat cameraMatrix1, Cv.Mat distCoeffs1, Cv.Mat cameraMatrix2, Cv.Mat distCoeffs2, Cv.Size imageSize, Cv.Mat rotationMatrix, Cv.Vec3d tvec, out Cv.Mat rectificationMatrix1, out Cv.Mat rectificationMatrix2, out Cv.Mat projectionMatrix1, out Cv.Mat projectionMatrix2, out Cv.Mat disparityMatrix, Cv.StereoRectifyFlags flags = Cv.StereoRectifyFlags.ZeroDisparity, double scalingFactor = -1) Parameters Type Name Description Cv.Mat cameraMatrix1 Cv.Mat distCoeffs1 Cv.Mat cameraMatrix2 Cv.Mat distCoeffs2 Cv.Size imageSize Cv.Mat rotationMatrix Cv.Vec3d tvec Cv.Mat rectificationMatrix1 Cv.Mat rectificationMatrix2 Cv.Mat projectionMatrix1 Cv.Mat projectionMatrix2 Cv.Mat disparityMatrix Cv.StereoRectifyFlags flags System.Double scalingFactor StereoRectify(Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Size, Cv.Mat, Cv.Vec3d, out Cv.Mat, out Cv.Mat, out Cv.Mat, out Cv.Mat, out Cv.Mat, Cv.StereoRectifyFlags, Double, Cv.Size) Declaration public static void StereoRectify(Cv.Mat cameraMatrix1, Cv.Mat distCoeffs1, Cv.Mat cameraMatrix2, Cv.Mat distCoeffs2, Cv.Size imageSize, Cv.Mat rotationMatrix, Cv.Vec3d tvec, out Cv.Mat rectificationMatrix1, out Cv.Mat rectificationMatrix2, out Cv.Mat projectionMatrix1, out Cv.Mat projectionMatrix2, out Cv.Mat disparityMatrix, Cv.StereoRectifyFlags flags, double scalingFactor, Cv.Size newImageSize) Parameters Type Name Description Cv.Mat cameraMatrix1 Cv.Mat distCoeffs1 Cv.Mat cameraMatrix2 Cv.Mat distCoeffs2 Cv.Size imageSize Cv.Mat rotationMatrix Cv.Vec3d tvec Cv.Mat rectificationMatrix1 Cv.Mat rectificationMatrix2 Cv.Mat projectionMatrix1 Cv.Mat projectionMatrix2 Cv.Mat disparityMatrix Cv.StereoRectifyFlags flags System.Double scalingFactor Cv.Size newImageSize StereoRectify(Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Size, Cv.Mat, Cv.Vec3d, out Cv.Mat, out Cv.Mat, out Cv.Mat, out Cv.Mat, out Cv.Mat, Cv.StereoRectifyFlags, Double, Cv.Size, Cv.Rect) Declaration public static void StereoRectify(Cv.Mat cameraMatrix1, Cv.Mat distCoeffs1, Cv.Mat cameraMatrix2, Cv.Mat distCoeffs2, Cv.Size imageSize, Cv.Mat rotationMatrix, Cv.Vec3d tvec, out Cv.Mat rectificationMatrix1, out Cv.Mat rectificationMatrix2, out Cv.Mat projectionMatrix1, out Cv.Mat projectionMatrix2, out Cv.Mat disparityMatrix, Cv.StereoRectifyFlags flags, double scalingFactor, Cv.Size newImageSize, Cv.Rect validPixROI1) Parameters Type Name Description Cv.Mat cameraMatrix1 Cv.Mat distCoeffs1 Cv.Mat cameraMatrix2 Cv.Mat distCoeffs2 Cv.Size imageSize Cv.Mat rotationMatrix Cv.Vec3d tvec Cv.Mat rectificationMatrix1 Cv.Mat rectificationMatrix2 Cv.Mat projectionMatrix1 Cv.Mat projectionMatrix2 Cv.Mat disparityMatrix Cv.StereoRectifyFlags flags System.Double scalingFactor Cv.Size newImageSize Cv.Rect validPixROI1 StereoRectify(Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Size, Cv.Mat, Cv.Vec3d, out Cv.Mat, out Cv.Mat, out Cv.Mat, out Cv.Mat, out Cv.Mat, Cv.StereoRectifyFlags, Double, Cv.Size, Cv.Rect, Cv.Rect) Declaration public static void StereoRectify(Cv.Mat cameraMatrix1, Cv.Mat distCoeffs1, Cv.Mat cameraMatrix2, Cv.Mat distCoeffs2, Cv.Size imageSize, Cv.Mat rotationMatrix, Cv.Vec3d tvec, out Cv.Mat rectificationMatrix1, out Cv.Mat rectificationMatrix2, out Cv.Mat projectionMatrix1, out Cv.Mat projectionMatrix2, out Cv.Mat disparityMatrix, Cv.StereoRectifyFlags flags, double scalingFactor, Cv.Size newImageSize, Cv.Rect validPixROI1, Cv.Rect validPixROI2) Parameters Type Name Description Cv.Mat cameraMatrix1 Cv.Mat distCoeffs1 Cv.Mat cameraMatrix2 Cv.Mat distCoeffs2 Cv.Size imageSize Cv.Mat rotationMatrix Cv.Vec3d tvec Cv.Mat rectificationMatrix1 Cv.Mat rectificationMatrix2 Cv.Mat projectionMatrix1 Cv.Mat projectionMatrix2 Cv.Mat disparityMatrix Cv.StereoRectifyFlags flags System.Double scalingFactor Cv.Size newImageSize Cv.Rect validPixROI1 Cv.Rect validPixROI2 Undistort(Cv.Mat, out Cv.Mat, Cv.Mat, Cv.Mat) Declaration public static void Undistort(Cv.Mat inputImage, out Cv.Mat outputImage, Cv.Mat cameraMatrix, Cv.Mat distCoeffs) Parameters Type Name Description Cv.Mat inputImage Cv.Mat outputImage Cv.Mat cameraMatrix Cv.Mat distCoeffs Undistort(Cv.Mat, out Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat) Declaration public static void Undistort(Cv.Mat inputImage, out Cv.Mat outputImage, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, Cv.Mat newCameraMatrix) Parameters Type Name Description Cv.Mat inputImage Cv.Mat outputImage Cv.Mat cameraMatrix Cv.Mat distCoeffs Cv.Mat newCameraMatrix"
  },
  "api/ArucoUnity.Plugin.Cv.Vec4i.html": {
    "href": "api/ArucoUnity.Plugin.Cv.Vec4i.html",
    "title": "Class Cv.Vec4i | Aruco Unity documentation",
    "keywords": "Class Cv.Vec4i Inheritance System.Object Utility.HandleCppPtr Cv.Vec4i Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class Vec4i : Utility.HandleCppPtr Constructors Vec4i() Declaration public Vec4i() Vec4i(IntPtr, Utility.DeleteResponsibility) Declaration public Vec4i(IntPtr vec4iPtr, Utility.DeleteResponsibility deleteResponsibility = Utility.DeleteResponsibility.True) Parameters Type Name Description System.IntPtr vec4iPtr Utility.DeleteResponsibility deleteResponsibility Methods DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() Get(Int32) Declaration public int Get(int i) Parameters Type Name Description System.Int32 i Returns Type Description System.Int32 Set(Int32, Int32) Declaration public void Set(int i, int value) Parameters Type Name Description System.Int32 i System.Int32 value"
  },
  "api/ArucoUnity.Plugin.Cv.StereoRectifyFlags.html": {
    "href": "api/ArucoUnity.Plugin.Cv.StereoRectifyFlags.html",
    "title": "Enum Cv.StereoRectifyFlags | Aruco Unity documentation",
    "keywords": "Enum Cv.StereoRectifyFlags Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public enum StereoRectifyFlags Fields Name Description ZeroDisparity"
  },
  "api/ArucoUnity.Plugin.Cv.Size.html": {
    "href": "api/ArucoUnity.Plugin.Cv.Size.html",
    "title": "Class Cv.Size | Aruco Unity documentation",
    "keywords": "Class Cv.Size Inheritance System.Object Utility.HandleCppPtr Cv.Size Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class Size : Utility.HandleCppPtr Constructors Size() Declaration public Size() Size(Int32, Int32) Declaration public Size(int width, int height) Parameters Type Name Description System.Int32 width System.Int32 height Size(IntPtr, Utility.DeleteResponsibility) Declaration public Size(IntPtr sizePtr, Utility.DeleteResponsibility deleteResponsibility = Utility.DeleteResponsibility.True) Parameters Type Name Description System.IntPtr sizePtr Utility.DeleteResponsibility deleteResponsibility Properties Height Declaration public int Height { get; set; } Property Value Type Description System.Int32 Width Declaration public int Width { get; set; } Property Value Type Description System.Int32 Methods Area() Declaration public int Area() Returns Type Description System.Int32 DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr()"
  },
  "api/ArucoUnity.Plugin.Cv.Scalar.html": {
    "href": "api/ArucoUnity.Plugin.Cv.Scalar.html",
    "title": "Class Cv.Scalar | Aruco Unity documentation",
    "keywords": "Class Cv.Scalar Inheritance System.Object Utility.HandleCppPtr Cv.Scalar Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class Scalar : Utility.HandleCppPtr Constructors Scalar(Double, Double, Double) Declaration public Scalar(double v0, double v1, double v2) Parameters Type Name Description System.Double v0 System.Double v1 System.Double v2 Methods DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() Operators Implicit(Color to Cv.Scalar) Declaration public static implicit operator Cv.Scalar(Color color) Parameters Type Name Description Color color Returns Type Description Cv.Scalar"
  },
  "api/ArucoUnity.Plugin.Cv.Rect.html": {
    "href": "api/ArucoUnity.Plugin.Cv.Rect.html",
    "title": "Class Cv.Rect | Aruco Unity documentation",
    "keywords": "Class Cv.Rect Inheritance System.Object Utility.HandleCppPtr Cv.Rect Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class Rect : Utility.HandleCppPtr Constructors Rect() Declaration public Rect() Rect(Int32, Int32, Int32, Int32) Declaration public Rect(int x, int y, int width, int height) Parameters Type Name Description System.Int32 x System.Int32 y System.Int32 width System.Int32 height Rect(IntPtr, Utility.DeleteResponsibility) Declaration public Rect(IntPtr RectPtr, Utility.DeleteResponsibility deleteResponsibility = Utility.DeleteResponsibility.True) Parameters Type Name Description System.IntPtr RectPtr Utility.DeleteResponsibility deleteResponsibility Properties Height Declaration public int Height { get; set; } Property Value Type Description System.Int32 Width Declaration public int Width { get; set; } Property Value Type Description System.Int32 X Declaration public int X { get; set; } Property Value Type Description System.Int32 Y Declaration public int Y { get; set; } Property Value Type Description System.Int32 Methods DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr()"
  },
  "api/ArucoUnity.Plugin.Cv.Omnidir.Calib.html": {
    "href": "api/ArucoUnity.Plugin.Cv.Omnidir.Calib.html",
    "title": "Enum Cv.Omnidir.Calib | Aruco Unity documentation",
    "keywords": "Enum Cv.Omnidir.Calib Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public enum Calib Fields Name Description FixCenter FixGamma FixK1 FixK2 FixP1 FixP2 FixSkew FixXi UseGuess"
  },
  "api/ArucoUnity.Objects.Trackers.ArucoObjectsTracker.html": {
    "href": "api/ArucoUnity.Objects.Trackers.ArucoObjectsTracker.html",
    "title": "Class ArucoObjectsTracker | Aruco Unity documentation",
    "keywords": "Class ArucoObjectsTracker Detects ArucoObject , displays detections and applies the estimated transforms to gameObjects associated to the ArUco objects. See the OpenCV documentation for more information about the marker detection: http://docs.opencv.org/3.2.0/d5/dae/tutorial_aruco_detection.html Inheritance System.Object ArucoObjectDetector ArucoObjectsController ArucoObjectsTracker Implements IArucoObjectsTracker IArucoCameraController IArucoObjectsController IHasDetectorParameter Inherited Members ArucoObjectsController.ArucoObjectAdded ArucoObjectsController.ArucoObjectRemoved ArucoObjectsController.DictionaryAdded ArucoObjectsController.DictionaryRemoved ArucoObjectsController.ArucoObjects ArucoObjectsController.Start() ArucoObjectsController.AddArucoObject(ArucoObject) ArucoObjectsController.RemoveArucoObject(ArucoObject) ArucoObjectsController.GetArucoObjects<U>(Aruco.Dictionary) ArucoObjectsController.ArucoObject_PropertyUpdating(ArucoObject) ArucoObjectsController.ArucoObject_PropertyUpdated(ArucoObject) ArucoObjectDetector.DetectorParameters Namespace : ArucoUnity.Objects.Trackers Assembly : cs.temp.dll.dll Syntax public class ArucoObjectsTracker : ArucoObjectsController, IArucoObjectsTracker, IArucoCameraController, IArucoObjectsController, IHasDetectorParameter Fields additionalTrackers Declaration protected Dictionary<Type, ArucoObjectTracker> additionalTrackers Field Value Type Description Dictionary < System.Type , ArucoObjectTracker > trackingThread Declaration protected ArucoCameraSeparateThread trackingThread Field Value Type Description ArucoCameraSeparateThread Properties ArucoCameraDisplay Declaration public IArucoCameraDisplay ArucoCameraDisplay { get; set; } Property Value Type Description IArucoCameraDisplay DrawAxes Declaration public bool DrawAxes { get; set; } Property Value Type Description System.Boolean DrawDetectedCharucoMarkers Declaration public bool DrawDetectedCharucoMarkers { get; set; } Property Value Type Description System.Boolean DrawDetectedDiamonds Declaration public bool DrawDetectedDiamonds { get; set; } Property Value Type Description System.Boolean DrawDetectedMarkers Declaration public bool DrawDetectedMarkers { get; set; } Property Value Type Description System.Boolean DrawRejectedCandidates Declaration public bool DrawRejectedCandidates { get; set; } Property Value Type Description System.Boolean MarkerTracker Declaration public ArucoMarkerTracker MarkerTracker { get; protected set; } Property Value Type Description ArucoMarkerTracker RefineDetectedMarkers Declaration public bool RefineDetectedMarkers { get; set; } Property Value Type Description System.Boolean Methods ArucoCamera_ImagesUpdated() Updates the tracking thread with , calls DeactivateArucoObjects() and UpdateTransforms() and stops if there was an exception from this thread. Declaration protected void ArucoCamera_ImagesUpdated() ArucoObjectsController_ArucoObjectAdded(ArucoObject) Activates the tracker associated with the arucoObject and configure its gameObject. Declaration protected virtual void ArucoObjectsController_ArucoObjectAdded(ArucoObject arucoObject) Parameters Type Name Description ArucoObject arucoObject The added ArUco object. ArucoObjectsController_ArucoObjectRemoved(ArucoObject) Deactivates the tracker associated with the arucoObject if it was the last one of this type. Declaration protected virtual void ArucoObjectsController_ArucoObjectRemoved(ArucoObject arucoObject) Parameters Type Name Description ArucoObject arucoObject The removed Awake() Initializes the trackers list and sets ArucoCameraDisplay from editor field if not null. Declaration protected override void Awake() Overrides ArucoObjectsController.Awake() Configuring() Add ArucoCameraDisplay as dependency. Declaration protected override void Configuring() Overrides ArucoObjectDetector.Configuring() DeactivateArucoObjects() Declaration public void DeactivateArucoObjects() Detect() Declaration public void Detect() Detect(Cv.Mat[]) Declaration public void Detect(Cv.Mat[] images) Parameters Type Name Description Cv.Mat [] images Draw() Declaration public void Draw() Draw(Cv.Mat[]) Declaration public void Draw(Cv.Mat[] images) Parameters Type Name Description Cv.Mat [] images EstimateTransforms() Declaration public void EstimateTransforms() ExecuteOnActivatedTrackers(Action<ArucoObjectTracker, Int32, Aruco.Dictionary>) Executes an actionOnTracker on all the activated ArucoObjectTracker . Declaration protected void ExecuteOnActivatedTrackers(Action<ArucoObjectTracker, int, Aruco.Dictionary> actionOnTracker) Parameters Type Name Description System.Action < ArucoObjectTracker , System.Int32 , Aruco.Dictionary > actionOnTracker Starting() Initializes the tracking, activates the trackers, susbcribes to the and events and starts the tracking thread. Declaration protected override void Starting() Stopping() Unsuscribes from ArucoObjectController events, deactivates the trackers and abort the tracking thread and stops the tracking thread. Declaration protected override void Stopping() TrackArucoObjects(Cv.Mat[]) Detects and estimates the transforms of the detected ArUco objects. Executed on a separated tracking thread. Declaration protected void TrackArucoObjects(Cv.Mat[] images) Parameters Type Name Description Cv.Mat [] images UpdateTransforms() Declaration public void UpdateTransforms() Implements IArucoObjectsTracker IArucoCameraController IArucoObjectsController IHasDetectorParameter"
  },
  "api/ArucoUnity.Objects.Trackers.ArucoObjectsController.html": {
    "href": "api/ArucoUnity.Objects.Trackers.ArucoObjectsController.html",
    "title": "Class ArucoObjectsController | Aruco Unity documentation",
    "keywords": "Class ArucoObjectsController Manages a list of ArucoObject to detect for a camera system. Inheritance System.Object ArucoObjectDetector ArucoObjectsController ArucoObjectsTracker Implements IHasDetectorParameter IArucoObjectsController Inherited Members ArucoObjectDetector.DetectorParameters ArucoObjectDetector.Configuring() Namespace : ArucoUnity.Objects.Trackers Assembly : cs.temp.dll.dll Syntax public abstract class ArucoObjectsController : ArucoObjectDetector, IHasDetectorParameter, IArucoObjectsController Properties ArucoObjects Declaration public Dictionary<Aruco.Dictionary, Dictionary<int, ArucoObject>> ArucoObjects { get; protected set; } Property Value Type Description Dictionary < Aruco.Dictionary , Dictionary < System.Int32 , ArucoObject >> Methods AddArucoObject(ArucoObject) Declaration public virtual void AddArucoObject(ArucoObject arucoObject) Parameters Type Name Description ArucoObject arucoObject ArucoObject_PropertyUpdated(ArucoObject) Re-adds the updated ArUco object the ArucoObjects list. Declaration protected virtual void ArucoObject_PropertyUpdated(ArucoObject arucoObject) Parameters Type Name Description ArucoObject arucoObject The updated ArUco object. ArucoObject_PropertyUpdating(ArucoObject) Remove an ArucoObject from the ArucoObjects list, before the its properties will be updated. Declaration protected virtual void ArucoObject_PropertyUpdating(ArucoObject arucoObject) Parameters Type Name Description ArucoObject arucoObject The updated ArUco object. Awake() Initializes the properties. Declaration protected override void Awake() GetArucoObjects<U>(Aruco.Dictionary) Declaration public virtual HashSet<U> GetArucoObjects<U>(Aruco.Dictionary dictionary) where U : ArucoObject Parameters Type Name Description Aruco.Dictionary dictionary Returns Type Description HashSet <U> Type Parameters Name Description U RemoveArucoObject(ArucoObject) Declaration public virtual void RemoveArucoObject(ArucoObject arucoObject) Parameters Type Name Description ArucoObject arucoObject Start() Adds to the ArucoObjects list the ArUco objects added from the editor field array ArucoUnity.Objects.Trackers.ArucoObjectsController.arucoObjects . Declaration protected override void Start() Events ArucoObjectAdded Declaration public event Action<ArucoObject> ArucoObjectAdded Event Type Type Description System.Action < ArucoObject > ArucoObjectRemoved Declaration public event Action<ArucoObject> ArucoObjectRemoved Event Type Type Description System.Action < ArucoObject > DictionaryAdded Declaration public event Action<Aruco.Dictionary> DictionaryAdded Event Type Type Description System.Action < Aruco.Dictionary > DictionaryRemoved Declaration public event Action<Aruco.Dictionary> DictionaryRemoved Event Type Type Description System.Action < Aruco.Dictionary > Implements IHasDetectorParameter IArucoObjectsController"
  },
  "api/ArucoUnity.Objects.Trackers.ArucoObjectDetector.html": {
    "href": "api/ArucoUnity.Objects.Trackers.ArucoObjectDetector.html",
    "title": "Class ArucoObjectDetector | Aruco Unity documentation",
    "keywords": "Class ArucoObjectDetector Detects ArUco objects for a camera system according to DetectorParameters . Inheritance System.Object ArucoObjectDetector ArucoCameraCalibration ArucoObjectsController Implements IHasDetectorParameter Namespace : ArucoUnity.Objects.Trackers Assembly : cs.temp.dll.dll Syntax public abstract class ArucoObjectDetector : ArucoCameraController, IHasDetectorParameter Properties DetectorParameters Gets or sets the parameters to use for the detection. Declaration public Aruco.DetectorParameters DetectorParameters { get; set; } Property Value Type Description Aruco.DetectorParameters Methods Configuring() Checks if DetectorParameters is set. Declaration protected override void Configuring() Implements IHasDetectorParameter"
  },
  "api/ArucoUnity.Objects.Displayers.html": {
    "href": "api/ArucoUnity.Objects.Displayers.html",
    "title": "Namespace ArucoUnity.Objects.Displayers | Aruco Unity documentation",
    "keywords": "Namespace ArucoUnity.Objects.Displayers Classes ArucoObjectCreator Create and display images of an ArUco object ready to be printed. See the OpenCV documentation for more information about the marker creation (second section of the following tutorial): http://docs.opencv.org/3.2.0/d5/dae/tutorial_aruco_detection.html ArucoObjectDisplayer"
  },
  "api/ArucoUnity.Objects.Displayers.ArucoObjectDisplayer.html": {
    "href": "api/ArucoUnity.Objects.Displayers.ArucoObjectDisplayer.html",
    "title": "Class ArucoObjectDisplayer | Aruco Unity documentation",
    "keywords": "Class ArucoObjectDisplayer Inheritance System.Object ArucoObjectDisplayer ArucoObjectCreator Namespace : ArucoUnity.Objects.Displayers Assembly : cs.temp.dll.dll Syntax public class ArucoObjectDisplayer : MonoBehaviour Fields imagePlaneMaterial Declaration protected Material imagePlaneMaterial Field Value Type Description Material Properties ArucoObject Get or sets the ArUco object to display. Declaration protected ArucoObject ArucoObject { get; set; } Property Value Type Description ArucoObject DisplayInPlayMode Gets or sets if ImagePlane is displayed in play mode. Declaration protected bool DisplayInPlayMode { get; set; } Property Value Type Description System.Boolean Image Gets the image of the ArucoObject to display. Declaration public Cv.Mat Image { get; protected set; } Property Value Type Description Cv.Mat ImagePlane Gets the plane that display ImageTexture . Declaration public GameObject ImagePlane { get; protected set; } Property Value Type Description GameObject ImagePlanePrefab Gets or sets the prefab of ImagePlane . If null, default will be loaded: Prefabs/Resources/ArucoCreatorImagePlane.prefab . Declaration public GameObject ImagePlanePrefab { get; set; } Property Value Type Description GameObject ImageTexture Gets the texture that contains Image . Declaration public Texture2D ImageTexture { get; protected set; } Property Value Type Description Texture2D Methods ArucoObject_PropertyUpdated(ArucoObject) Calls UpdateImage() . Declaration protected virtual void ArucoObject_PropertyUpdated(ArucoObject arucoObject) Parameters Type Name Description ArucoObject arucoObject CreateImage() Creates Image and ImageTexture from ArucoObject . Declaration public virtual void CreateImage() DisplayImage() Updates ImagePlane with ImageTexture . Declaration public virtual void DisplayImage() InitializeImagePlane() Initializes ImagePlane . Declaration protected virtual void InitializeImagePlane() OnDestroy() Unsubscribes from the PropertyUpdated event. Declaration protected virtual void OnDestroy() PlaceImagePlane() Places, rotates and scales the image plane. Declaration protected virtual void PlaceImagePlane() ResetImage() Resets Image , ImageTexture and ImagePlane . Declaration public virtual void ResetImage() SetArucoObject(ArucoObject) Subscribes to the PropertyUpdated event, and unsubscribes from the previous ArucoObject. Declaration protected virtual void SetArucoObject(ArucoObject arucoObject) Parameters Type Name Description ArucoObject arucoObject Start() Calls SetArucoObject(ArucoObject) to display the ArucoObject only in play mode. Declaration protected virtual void Start() Update() Updates the display in the editor if ArucoObject has been changed. Declaration protected virtual void Update() UpdateImage() Calls CreateImage() then DisplayImage() if Image has been created or ResetImage() . Declaration protected virtual void UpdateImage()"
  },
  "api/ArucoUnity.Objects.Displayers.ArucoObjectCreator.html": {
    "href": "api/ArucoUnity.Objects.Displayers.ArucoObjectCreator.html",
    "title": "Class ArucoObjectCreator | Aruco Unity documentation",
    "keywords": "Class ArucoObjectCreator Create and display images of an ArUco object ready to be printed. See the OpenCV documentation for more information about the marker creation (second section of the following tutorial): http://docs.opencv.org/3.2.0/d5/dae/tutorial_aruco_detection.html Inheritance System.Object ArucoObjectDisplayer ArucoObjectCreator Inherited Members ArucoObjectDisplayer.ArucoObject ArucoObjectDisplayer.DisplayInPlayMode ArucoObjectDisplayer.ImagePlanePrefab ArucoObjectDisplayer.ImagePlane ArucoObjectDisplayer.Image ArucoObjectDisplayer.ImageTexture ArucoObjectDisplayer.imagePlaneMaterial ArucoObjectDisplayer.Start() ArucoObjectDisplayer.Update() ArucoObjectDisplayer.OnDestroy() ArucoObjectDisplayer.CreateImage() ArucoObjectDisplayer.DisplayImage() ArucoObjectDisplayer.ResetImage() ArucoObjectDisplayer.SetArucoObject(ArucoObject) ArucoObjectDisplayer.InitializeImagePlane() ArucoObjectDisplayer.ArucoObject_PropertyUpdated(ArucoObject) Namespace : ArucoUnity.Objects.Displayers Assembly : cs.temp.dll.dll Syntax public class ArucoObjectCreator : ArucoObjectDisplayer Fields pixelsToMetersFactor Declaration public const float pixelsToMetersFactor = 0.001F Field Value Type Description System.Single Properties AutoSaveImage Gets or sets if the ImageTexture is automatically saved in play mode. Declaration public bool AutoSaveImage { get; set; } Property Value Type Description System.Boolean ImageFilename Gets or sets the name of the image, without the extension (.png added automatically). If null, it will be generated automatically. Declaration public string ImageFilename { get; set; } Property Value Type Description System.String OutputFolder Gets or sets the output folder for the image, relative to the Application.persistentDataPath folder (default: ArucoUnity/Images/). Declaration public string OutputFolder { get; set; } Property Value Type Description System.String Methods PlaceImagePlane() Declaration protected override void PlaceImagePlane() Overrides ArucoObjectDisplayer.PlaceImagePlane() SaveImage() Save the on a image file in the OutputFolder with ImageFilename as filename. Declaration public virtual void SaveImage() UpdateImage() Calls UpdateImage() then SaveImage() if AutoSaveImage is set. Also set ImageFilename in the editor. Declaration protected override void UpdateImage() Overrides ArucoObjectDisplayer.UpdateImage()"
  },
  "api/ArucoUnity.Objects.ArucoObject.html": {
    "href": "api/ArucoUnity.Objects.ArucoObject.html",
    "title": "Class ArucoObject | Aruco Unity documentation",
    "keywords": "Class ArucoObject Describes the shared properties of all the ArUco objects. Trackers, Creators and Calibrators use this interface. Inheritance System.Object ArucoObject ArucoBoard ArucoDiamond ArucoMarker Namespace : ArucoUnity.Objects Assembly : cs.temp.dll.dll Syntax public abstract class ArucoObject : MonoBehaviour Fields metersToPixels300ppp Declaration protected const float metersToPixels300ppp = 11811.0234F Field Value Type Description System.Single Properties ArucoHashCode Declaration public int ArucoHashCode { get; protected set; } Property Value Type Description System.Int32 Dictionary Gets or sets the dictionary to use. Declaration public Aruco.Dictionary Dictionary { get; set; } Property Value Type Description Aruco.Dictionary DisplayInEditor Declaration public bool DisplayInEditor { get; set; } Property Value Type Description System.Boolean MarkerBorderBits Gets or sets the number of bits in marker borders (default: 1). Used by Creators. Declaration public uint MarkerBorderBits { get; set; } Property Value Type Description System.UInt32 MarkerSideLength Gets or sets the side length of each marker. In pixels for Creators. In meters for Trackers and Calibrators. Declaration public float MarkerSideLength { get; set; } Property Value Type Description System.Single Methods Awake() Calls UpdateProperties() . Declaration protected virtual void Awake() Draw() Returns the image of the ArUco object. In editor it should returns null and no exception if the object is incorrectly configured. Declaration public abstract Cv.Mat Draw() Returns Type Description Cv.Mat The image of the ArUco object. GenerateName() Returns a generated name depending on the value of the properties. Declaration public abstract string GenerateName() Returns Type Description System.String GetGameObjectScale() Gets the scale to MarkerSideLength length. Declaration public abstract Vector3 GetGameObjectScale() Returns Type Description Vector3 GetInPixels(Single) Returns a value as an int, with a conversion from meters to pixels if the property value is less than 10. Declaration protected int GetInPixels(float propertyValue) Parameters Type Name Description System.Single propertyValue Returns Type Description System.Int32 OnPropertyUpdated() Calls UpdateProperties() and the PropertyUpdated event. Declaration protected void OnPropertyUpdated() OnPropertyUpdating() Calls the event PropertyUpdating . Declaration protected void OnPropertyUpdating() OnValidate() Calls OnPropertyUpdated() in editor mode. Declaration protected virtual void OnValidate() UpdateArucoHashCode() Updates the ArUco hash code of the object. Declaration protected abstract void UpdateArucoHashCode() UpdateProperties() Initializes the properties and calls the UpdateArucoHashCode() method. Declaration protected virtual void UpdateProperties() Events PropertyUpdated Executed after a property has been updated. Declaration public event Action<ArucoObject> PropertyUpdated Event Type Type Description System.Action < ArucoObject > PropertyUpdating Executed before a property is going to be updated. Declaration public event Action<ArucoObject> PropertyUpdating Event Type Type Description System.Action < ArucoObject >"
  },
  "api/ArucoUnity.Objects.ArucoBoard.html": {
    "href": "api/ArucoUnity.Objects.ArucoBoard.html",
    "title": "Class ArucoBoard | Aruco Unity documentation",
    "keywords": "Class ArucoBoard Describes the shared properties of the ArUco boards. Inheritance System.Object ArucoObject ArucoBoard ArucoCharucoBoard ArucoGridBoard Inherited Members ArucoObject.metersToPixels300ppp ArucoObject.PropertyUpdating ArucoObject.PropertyUpdated ArucoObject.ArucoHashCode ArucoObject.Dictionary ArucoObject.MarkerSideLength ArucoObject.MarkerBorderBits ArucoObject.DisplayInEditor ArucoObject.OnValidate() ArucoObject.Draw() ArucoObject.GenerateName() ArucoObject.GetGameObjectScale() ArucoObject.UpdateArucoHashCode() ArucoObject.OnPropertyUpdating() ArucoObject.OnPropertyUpdated() ArucoObject.GetInPixels(Single) Namespace : ArucoUnity.Objects Assembly : cs.temp.dll.dll Syntax public abstract class ArucoBoard : ArucoObject Properties AxisLength Gets or sets the length of the axis lines when drawn on the board. Declaration public float AxisLength { get; protected set; } Property Value Type Description System.Single Board Gets or sets the associated board from the ArucoUnity plugin library. Declaration public Aruco.Board Board { get; protected set; } Property Value Type Description Aruco.Board ImageSize Gets or sets the image size for drawing the board. Declaration public Vector2 ImageSize { get; protected set; } Property Value Type Description Vector2 MarginsLength Gets or sets the length of the margins around the board in pixels, used by the Creators (default: 0). Declaration public int MarginsLength { get; set; } Property Value Type Description System.Int32 Rvec Gets or sets the estimated rotation vector of the board when tracked. Declaration public Cv.Vec3d Rvec { get; set; } Property Value Type Description Cv.Vec3d Tvec Gets or sets the estimated translation vector of the board when tracked. Declaration public Cv.Vec3d Tvec { get; set; } Property Value Type Description Cv.Vec3d Methods Awake() Calls UpdateBoard() . Declaration protected override void Awake() Overrides ArucoObject.Awake() UpdateBoard() Updates the Board properties. Declaration protected abstract void UpdateBoard() UpdateProperties() Calls OnPropertyUpdated() and calls UpdateBoard() . Declaration protected override void UpdateProperties() Overrides ArucoObject.UpdateProperties()"
  },
  "api/ArucoUnity.Cameras.StereoArucoCamera.html": {
    "href": "api/ArucoUnity.Cameras.StereoArucoCamera.html",
    "title": "Class StereoArucoCamera | Aruco Unity documentation",
    "keywords": "Class StereoArucoCamera Captures images of stereo camera. Inheritance System.Object ArucoCamera StereoArucoCamera StereoArucoWebcam Implements IArucoCamera IConfigurableController Inherited Members ArucoCamera.dontFlipCode ArucoCamera.ImagesUpdated ArucoCamera.UndistortRectifyImages ArucoCamera.Name ArucoCamera.Textures ArucoCamera.Images ArucoCamera.ImageDatas ArucoCamera.ImageDataSizes ArucoCamera.ImageRatios ArucoCamera.NextImages ArucoCamera.NextImageDatas ArucoCamera.currentBuffer ArucoCamera.imageBuffers ArucoCamera.imageDataBuffers ArucoCamera.imagesToTextures ArucoCamera.imagesToTextureDatas ArucoCamera.imagesUpdatedThisFrame ArucoCamera.flipHorizontallyImages ArucoCamera.flipVerticallyImages ArucoCamera.imagesFlipCode ArucoCamera.Update() ArucoCamera.Configuring() ArucoCamera.OnStarted() ArucoCamera.UpdatingImages() ArucoCamera.OnImagesUpdated() Namespace : ArucoUnity.Cameras Assembly : cs.temp.dll.dll Syntax public abstract class StereoArucoCamera : ArucoCamera, IArucoCamera, IConfigurableController Fields StereoCameraNumber Declaration public const int StereoCameraNumber = 2 Field Value Type Description System.Int32 Properties CameraId1 Gets the id of the first camera. Declaration public static int CameraId1 { get; } Property Value Type Description System.Int32 CameraId2 Gets the id of the second camera. Declaration public static int CameraId2 { get; } Property Value Type Description System.Int32 CameraNumber Declaration public override int CameraNumber { get; } Property Value Type Description System.Int32 Overrides ArucoCamera.CameraNumber Implements IArucoCamera IConfigurableController"
  },
  "api/ArucoUnity.Cameras.Parameters.IHasArucoCameraParameters.html": {
    "href": "api/ArucoUnity.Cameras.Parameters.IHasArucoCameraParameters.html",
    "title": "Interface IHasArucoCameraParameters | Aruco Unity documentation",
    "keywords": "Interface IHasArucoCameraParameters Contains a ArucoCameraParameters . Namespace : ArucoUnity.Cameras.Parameters Assembly : cs.temp.dll.dll Syntax public interface IHasArucoCameraParameters Properties CameraParameters Gets or sets the IArucoCamera camera parameters. Declaration ArucoCameraParameters CameraParameters { get; set; } Property Value Type Description ArucoCameraParameters"
  },
  "api/ArucoUnity.Cameras.Parameters.ArucoCameraParametersController.html": {
    "href": "api/ArucoUnity.Cameras.Parameters.ArucoCameraParametersController.html",
    "title": "Class ArucoCameraParametersController | Aruco Unity documentation",
    "keywords": "Class ArucoCameraParametersController Editor controller for CameraParameters . Inheritance System.Object ArucoCameraParametersController Implements IHasArucoCameraParameters Namespace : ArucoUnity.Cameras.Parameters Assembly : cs.temp.dll.dll Syntax public class ArucoCameraParametersController : MonoBehaviour, IHasArucoCameraParameters Properties AutoLoadFile Gets or sets if automatically load the camera parameters file at start. Declaration public bool AutoLoadFile { get; set; } Property Value Type Description System.Boolean CameraParameters Gets or sets the camera parameters. Declaration public ArucoCameraParameters CameraParameters { get; set; } Property Value Type Description ArucoCameraParameters CameraParametersFilename Gets or sets the xml file corresponding to the camera parameters, relative to CameraParametersFolderPath folder. Declaration public string CameraParametersFilename { get; set; } Property Value Type Description System.String CameraParametersFilePath Gets the file path to the camera parameters. Declaration public string CameraParametersFilePath { get; protected set; } Property Value Type Description System.String CameraParametersFolderPath Gets or sets the folder of the camera parameters files, relative to the folder. Declaration public string CameraParametersFolderPath { get; set; } Property Value Type Description System.String Methods Awake() Calls SetCameraParametersFilePath(String, String) then Load() if CameraParametersFilePath is set. Declaration protected virtual void Awake() Initialize(Int32) Initializes CameraParameters with ArucoCameraParameters(Int32) Declaration public virtual void Initialize(int cameraNumber) Parameters Type Name Description System.Int32 cameraNumber The number of cameras in the calibrated camera system. Load() Initializes CameraParameters with LoadFromXmlFile(String) . Declaration public virtual void Load() Save() Calls SaveToXmlFile(String) with CameraParametersFolderPath . Also creates the CameraParametersFolderPath folder before if necessary. Declaration public virtual void Save() SetCameraParametersFilePath(String, String) Sets CameraParametersFilePath and tries to load CameraParameters from this file if CameraParametersFolderPath and CameraParametersFilename are set, otherwise set CameraParametersFilePath and CameraParameters to null. Declaration protected virtual void SetCameraParametersFilePath(string cameraParametersFolderPath, string cameraParametersFilename) Parameters Type Name Description System.String cameraParametersFolderPath System.String cameraParametersFilename Implements IHasArucoCameraParameters"
  },
  "api/ArucoUnity.Cameras.IArucoCamera.html": {
    "href": "api/ArucoUnity.Cameras.IArucoCamera.html",
    "title": "Interface IArucoCamera | Aruco Unity documentation",
    "keywords": "Interface IArucoCamera Captures images of a camera. Namespace : ArucoUnity.Cameras Assembly : cs.temp.dll.dll Syntax public interface IArucoCamera : IConfigurableController Properties CameraNumber Gets the number of cameras in the system. Declaration int CameraNumber { get; } Property Value Type Description System.Int32 ImageDatas Gets the Images content. Declaration byte[][] ImageDatas { get; } Property Value Type Description System.Byte [][] ImageDataSizes Gets the size of each ImageDatas . Declaration int[] ImageDataSizes { get; } Property Value Type Description System.Int32 [] ImageRatios Gets the ratios of each Images . Declaration float[] ImageRatios { get; } Property Value Type Description System.Single [] Images Gets or sets the current images manipulated by OpenCV. There are CameraNumber images: one for each camera. Declaration Cv.Mat[] Images { get; } Property Value Type Description Cv.Mat [] Name Gets the name of the camera system used. Declaration string Name { get; } Property Value Type Description System.String Textures Gets the the current images manipulated by Unity. There are CameraNumber images: one for each camera. Declaration Texture2D[] Textures { get; } Property Value Type Description Texture2D [] Events ImagesUpdated Called when the Images have been updated. Declaration event Action ImagesUpdated Event Type Type Description System.Action UndistortRectifyImages Callback to undistort and rectify the images in parameters. Declaration event Action<Cv.Mat[], byte[][]> UndistortRectifyImages Event Type Type Description System.Action < Cv.Mat [], System.Byte [][]>"
  },
  "api/ArucoUnity.Cameras.Displays.html": {
    "href": "api/ArucoUnity.Cameras.Displays.html",
    "title": "Namespace ArucoUnity.Cameras.Displays | Aruco Unity documentation",
    "keywords": "Namespace ArucoUnity.Cameras.Displays Classes ArucoCameraDisplay Manages Unity virual cameras that shoot 3D content aligned with the Images displayed as background. It creates the augmented reality effect by the images from the physical cameras and the ArucoObject tracked by ArucoObjectsTracker . ArucoCameraDisplayGeneric<T, U> MonoArucoCameraDisplay Displays a mono ArucoCamera . StereoArucoCameraDisplay Displays a StereoArucoCamera . StereoVRArucoCameraDisplay Displays a StereoArucoCamera in a VR HMD. Interfaces IArucoCameraDisplay Manages Unity virual cameras that shoot 3D content aligned with the Images displayed as background. It creates the augmented reality effect by aligning the images from the physical cameras and the ArucoObject tracked by IArucoObjectsTracker ."
  },
  "api/ArucoUnity.Cameras.Displays.MonoArucoCameraDisplay.html": {
    "href": "api/ArucoUnity.Cameras.Displays.MonoArucoCameraDisplay.html",
    "title": "Class MonoArucoCameraDisplay | Aruco Unity documentation",
    "keywords": "Class MonoArucoCameraDisplay Displays a mono ArucoCamera . Inheritance System.Object ArucoCameraController ArucoCameraDisplay ArucoCameraDisplayGeneric < ArucoCamera , ArucoCameraUndistortion > MonoArucoCameraDisplay Implements IArucoCameraDisplay IArucoCameraController IConfigurableController Inherited Members ArucoCameraDisplayGeneric<ArucoCamera, ArucoCameraUndistortion>.Awake() ArucoCameraDisplay.cameraBackgroundDistance ArucoCameraDisplay.ArucoCameraUndistortion ArucoCameraDisplay.Configuring() ArucoCameraDisplay.Starting() ArucoCameraDisplay.Stopping() ArucoCameraDisplay.PlaceArucoObject(Transform, Int32, Vector3, Quaternion) ArucoCameraDisplay.ConfigureDisplay() ArucoCameraDisplay.SetDisplayActive(Boolean) ArucoCameraDisplay.ConfigureDefaultBackgrounds() ArucoCameraDisplay.ConfigureRectifiedCamera(Int32) ArucoCameraDisplay.ConfigureRectifiedBackground(Int32) ArucoCameraController.ArucoCamera Namespace : ArucoUnity.Cameras.Displays Assembly : cs.temp.dll.dll Syntax public class MonoArucoCameraDisplay : ArucoCameraDisplayGeneric<ArucoCamera, ArucoCameraUndistortion>, IArucoCameraDisplay, IArucoCameraController, IConfigurableController Properties BackgroundCameras Declaration public override Camera[] BackgroundCameras { get; protected set; } Property Value Type Description Camera [] Overrides ArucoCameraDisplay.BackgroundCameras Backgrounds Declaration public override Renderer[] Backgrounds { get; protected set; } Property Value Type Description Renderer [] Overrides ArucoCameraDisplay.Backgrounds Cameras Declaration public override Camera[] Cameras { get; protected set; } Property Value Type Description Camera [] Overrides ArucoCameraDisplay.Cameras Methods OnValidate() Resizes the length of the ArucoUnity.Cameras.Displays.MonoArucoCameraDisplay.cameras , ArucoUnity.Cameras.Displays.MonoArucoCameraDisplay.backgroundCameras and ArucoUnity.Cameras.Displays.MonoArucoCameraDisplay.backgrounds editor fields to CameraNumber if different. Declaration protected virtual void OnValidate() Implements IArucoCameraDisplay IArucoCameraController IConfigurableController"
  },
  "api/ArucoUnity.Cameras.Displays.IArucoCameraDisplay.html": {
    "href": "api/ArucoUnity.Cameras.Displays.IArucoCameraDisplay.html",
    "title": "Interface IArucoCameraDisplay | Aruco Unity documentation",
    "keywords": "Interface IArucoCameraDisplay Manages Unity virual cameras that shoot 3D content aligned with the Images displayed as background. It creates the augmented reality effect by aligning the images from the physical cameras and the ArucoObject tracked by IArucoObjectsTracker . Inherited Members IArucoCameraController.ArucoCamera Namespace : ArucoUnity.Cameras.Displays Assembly : cs.temp.dll.dll Syntax public interface IArucoCameraDisplay : IArucoCameraController, IConfigurableController Properties ArucoCameraUndistortion Gets the optional undistortion process associated with the ArucoCamera. Declaration IArucoCameraUndistortion ArucoCameraUndistortion { get; set; } Property Value Type Description IArucoCameraUndistortion BackgroundCameras Gets the Unity virtual camera that will shoot the Backgrounds . Declaration Camera[] BackgroundCameras { get; } Property Value Type Description Camera [] Backgrounds Gets the backgrounds displaying the Images of the corresponding physical camera in ArucoCamera. Declaration Renderer[] Backgrounds { get; } Property Value Type Description Renderer [] Cameras Gets the Unity virtual camera that will shoot the 3D content aligned with the . Declaration Camera[] Cameras { get; } Property Value Type Description Camera [] Methods PlaceArucoObject(Transform, Int32, Vector3, Quaternion) Updates the transform of an ArUco object. Declaration void PlaceArucoObject(Transform arucoObject, int cameraId, Vector3 localPosition, Quaternion localRotation) Parameters Type Name Description Transform arucoObject The transfomr to the ArUco object to place. System.Int32 cameraId The id of the camera to use. The transform is placed and oriented relative to this camera. Vector3 localPosition The estimated translation of the transform relative to the camera. Quaternion localRotation The estimated rotation of the transform relative to the camera."
  },
  "api/ArucoUnity.Cameras.ArucoWebcam.html": {
    "href": "api/ArucoUnity.Cameras.ArucoWebcam.html",
    "title": "Class ArucoWebcam | Aruco Unity documentation",
    "keywords": "Class ArucoWebcam Captures images of a webcam. Inheritance System.Object ArucoCamera ArucoWebcam Implements IArucoCamera IConfigurableController Inherited Members ArucoCamera.dontFlipCode ArucoCamera.ImagesUpdated ArucoCamera.UndistortRectifyImages ArucoCamera.Textures ArucoCamera.Images ArucoCamera.ImageDatas ArucoCamera.ImageDataSizes ArucoCamera.ImageRatios ArucoCamera.NextImages ArucoCamera.NextImageDatas ArucoCamera.currentBuffer ArucoCamera.imageBuffers ArucoCamera.imageDataBuffers ArucoCamera.imagesToTextures ArucoCamera.imagesToTextureDatas ArucoCamera.imagesUpdatedThisFrame ArucoCamera.flipHorizontallyImages ArucoCamera.flipVerticallyImages ArucoCamera.imagesFlipCode ArucoCamera.Update() ArucoCamera.OnImagesUpdated() Namespace : ArucoUnity.Cameras Assembly : cs.temp.dll.dll Syntax public class ArucoWebcam : ArucoCamera, IArucoCamera, IConfigurableController Fields cameraId Declaration protected const int cameraId = 0 Field Value Type Description System.Int32 Properties CameraNumber Declaration public override int CameraNumber { get; } Property Value Type Description System.Int32 Overrides ArucoCamera.CameraNumber Name Declaration public override string Name { get; protected set; } Property Value Type Description System.String Overrides ArucoCamera.Name WebcamController Gets the controller of the webcam to use. Declaration public WebcamController WebcamController { get; } Property Value Type Description WebcamController WebcamId Gets or set the id of the webcam to use. Declaration public int WebcamId { get; set; } Property Value Type Description System.Int32 Methods Awake() Initializes WebcamController and subscribes to. Declaration protected override void Awake() Configuring() Calls Configure() and sets Name . Declaration protected override void Configuring() Overrides ArucoCamera.Configuring() OnDestroy() Unsubscribes to WebcamController . Declaration protected override void OnDestroy() OnStarted() Blocks OnStarted() until IsStarted . Declaration protected override void OnStarted() Overrides ArucoCamera.OnStarted() Starting() Calls StartWebcams() . Declaration protected override void Starting() Stopping() Calls StopWebcams() . Declaration protected override void Stopping() UpdatingImages() Copy current webcam images to NextImages . Declaration protected override bool UpdatingImages() Returns Type Description System.Boolean Overrides ArucoCamera.UpdatingImages() WebcamController_Started(WebcamController) Configures Textures and calls OnStarted() . Declaration protected virtual void WebcamController_Started(WebcamController webcamController) Parameters Type Name Description WebcamController webcamController Implements IArucoCamera IConfigurableController"
  },
  "api/ArucoUnity.Utilities.html": {
    "href": "api/ArucoUnity.Utilities.html",
    "title": "Namespace ArucoUnity.Utilities | Aruco Unity documentation",
    "keywords": "Namespace ArucoUnity.Utilities Classes ArucoCameraSeparateThread ConfigurableController Configurable and startable controller. CvMatExtensions Interfaces IConfigurableController Configurable and startable controller. It can have other configurable controllers as dependencies. They must have started before starting this controller. They stop this controller when at least one of them stops."
  },
  "api/ArucoUnity.Utilities.IConfigurableController.html": {
    "href": "api/ArucoUnity.Utilities.IConfigurableController.html",
    "title": "Interface IConfigurableController | Aruco Unity documentation",
    "keywords": "Interface IConfigurableController Configurable and startable controller. It can have other configurable controllers as dependencies. They must have started before starting this controller. They stop this controller when at least one of them stops. Namespace : ArucoUnity.Utilities Assembly : cs.temp.dll.dll Syntax public interface IConfigurableController Properties AutoStart Gets or sets if configuring and starting automatically when when all dependencies started. Manually configure and start by calling ConfigureController() and StartController() . Declaration bool AutoStart { get; set; } Property Value Type Description System.Boolean IsConfigured Gets if the controller is configured. Declaration bool IsConfigured { get; } Property Value Type Description System.Boolean IsReady Gets if the controller is ready to be started when all dependencies have started. Declaration bool IsReady { get; } Property Value Type Description System.Boolean IsStarted Gets if the controller is started. Declaration bool IsStarted { get; } Property Value Type Description System.Boolean Methods AddDependency(IConfigurableController) Add a new dependency. The controller must be stopped. Declaration void AddDependency(IConfigurableController dependency) Parameters Type Name Description IConfigurableController dependency ConfigureController() Configures the controller and calls the Configured event. Properties must be set and the controller must be stopped. Declaration void ConfigureController() GetDependencies() Gets the list of the dependencies. Declaration List<IConfigurableController> GetDependencies() Returns Type Description List < IConfigurableController > RemoveDependency(IConfigurableController) Remove a dependency. The controller must be stopped. Declaration void RemoveDependency(IConfigurableController dependency) Parameters Type Name Description IConfigurableController dependency StartController() Starts the controller and calls the Started event. The controller must be configured, ready and stopped. Declaration void StartController() StopController() Stops the controller and calls the Stopped event. The controller must be configured and started. Declaration void StopController() Events Configured Called when the controller is configured. Declaration event Action<IConfigurableController> Configured Event Type Type Description System.Action < IConfigurableController > Ready Called when the controller is configured and ready to be started, when all its dependencies started. Declaration event Action<IConfigurableController> Ready Event Type Type Description System.Action < IConfigurableController > Started Called when the controller is started. Declaration event Action<IConfigurableController> Started Event Type Type Description System.Action < IConfigurableController > Stopped Called when the controller is stopped. Declaration event Action<IConfigurableController> Stopped Event Type Type Description System.Action < IConfigurableController >"
  },
  "api/ArucoUnity.Utilities.CvMatExtensions.html": {
    "href": "api/ArucoUnity.Utilities.CvMatExtensions.html",
    "title": "Class CvMatExtensions | Aruco Unity documentation",
    "keywords": "Class CvMatExtensions Inheritance System.Object CvMatExtensions Namespace : ArucoUnity.Utilities Assembly : cs.temp.dll.dll Syntax public static class CvMatExtensions Methods GetCameraFocalLengths(Cv.Mat) Gets the camera focal lengths in a camera matrix, expressed in pixels units. Equals to F = (AtDouble(0, 0), AtDouble(1, 1)) Declaration public static Vector2 GetCameraFocalLengths(this Cv.Mat mat) Parameters Type Name Description Cv.Mat mat Returns Type Description Vector2 GetCameraPrincipalPoint(Cv.Mat) Gets the camera principal point in a camera matrix, expressed in pixels units. Equals to C = (AtDouble(0, 2), AtDouble(1, 2)) Declaration public static Vector2 GetCameraPrincipalPoint(this Cv.Mat mat) Parameters Type Name Description Cv.Mat mat Returns Type Description Vector2 ImageType(TextureFormat) Returns the OpenCV type equivalent to a texture format. Declaration public static Cv.Type ImageType(TextureFormat textureFormat) Parameters Type Name Description TextureFormat textureFormat The Unity texture format. Returns Type Description Cv.Type The equivalent OpenCV type."
  },
  "api/ArucoUnity.Utilities.ConfigurableController.html": {
    "href": "api/ArucoUnity.Utilities.ConfigurableController.html",
    "title": "Class ConfigurableController | Aruco Unity documentation",
    "keywords": "Class ConfigurableController Configurable and startable controller. Inheritance System.Object ConfigurableController Implements IConfigurableController Namespace : ArucoUnity.Utilities Assembly : cs.temp.dll.dll Syntax public abstract class ConfigurableController : MonoBehaviour, IConfigurableController Properties AutoStart Declaration public bool AutoStart { get; set; } Property Value Type Description System.Boolean IsConfigured Declaration public bool IsConfigured { get; } Property Value Type Description System.Boolean IsReady Declaration public bool IsReady { get; } Property Value Type Description System.Boolean IsStarted Declaration public bool IsStarted { get; } Property Value Type Description System.Boolean Methods AddDependency(IConfigurableController) Declaration public void AddDependency(IConfigurableController dependency) Parameters Type Name Description IConfigurableController dependency Awake() Initializes the properties. Declaration protected virtual void Awake() ConfigureController() Declaration public void ConfigureController() Configuring() Declaration protected virtual void Configuring() GetDependencies() Declaration public List<IConfigurableController> GetDependencies() Returns Type Description List < IConfigurableController > OnConfigured() Sets IsConfigured to true, calls Configured and if all dependencies started calls ArucoUnity.Utilities.ConfigurableController.OnReady . Declaration protected virtual void OnConfigured() OnDestroy() Calls StopController() if it has been configured and started. Declaration protected virtual void OnDestroy() OnStarted() Sets IsStarted to true and calls Started . Declaration protected virtual void OnStarted() OnStopped() Sets IsStarted to false and calls Stopped . Declaration protected virtual void OnStopped() RemoveDependency(IConfigurableController) Declaration public void RemoveDependency(IConfigurableController dependency) Parameters Type Name Description IConfigurableController dependency Start() Calls ArucoUnity.Utilities.ConfigurableController.SetAutoStart(System.Boolean) . Declaration protected virtual void Start() StartController() Declaration public void StartController() Starting() Declaration protected virtual void Starting() StopController() Declaration public void StopController() Stopping() Declaration protected virtual void Stopping() Events Configured Declaration public event Action<IConfigurableController> Configured Event Type Type Description System.Action < IConfigurableController > Ready Declaration public event Action<IConfigurableController> Ready Event Type Type Description System.Action < IConfigurableController > Started Declaration public event Action<IConfigurableController> Started Event Type Type Description System.Action < IConfigurableController > Stopped Declaration public event Action<IConfigurableController> Stopped Event Type Type Description System.Action < IConfigurableController > Implements IConfigurableController"
  },
  "api/ArucoUnity.Utilities.ArucoCameraSeparateThread.html": {
    "href": "api/ArucoUnity.Utilities.ArucoCameraSeparateThread.html",
    "title": "Class ArucoCameraSeparateThread | Aruco Unity documentation",
    "keywords": "Class ArucoCameraSeparateThread Inheritance System.Object ArucoCameraSeparateThread Namespace : ArucoUnity.Utilities Assembly : cs.temp.dll.dll Syntax public class ArucoCameraSeparateThread Constructors ArucoCameraSeparateThread(IArucoCamera, Action<Cv.Mat[]>) Declaration public ArucoCameraSeparateThread(IArucoCamera arucoCamera, Action<Cv.Mat[]> threadWork) Parameters Type Name Description IArucoCamera arucoCamera System.Action < Cv.Mat []> threadWork Fields arucoCamera Declaration protected IArucoCamera arucoCamera Field Value Type Description IArucoCamera currentBuffer Declaration protected uint currentBuffer Field Value Type Description System.UInt32 exception Declaration protected Exception exception Field Value Type Description System.Exception imageBuffers Declaration protected Cv.Mat[][] imageBuffers Field Value Type Description Cv.Mat [][] imageDataBuffers Declaration protected byte[][][] imageDataBuffers Field Value Type Description System.Byte [][][] imagesUpdated Declaration protected bool imagesUpdated Field Value Type Description System.Boolean mutex Declaration protected Mutex mutex Field Value Type Description System.Threading.Mutex thread Declaration protected Thread thread Field Value Type Description System.Threading.Thread threadException Declaration protected Exception threadException Field Value Type Description System.Exception threadUpdated Declaration protected bool threadUpdated Field Value Type Description System.Boolean threadWork Declaration protected Action<Cv.Mat[]> threadWork Field Value Type Description System.Action < Cv.Mat []> Properties CopyBackImages Declaration public bool CopyBackImages { get; set; } Property Value Type Description System.Boolean ImagesUpdated Declaration public bool ImagesUpdated { get; protected set; } Property Value Type Description System.Boolean IsStarted Declaration public bool IsStarted { get; protected set; } Property Value Type Description System.Boolean Methods NextBuffer() Returns the index of the next buffer. Declaration protected uint NextBuffer() Returns Type Description System.UInt32 PreviousBuffer() Returns the index of the previous buffer. Declaration protected uint PreviousBuffer() Returns Type Description System.UInt32 Start() Declaration public void Start() Stop() Declaration public void Stop() Update(Byte[][]) Swaps the images with the copy used by the thread, and re-throw the thread exceptions. Declaration public void Update(byte[][] cameraImageDatas) Parameters Type Name Description System.Byte [][] cameraImageDatas"
  },
  "api/ArucoUnity.Plugin.html": {
    "href": "api/ArucoUnity.Plugin.html",
    "title": "Namespace ArucoUnity.Plugin | Aruco Unity documentation",
    "keywords": "Namespace ArucoUnity.Plugin Classes Aruco Aruco.Board Aruco.CharucoBoard Aruco.DetectorParameters Aruco.Dictionary Aruco.GridBoard Cv Cv.Exception Cv.Mat Cv.Omnidir Cv.Point2f Cv.Point3f Cv.Rect Cv.Scalar Cv.Size Cv.TermCriteria Cv.Vec3d Cv.Vec4i Std Std.VectorDouble Std.VectorInt Std.VectorMat Std.VectorPoint2f Std.VectorPoint3f Std.VectorVec3d Std.VectorVec4i Std.VectorVectorInt Std.VectorVectorPoint2f Std.VectorVectorPoint3f Std.VectorVectorVectorPoint2f Utility Utility.HandleCppPtr Enums Aruco.CornerRefineMethod Aruco.PredefinedDictionaryName Cv.BorderTypes See the OpenCV documentation for more information: http://docs.opencv.org/3.2.0/d2/de8/group__core__array.html#ga209f2f4869e304c82d07739337eae7c5 Cv.Calib Cv.InterpolationFlags See the OpenCV documentation for more information: http://docs.opencv.org/3.2.0/da/d54/group__imgproc__transform.html#gga5bb5a1fea74ea38e1a5445ca803ff121ac97d8e4880d8b5d509e96825c7522deb Cv.Omnidir.Calib Cv.Omnidir.Rectifify Cv.StereoRectifyFlags Cv.TermCriteria.Type Cv.Type Utility.DeleteResponsibility"
  },
  "api/ArucoUnity.Plugin.Utility.html": {
    "href": "api/ArucoUnity.Plugin.Utility.html",
    "title": "Class Utility | Aruco Unity documentation",
    "keywords": "Class Utility Inheritance System.Object Utility Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public static class Utility"
  },
  "api/ArucoUnity.Plugin.Utility.HandleCppPtr.html": {
    "href": "api/ArucoUnity.Plugin.Utility.HandleCppPtr.html",
    "title": "Class Utility.HandleCppPtr | Aruco Unity documentation",
    "keywords": "Class Utility.HandleCppPtr Inheritance System.Object Utility.HandleCppPtr Aruco.Board Aruco.DetectorParameters Aruco.Dictionary Cv.Exception Cv.Mat Cv.Point2f Cv.Point3f Cv.Rect Cv.Scalar Cv.Size Cv.TermCriteria Cv.Vec3d Cv.Vec4i Std.VectorDouble Std.VectorInt Std.VectorMat Std.VectorPoint2f Std.VectorPoint3f Std.VectorVec3d Std.VectorVec4i Std.VectorVectorInt Std.VectorVectorPoint2f Std.VectorVectorPoint3f Std.VectorVectorVectorPoint2f Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public abstract class HandleCppPtr Constructors HandleCppPtr(Utility.DeleteResponsibility) Declaration public HandleCppPtr(Utility.DeleteResponsibility deleteResponsibility = Utility.DeleteResponsibility.True) Parameters Type Name Description Utility.DeleteResponsibility deleteResponsibility HandleCppPtr(IntPtr, Utility.DeleteResponsibility) Declaration public HandleCppPtr(IntPtr cppPtr, Utility.DeleteResponsibility deleteResponsibility = Utility.DeleteResponsibility.True) Parameters Type Name Description System.IntPtr cppPtr Utility.DeleteResponsibility deleteResponsibility Properties CppPtr Declaration public IntPtr CppPtr { get; set; } Property Value Type Description System.IntPtr DeleteResponsibility Declaration public Utility.DeleteResponsibility DeleteResponsibility { get; set; } Property Value Type Description Utility.DeleteResponsibility Methods DeleteCppPtr() Declaration protected abstract void DeleteCppPtr() Finalize() Declaration protected void Finalize()"
  },
  "api/ArucoUnity.Plugin.Cv.Type.html": {
    "href": "api/ArucoUnity.Plugin.Cv.Type.html",
    "title": "Enum Cv.Type | Aruco Unity documentation",
    "keywords": "Enum Cv.Type Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public enum Type Fields Name Description CV_16S CV_16SC1 CV_16SC2 CV_16SC3 CV_16SC4 CV_64F CV_64FC1 CV_64FC2 CV_64FC3 CV_64FC4 CV_8U CV_8UC1 CV_8UC2 CV_8UC3 CV_8UC4"
  },
  "api/ArucoUnity.Plugin.Cv.TermCriteria.html": {
    "href": "api/ArucoUnity.Plugin.Cv.TermCriteria.html",
    "title": "Class Cv.TermCriteria | Aruco Unity documentation",
    "keywords": "Class Cv.TermCriteria Inheritance System.Object Utility.HandleCppPtr Cv.TermCriteria Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class TermCriteria : Utility.HandleCppPtr Constructors TermCriteria() Declaration public TermCriteria() TermCriteria(Cv.TermCriteria.Type, Int32, Double) Declaration public TermCriteria(Cv.TermCriteria.Type type, int maxCount, double epsilon) Parameters Type Name Description Cv.TermCriteria.Type type System.Int32 maxCount System.Double epsilon Properties Epsilon Declaration public double Epsilon { get; set; } Property Value Type Description System.Double MaxCount Declaration public int MaxCount { get; set; } Property Value Type Description System.Int32 TypeValue Declaration public int TypeValue { get; set; } Property Value Type Description System.Int32 Methods DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr()"
  },
  "api/ArucoUnity.Plugin.Cv.TermCriteria.Type.html": {
    "href": "api/ArucoUnity.Plugin.Cv.TermCriteria.Type.html",
    "title": "Enum Cv.TermCriteria.Type | Aruco Unity documentation",
    "keywords": "Enum Cv.TermCriteria.Type Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public enum Type Fields Name Description Count Eps MaxIter"
  },
  "api/ArucoUnity.Plugin.Cv.Point3f.html": {
    "href": "api/ArucoUnity.Plugin.Cv.Point3f.html",
    "title": "Class Cv.Point3f | Aruco Unity documentation",
    "keywords": "Class Cv.Point3f Inheritance System.Object Utility.HandleCppPtr Cv.Point3f Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class Point3f : Utility.HandleCppPtr Constructors Point3f() Declaration public Point3f() Point3f(IntPtr, Utility.DeleteResponsibility) Declaration public Point3f(IntPtr point3fPtr, Utility.DeleteResponsibility deleteResponsibility = Utility.DeleteResponsibility.True) Parameters Type Name Description System.IntPtr point3fPtr Utility.DeleteResponsibility deleteResponsibility Properties X Declaration public float X { get; set; } Property Value Type Description System.Single Y Declaration public float Y { get; set; } Property Value Type Description System.Single Z Declaration public float Z { get; set; } Property Value Type Description System.Single Methods DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() Operators Implicit(Cv.Point3f to Vector3) Declaration public static implicit operator Vector3(Cv.Point3f point3f) Parameters Type Name Description Cv.Point3f point3f Returns Type Description Vector3"
  },
  "api/ArucoUnity.Plugin.Cv.Point2f.html": {
    "href": "api/ArucoUnity.Plugin.Cv.Point2f.html",
    "title": "Class Cv.Point2f | Aruco Unity documentation",
    "keywords": "Class Cv.Point2f Inheritance System.Object Utility.HandleCppPtr Cv.Point2f Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class Point2f : Utility.HandleCppPtr Constructors Point2f() Declaration public Point2f() Point2f(IntPtr, Utility.DeleteResponsibility) Declaration public Point2f(IntPtr point2fPtr, Utility.DeleteResponsibility deleteResponsibility = Utility.DeleteResponsibility.True) Parameters Type Name Description System.IntPtr point2fPtr Utility.DeleteResponsibility deleteResponsibility Properties X Declaration public float X { get; set; } Property Value Type Description System.Single Y Declaration public float Y { get; set; } Property Value Type Description System.Single Methods DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() Operators Implicit(Cv.Point2f to Vector2) Declaration public static implicit operator Vector2(Cv.Point2f point2f) Parameters Type Name Description Cv.Point2f point2f Returns Type Description Vector2 Implicit(Cv.Point2f to Vector3) Declaration public static implicit operator Vector3(Cv.Point2f point2f) Parameters Type Name Description Cv.Point2f point2f Returns Type Description Vector3"
  },
  "api/ArucoUnity.Plugin.Cv.Omnidir.html": {
    "href": "api/ArucoUnity.Plugin.Cv.Omnidir.html",
    "title": "Class Cv.Omnidir | Aruco Unity documentation",
    "keywords": "Class Cv.Omnidir Inheritance System.Object Cv.Omnidir Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public static class Omnidir Methods Calibrate(Std.VectorVectorPoint3f, Std.VectorVectorPoint2f, Cv.Size, Cv.Mat, Cv.Mat, Cv.Mat, out Std.VectorVec3d, out Std.VectorVec3d, Cv.Omnidir.Calib) Declaration public static double Calibrate(Std.VectorVectorPoint3f objectPoints, Std.VectorVectorPoint2f imagePoints, Cv.Size imageSize, Cv.Mat cameraMatrix, Cv.Mat xi, Cv.Mat distCoeffs, out Std.VectorVec3d rvecs, out Std.VectorVec3d tvecs, Cv.Omnidir.Calib flags) Parameters Type Name Description Std.VectorVectorPoint3f objectPoints Std.VectorVectorPoint2f imagePoints Cv.Size imageSize Cv.Mat cameraMatrix Cv.Mat xi Cv.Mat distCoeffs Std.VectorVec3d rvecs Std.VectorVec3d tvecs Cv.Omnidir.Calib flags Returns Type Description System.Double Calibrate(Std.VectorVectorPoint3f, Std.VectorVectorPoint2f, Cv.Size, Cv.Mat, Cv.Mat, Cv.Mat, out Std.VectorVec3d, out Std.VectorVec3d, Cv.Omnidir.Calib, Cv.TermCriteria) Declaration public static double Calibrate(Std.VectorVectorPoint3f objectPoints, Std.VectorVectorPoint2f imagePoints, Cv.Size imageSize, Cv.Mat cameraMatrix, Cv.Mat xi, Cv.Mat distCoeffs, out Std.VectorVec3d rvecs, out Std.VectorVec3d tvecs, Cv.Omnidir.Calib flags, Cv.TermCriteria criteria) Parameters Type Name Description Std.VectorVectorPoint3f objectPoints Std.VectorVectorPoint2f imagePoints Cv.Size imageSize Cv.Mat cameraMatrix Cv.Mat xi Cv.Mat distCoeffs Std.VectorVec3d rvecs Std.VectorVec3d tvecs Cv.Omnidir.Calib flags Cv.TermCriteria criteria Returns Type Description System.Double Calibrate(Std.VectorVectorPoint3f, Std.VectorVectorPoint2f, Cv.Size, Cv.Mat, Cv.Mat, Cv.Mat, out Std.VectorVec3d, out Std.VectorVec3d, Cv.Omnidir.Calib, Cv.TermCriteria, out Cv.Mat) Declaration public static double Calibrate(Std.VectorVectorPoint3f objectPoints, Std.VectorVectorPoint2f imagePoints, Cv.Size imageSize, Cv.Mat cameraMatrix, Cv.Mat xi, Cv.Mat distCoeffs, out Std.VectorVec3d rvecs, out Std.VectorVec3d tvecs, Cv.Omnidir.Calib flags, Cv.TermCriteria criteria, out Cv.Mat idx) Parameters Type Name Description Std.VectorVectorPoint3f objectPoints Std.VectorVectorPoint2f imagePoints Cv.Size imageSize Cv.Mat cameraMatrix Cv.Mat xi Cv.Mat distCoeffs Std.VectorVec3d rvecs Std.VectorVec3d tvecs Cv.Omnidir.Calib flags Cv.TermCriteria criteria Cv.Mat idx Returns Type Description System.Double InitUndistortRectifyMap(Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Size, Cv.Type, out Cv.Mat, out Cv.Mat, Cv.Omnidir.Rectifify) Declaration public static void InitUndistortRectifyMap(Cv.Mat cameraMatrix, Cv.Mat distCoeffs, Cv.Mat xi, Cv.Mat R, Cv.Mat newCameraMatrix, Cv.Size size, Cv.Type m1type, out Cv.Mat map1, out Cv.Mat map2, Cv.Omnidir.Rectifify flags) Parameters Type Name Description Cv.Mat cameraMatrix Cv.Mat distCoeffs Cv.Mat xi Cv.Mat R Cv.Mat newCameraMatrix Cv.Size size Cv.Type m1type Cv.Mat map1 Cv.Mat map2 Cv.Omnidir.Rectifify flags StereoCalibrate(Std.VectorVectorPoint3f, Std.VectorVectorPoint2f, Std.VectorVectorPoint2f, Cv.Size, Cv.Size, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, out Cv.Vec3d, out Cv.Vec3d, out Std.VectorVec3d, out Std.VectorVec3d, Cv.Omnidir.Calib) Declaration public static double StereoCalibrate(Std.VectorVectorPoint3f objectPoints, Std.VectorVectorPoint2f imagePoints1, Std.VectorVectorPoint2f imagePoints2, Cv.Size imageSize1, Cv.Size imageSize2, Cv.Mat cameraMatrix1, Cv.Mat xi1, Cv.Mat distCoeffs1, Cv.Mat cameraMatrix2, Cv.Mat xi2, Cv.Mat distCoeffs2, out Cv.Vec3d rvec, out Cv.Vec3d tvec, out Std.VectorVec3d rvecsL, out Std.VectorVec3d tvecsL, Cv.Omnidir.Calib flags) Parameters Type Name Description Std.VectorVectorPoint3f objectPoints Std.VectorVectorPoint2f imagePoints1 Std.VectorVectorPoint2f imagePoints2 Cv.Size imageSize1 Cv.Size imageSize2 Cv.Mat cameraMatrix1 Cv.Mat xi1 Cv.Mat distCoeffs1 Cv.Mat cameraMatrix2 Cv.Mat xi2 Cv.Mat distCoeffs2 Cv.Vec3d rvec Cv.Vec3d tvec Std.VectorVec3d rvecsL Std.VectorVec3d tvecsL Cv.Omnidir.Calib flags Returns Type Description System.Double StereoCalibrate(Std.VectorVectorPoint3f, Std.VectorVectorPoint2f, Std.VectorVectorPoint2f, Cv.Size, Cv.Size, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, out Cv.Vec3d, out Cv.Vec3d, out Std.VectorVec3d, out Std.VectorVec3d, Cv.Omnidir.Calib, Cv.TermCriteria) Declaration public static double StereoCalibrate(Std.VectorVectorPoint3f objectPoints, Std.VectorVectorPoint2f imagePoints1, Std.VectorVectorPoint2f imagePoints2, Cv.Size imageSize1, Cv.Size imageSize2, Cv.Mat cameraMatrix1, Cv.Mat xi1, Cv.Mat distCoeffs1, Cv.Mat cameraMatrix2, Cv.Mat xi2, Cv.Mat distCoeffs2, out Cv.Vec3d rvec, out Cv.Vec3d tvec, out Std.VectorVec3d rvecsL, out Std.VectorVec3d tvecsL, Cv.Omnidir.Calib flags, Cv.TermCriteria criteria) Parameters Type Name Description Std.VectorVectorPoint3f objectPoints Std.VectorVectorPoint2f imagePoints1 Std.VectorVectorPoint2f imagePoints2 Cv.Size imageSize1 Cv.Size imageSize2 Cv.Mat cameraMatrix1 Cv.Mat xi1 Cv.Mat distCoeffs1 Cv.Mat cameraMatrix2 Cv.Mat xi2 Cv.Mat distCoeffs2 Cv.Vec3d rvec Cv.Vec3d tvec Std.VectorVec3d rvecsL Std.VectorVec3d tvecsL Cv.Omnidir.Calib flags Cv.TermCriteria criteria Returns Type Description System.Double StereoCalibrate(Std.VectorVectorPoint3f, Std.VectorVectorPoint2f, Std.VectorVectorPoint2f, Cv.Size, Cv.Size, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, out Cv.Vec3d, out Cv.Vec3d, out Std.VectorVec3d, out Std.VectorVec3d, Cv.Omnidir.Calib, Cv.TermCriteria, out Cv.Mat) Declaration public static double StereoCalibrate(Std.VectorVectorPoint3f objectPoints, Std.VectorVectorPoint2f imagePoints1, Std.VectorVectorPoint2f imagePoints2, Cv.Size imageSize1, Cv.Size imageSize2, Cv.Mat cameraMatrix1, Cv.Mat xi1, Cv.Mat distCoeffs1, Cv.Mat cameraMatrix2, Cv.Mat xi2, Cv.Mat distCoeffs2, out Cv.Vec3d rvec, out Cv.Vec3d tvec, out Std.VectorVec3d rvecsL, out Std.VectorVec3d tvecsL, Cv.Omnidir.Calib flags, Cv.TermCriteria criteria, out Cv.Mat idx) Parameters Type Name Description Std.VectorVectorPoint3f objectPoints Std.VectorVectorPoint2f imagePoints1 Std.VectorVectorPoint2f imagePoints2 Cv.Size imageSize1 Cv.Size imageSize2 Cv.Mat cameraMatrix1 Cv.Mat xi1 Cv.Mat distCoeffs1 Cv.Mat cameraMatrix2 Cv.Mat xi2 Cv.Mat distCoeffs2 Cv.Vec3d rvec Cv.Vec3d tvec Std.VectorVec3d rvecsL Std.VectorVec3d tvecsL Cv.Omnidir.Calib flags Cv.TermCriteria criteria Cv.Mat idx Returns Type Description System.Double StereoRectify(Cv.Vec3d, Cv.Vec3d, out Cv.Mat, out Cv.Mat) Declaration public static void StereoRectify(Cv.Vec3d rvec, Cv.Vec3d tvec, out Cv.Mat R1, out Cv.Mat R2) Parameters Type Name Description Cv.Vec3d rvec Cv.Vec3d tvec Cv.Mat R1 Cv.Mat R2 UndistortImage(Cv.Mat, out Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Omnidir.Rectifify) Declaration public static void UndistortImage(Cv.Mat distorted, out Cv.Mat undistorted, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, Cv.Mat xi, Cv.Omnidir.Rectifify flags) Parameters Type Name Description Cv.Mat distorted Cv.Mat undistorted Cv.Mat cameraMatrix Cv.Mat distCoeffs Cv.Mat xi Cv.Omnidir.Rectifify flags UndistortImage(Cv.Mat, out Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Omnidir.Rectifify, Cv.Mat) Declaration public static void UndistortImage(Cv.Mat distorted, out Cv.Mat undistorted, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, Cv.Mat xi, Cv.Omnidir.Rectifify flags, Cv.Mat newCameraMatrix) Parameters Type Name Description Cv.Mat distorted Cv.Mat undistorted Cv.Mat cameraMatrix Cv.Mat distCoeffs Cv.Mat xi Cv.Omnidir.Rectifify flags Cv.Mat newCameraMatrix UndistortImage(Cv.Mat, out Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Omnidir.Rectifify, Cv.Mat, Cv.Size) Declaration public static void UndistortImage(Cv.Mat distorted, out Cv.Mat undistorted, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, Cv.Mat xi, Cv.Omnidir.Rectifify flags, Cv.Mat newCameraMatrix, Cv.Size newSize) Parameters Type Name Description Cv.Mat distorted Cv.Mat undistorted Cv.Mat cameraMatrix Cv.Mat distCoeffs Cv.Mat xi Cv.Omnidir.Rectifify flags Cv.Mat newCameraMatrix Cv.Size newSize UndistortImage(Cv.Mat, out Cv.Mat, Cv.Mat, Cv.Mat, Cv.Mat, Cv.Omnidir.Rectifify, Cv.Mat, Cv.Size, Cv.Mat) Declaration public static void UndistortImage(Cv.Mat distorted, out Cv.Mat undistorted, Cv.Mat cameraMatrix, Cv.Mat distCoeffs, Cv.Mat xi, Cv.Omnidir.Rectifify flags, Cv.Mat newCameraMatrix, Cv.Size newSize, Cv.Mat R) Parameters Type Name Description Cv.Mat distorted Cv.Mat undistorted Cv.Mat cameraMatrix Cv.Mat distCoeffs Cv.Mat xi Cv.Omnidir.Rectifify flags Cv.Mat newCameraMatrix Cv.Size newSize Cv.Mat R"
  },
  "api/ArucoUnity.Plugin.Cv.Omnidir.Rectifify.html": {
    "href": "api/ArucoUnity.Plugin.Cv.Omnidir.Rectifify.html",
    "title": "Enum Cv.Omnidir.Rectifify | Aruco Unity documentation",
    "keywords": "Enum Cv.Omnidir.Rectifify Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public enum Rectifify Fields Name Description Cylindrical Longlati Perspective Stereographic"
  },
  "api/ArucoUnity.Plugin.Cv.Calib.html": {
    "href": "api/ArucoUnity.Plugin.Cv.Calib.html",
    "title": "Enum Cv.Calib | Aruco Unity documentation",
    "keywords": "Enum Cv.Calib Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public enum Calib Fields Name Description FixAspectRatio FixFocalLength FixIntrinsic FixK1 FixK2 FixK3 FixK4 FixK5 FixK6 FixPrincipalPoint FixS1S2S3S4 FixTauxTauy RationalModel SameFocalLength ThinPrismModel TiltedModel UseIntrinsicGuess ZeroTangentDist"
  },
  "api/ArucoUnity.Objects.Trackers.ArucoGridBoardTracker.html": {
    "href": "api/ArucoUnity.Objects.Trackers.ArucoGridBoardTracker.html",
    "title": "Class ArucoGridBoardTracker | Aruco Unity documentation",
    "keywords": "Class ArucoGridBoardTracker Inheritance System.Object ArucoObjectTracker ArucoGridBoardTracker Inherited Members ArucoObjectTracker.IsActivated ArucoObjectTracker.arucoTracker ArucoObjectTracker.arucoCamera ArucoObjectTracker.arucoCameraUndistortion ArucoObjectTracker.arucoCameraDisplay ArucoObjectTracker.ArucoObjectsController_DictionaryAdded(Aruco.Dictionary) ArucoObjectTracker.ArucoObjectsController_DictionaryRemoved(Aruco.Dictionary) ArucoObjectTracker.Activate(IArucoObjectsTracker) ArucoObjectTracker.Deactivate() ArucoObjectTracker.Detect(Int32, Aruco.Dictionary) ArucoObjectTracker.Draw(Int32, Aruco.Dictionary) Namespace : ArucoUnity.Objects.Trackers Assembly : cs.temp.dll.dll Syntax public class ArucoGridBoardTracker : ArucoObjectTracker Methods Detect(Int32, Aruco.Dictionary, Cv.Mat) Declaration public override void Detect(int cameraId, Aruco.Dictionary dictionary, Cv.Mat image) Parameters Type Name Description System.Int32 cameraId Aruco.Dictionary dictionary Cv.Mat image Overrides ArucoObjectTracker.Detect(Int32, Aruco.Dictionary, Cv.Mat) Draw(Int32, Aruco.Dictionary, Cv.Mat) Declaration public override void Draw(int cameraId, Aruco.Dictionary dictionary, Cv.Mat image) Parameters Type Name Description System.Int32 cameraId Aruco.Dictionary dictionary Cv.Mat image Overrides ArucoObjectTracker.Draw(Int32, Aruco.Dictionary, Cv.Mat) EstimateTransforms(Int32, Aruco.Dictionary) Declaration public override void EstimateTransforms(int cameraId, Aruco.Dictionary dictionary) Parameters Type Name Description System.Int32 cameraId Aruco.Dictionary dictionary Overrides ArucoObjectTracker.EstimateTransforms(Int32, Aruco.Dictionary) UpdateTransforms(Int32, Aruco.Dictionary) Declaration public override void UpdateTransforms(int cameraId, Aruco.Dictionary dictionary) Parameters Type Name Description System.Int32 cameraId Aruco.Dictionary dictionary Overrides ArucoObjectTracker.UpdateTransforms(Int32, Aruco.Dictionary)"
  },
  "api/ArucoUnity.Objects.Trackers.ArucoDiamondTracker.html": {
    "href": "api/ArucoUnity.Objects.Trackers.ArucoDiamondTracker.html",
    "title": "Class ArucoDiamondTracker | Aruco Unity documentation",
    "keywords": "Class ArucoDiamondTracker Inheritance System.Object ArucoObjectTracker ArucoDiamondTracker Inherited Members ArucoObjectTracker.IsActivated ArucoObjectTracker.arucoTracker ArucoObjectTracker.arucoCamera ArucoObjectTracker.arucoCameraUndistortion ArucoObjectTracker.arucoCameraDisplay ArucoObjectTracker.Detect(Int32, Aruco.Dictionary) ArucoObjectTracker.Draw(Int32, Aruco.Dictionary) Namespace : ArucoUnity.Objects.Trackers Assembly : cs.temp.dll.dll Syntax public class ArucoDiamondTracker : ArucoObjectTracker Fields DetectSquareMarkerLengthRate Declaration protected const float DetectSquareMarkerLengthRate = 2F Field Value Type Description System.Single DrawAxisLength Declaration protected const float DrawAxisLength = 0.5F Field Value Type Description System.Single EstimatePoseSquareLength Declaration protected const float EstimatePoseSquareLength = 1F Field Value Type Description System.Single Properties DetectedDiamonds Declaration public Dictionary<Aruco.Dictionary, int>[] DetectedDiamonds { get; set; } Property Value Type Description Dictionary < Aruco.Dictionary , System.Int32 >[] DiamondCorners Declaration public Dictionary<Aruco.Dictionary, Std.VectorVectorPoint2f>[] DiamondCorners { get; set; } Property Value Type Description Dictionary < Aruco.Dictionary , Std.VectorVectorPoint2f >[] DiamondIds Declaration public Dictionary<Aruco.Dictionary, Std.VectorVec4i>[] DiamondIds { get; set; } Property Value Type Description Dictionary < Aruco.Dictionary , Std.VectorVec4i >[] DiamondRvecs Declaration public Dictionary<Aruco.Dictionary, Std.VectorVec3d>[] DiamondRvecs { get; set; } Property Value Type Description Dictionary < Aruco.Dictionary , Std.VectorVec3d >[] DiamondTvecs Declaration public Dictionary<Aruco.Dictionary, Std.VectorVec3d>[] DiamondTvecs { get; set; } Property Value Type Description Dictionary < Aruco.Dictionary , Std.VectorVec3d >[] Methods Activate(IArucoObjectsTracker) Declaration public override void Activate(IArucoObjectsTracker arucoTracker) Parameters Type Name Description IArucoObjectsTracker arucoTracker Overrides ArucoObjectTracker.Activate(IArucoObjectsTracker) ArucoObjectsController_DictionaryAdded(Aruco.Dictionary) Declaration protected override void ArucoObjectsController_DictionaryAdded(Aruco.Dictionary dictionary) Parameters Type Name Description Aruco.Dictionary dictionary Overrides ArucoObjectTracker.ArucoObjectsController_DictionaryAdded(Aruco.Dictionary) ArucoObjectsController_DictionaryRemoved(Aruco.Dictionary) Declaration protected override void ArucoObjectsController_DictionaryRemoved(Aruco.Dictionary dictionary) Parameters Type Name Description Aruco.Dictionary dictionary Overrides ArucoObjectTracker.ArucoObjectsController_DictionaryRemoved(Aruco.Dictionary) Deactivate() Declaration public override void Deactivate() Overrides ArucoObjectTracker.Deactivate() Detect(Int32, Aruco.Dictionary, Cv.Mat) Declaration public override void Detect(int cameraId, Aruco.Dictionary dictionary, Cv.Mat image) Parameters Type Name Description System.Int32 cameraId Aruco.Dictionary dictionary Cv.Mat image Overrides ArucoObjectTracker.Detect(Int32, Aruco.Dictionary, Cv.Mat) Draw(Int32, Aruco.Dictionary, Cv.Mat) Declaration public override void Draw(int cameraId, Aruco.Dictionary dictionary, Cv.Mat image) Parameters Type Name Description System.Int32 cameraId Aruco.Dictionary dictionary Cv.Mat image Overrides ArucoObjectTracker.Draw(Int32, Aruco.Dictionary, Cv.Mat) EstimateTransforms(Int32, Aruco.Dictionary) Declaration public override void EstimateTransforms(int cameraId, Aruco.Dictionary dictionary) Parameters Type Name Description System.Int32 cameraId Aruco.Dictionary dictionary Overrides ArucoObjectTracker.EstimateTransforms(Int32, Aruco.Dictionary) TryGetArucoDiamond(Int32, Aruco.Dictionary, UInt32, out ArucoDiamond) Declaration protected virtual bool TryGetArucoDiamond(int cameraId, Aruco.Dictionary dictionary, uint arucoObjectId, out ArucoDiamond arucoDiamond) Parameters Type Name Description System.Int32 cameraId Aruco.Dictionary dictionary System.UInt32 arucoObjectId ArucoDiamond arucoDiamond Returns Type Description System.Boolean UpdateTransforms(Int32, Aruco.Dictionary) Declaration public override void UpdateTransforms(int cameraId, Aruco.Dictionary dictionary) Parameters Type Name Description System.Int32 cameraId Aruco.Dictionary dictionary Overrides ArucoObjectTracker.UpdateTransforms(Int32, Aruco.Dictionary)"
  },
  "api/ArucoUnity.Objects.Trackers.ArucoCharucoBoardTracker.html": {
    "href": "api/ArucoUnity.Objects.Trackers.ArucoCharucoBoardTracker.html",
    "title": "Class ArucoCharucoBoardTracker | Aruco Unity documentation",
    "keywords": "Class ArucoCharucoBoardTracker Inheritance System.Object ArucoObjectTracker ArucoCharucoBoardTracker Inherited Members ArucoObjectTracker.IsActivated ArucoObjectTracker.arucoTracker ArucoObjectTracker.arucoCamera ArucoObjectTracker.arucoCameraUndistortion ArucoObjectTracker.arucoCameraDisplay ArucoObjectTracker.ArucoObjectsController_DictionaryAdded(Aruco.Dictionary) ArucoObjectTracker.ArucoObjectsController_DictionaryRemoved(Aruco.Dictionary) ArucoObjectTracker.Activate(IArucoObjectsTracker) ArucoObjectTracker.Deactivate() ArucoObjectTracker.Detect(Int32, Aruco.Dictionary) ArucoObjectTracker.Draw(Int32, Aruco.Dictionary) Namespace : ArucoUnity.Objects.Trackers Assembly : cs.temp.dll.dll Syntax public class ArucoCharucoBoardTracker : ArucoObjectTracker Methods Detect(Int32, Aruco.Dictionary, Cv.Mat) Declaration public override void Detect(int cameraId, Aruco.Dictionary dictionary, Cv.Mat image) Parameters Type Name Description System.Int32 cameraId Aruco.Dictionary dictionary Cv.Mat image Overrides ArucoObjectTracker.Detect(Int32, Aruco.Dictionary, Cv.Mat) Draw(Int32, Aruco.Dictionary, Cv.Mat) Declaration public override void Draw(int cameraId, Aruco.Dictionary dictionary, Cv.Mat image) Parameters Type Name Description System.Int32 cameraId Aruco.Dictionary dictionary Cv.Mat image Overrides ArucoObjectTracker.Draw(Int32, Aruco.Dictionary, Cv.Mat) EstimateTransforms(Int32, Aruco.Dictionary) Declaration public override void EstimateTransforms(int cameraId, Aruco.Dictionary dictionary) Parameters Type Name Description System.Int32 cameraId Aruco.Dictionary dictionary Overrides ArucoObjectTracker.EstimateTransforms(Int32, Aruco.Dictionary) UpdateTransforms(Int32, Aruco.Dictionary) Declaration public override void UpdateTransforms(int cameraId, Aruco.Dictionary dictionary) Parameters Type Name Description System.Int32 cameraId Aruco.Dictionary dictionary Overrides ArucoObjectTracker.UpdateTransforms(Int32, Aruco.Dictionary)"
  },
  "api/ArucoUnity.Objects.ArucoMarker.html": {
    "href": "api/ArucoUnity.Objects.ArucoMarker.html",
    "title": "Class ArucoMarker | Aruco Unity documentation",
    "keywords": "Class ArucoMarker Describes an ArUco marker. Inheritance System.Object ArucoObject ArucoMarker Inherited Members ArucoObject.metersToPixels300ppp ArucoObject.PropertyUpdating ArucoObject.PropertyUpdated ArucoObject.ArucoHashCode ArucoObject.Dictionary ArucoObject.MarkerSideLength ArucoObject.MarkerBorderBits ArucoObject.DisplayInEditor ArucoObject.Awake() ArucoObject.OnValidate() ArucoObject.OnPropertyUpdating() ArucoObject.OnPropertyUpdated() ArucoObject.UpdateProperties() ArucoObject.GetInPixels(Single) Namespace : ArucoUnity.Objects Assembly : cs.temp.dll.dll Syntax public class ArucoMarker : ArucoObject Properties MarkerId Gets or sets the marker id in the used dictionary. Declaration public int MarkerId { get; set; } Property Value Type Description System.Int32 Methods Draw() Declaration public override Cv.Mat Draw() Returns Type Description Cv.Mat Overrides ArucoObject.Draw() GenerateName() Declaration public override string GenerateName() Returns Type Description System.String Overrides ArucoObject.GenerateName() GetArucoHashCode(Int32) Computes the hash code of a marker based on its id. Declaration public static int GetArucoHashCode(int markerId) Parameters Type Name Description System.Int32 markerId The marker id. Returns Type Description System.Int32 The calculated ArUco hash code. GetGameObjectScale() Declaration public override Vector3 GetGameObjectScale() Returns Type Description Vector3 Overrides ArucoObject.GetGameObjectScale() UpdateArucoHashCode() Declaration protected override void UpdateArucoHashCode() Overrides ArucoObject.UpdateArucoHashCode()"
  },
  "api/ArucoUnity.Cameras.Undistortions.PinholeCameraUndistortion.html": {
    "href": "api/ArucoUnity.Cameras.Undistortions.PinholeCameraUndistortion.html",
    "title": "Class PinholeCameraUndistortion | Aruco Unity documentation",
    "keywords": "Class PinholeCameraUndistortion Manages the undistortion and rectification process for pinhole ArucoCamera . Inheritance System.Object ArucoCameraController ArucoCameraUndistortion ArucoCameraUndistortionGeneric < ArucoCamera > PinholeCameraUndistortionGeneric < ArucoCamera > PinholeCameraUndistortion Implements IArucoCameraUndistortion IArucoCameraController IConfigurableController IHasArucoCameraParameters Inherited Members PinholeCameraUndistortionGeneric<ArucoCamera>.RectificationScalingFactor PinholeCameraUndistortionGeneric<ArucoCamera>.InitializeUndistortionMaps() ArucoCameraUndistortionGeneric<ArucoCamera>.Awake() ArucoCameraUndistortion.undistortionCameraMapsNumber ArucoCameraUndistortion.CameraParameters ArucoCameraUndistortion.RectifiedCameraMatrices ArucoCameraUndistortion.RectificationMatrices ArucoCameraUndistortion.UndistortedDistCoeffs ArucoCameraUndistortion.UndistortionRectificationMaps ArucoCameraUndistortion.noRectificationMatrix ArucoCameraUndistortion.noDistCoeffs ArucoCameraUndistortion.noROI ArucoCameraUndistortion.CameraParametersFilePath ArucoCameraUndistortion.remapThread ArucoCameraUndistortion.Start() ArucoCameraUndistortion.Configuring() ArucoCameraUndistortion.Starting() ArucoCameraUndistortion.Stopping() ArucoCameraUndistortion.ArucoCamera_UndistortRectifyImages(Cv.Mat[], Byte[][]) ArucoCameraUndistortion.UndistortRectifyImages(Cv.Mat[]) ArucoCameraController.ArucoCamera Namespace : ArucoUnity.Cameras.Undistortions Assembly : cs.temp.dll.dll Syntax public class PinholeCameraUndistortion : PinholeCameraUndistortionGeneric<ArucoCamera>, IArucoCameraUndistortion, IArucoCameraController, IConfigurableController, IHasArucoCameraParameters Methods InitializeRectification() Declaration protected override void InitializeRectification() Overrides ArucoCameraUndistortion.InitializeRectification() Implements IArucoCameraUndistortion IArucoCameraController IConfigurableController IHasArucoCameraParameters"
  },
  "api/ArucoUnity.Cameras.Undistortions.OmnidirCameraUndistortionGeneric-1.html": {
    "href": "api/ArucoUnity.Cameras.Undistortions.OmnidirCameraUndistortionGeneric-1.html",
    "title": "Class OmnidirCameraUndistortionGeneric<T> | Aruco Unity documentation",
    "keywords": "Class OmnidirCameraUndistortionGeneric<T> Manages the undistortion and rectification process for fisheye and omnidir ArucoCamera . See the OpenCV's ccalib module documentation for more information: http://docs.opencv.org/3.4/dd/d12/tutorial_omnidir_calib_main.html Inheritance System.Object ArucoCameraController ArucoCameraUndistortion ArucoCameraUndistortionGeneric <T> OmnidirCameraUndistortionGeneric<T> OmnidirCameraUndistortion StereoOmnidirCameraUndistortion Implements IArucoCameraUndistortion IArucoCameraController IConfigurableController IHasArucoCameraParameters Inherited Members ArucoCameraUndistortionGeneric<T>.Awake() ArucoCameraUndistortion.undistortionCameraMapsNumber ArucoCameraUndistortion.CameraParameters ArucoCameraUndistortion.RectifiedCameraMatrices ArucoCameraUndistortion.RectificationMatrices ArucoCameraUndistortion.UndistortedDistCoeffs ArucoCameraUndistortion.UndistortionRectificationMaps ArucoCameraUndistortion.noRectificationMatrix ArucoCameraUndistortion.noDistCoeffs ArucoCameraUndistortion.noROI ArucoCameraUndistortion.CameraParametersFilePath ArucoCameraUndistortion.remapThread ArucoCameraUndistortion.Start() ArucoCameraUndistortion.Starting() ArucoCameraUndistortion.Stopping() ArucoCameraUndistortion.ArucoCamera_UndistortRectifyImages(Cv.Mat[], Byte[][]) ArucoCameraUndistortion.UndistortRectifyImages(Cv.Mat[]) ArucoCameraController.ArucoCamera Namespace : ArucoUnity.Cameras.Undistortions Assembly : cs.temp.dll.dll Syntax public abstract class OmnidirCameraUndistortionGeneric<T> : ArucoCameraUndistortionGeneric<T>, IArucoCameraUndistortion, IArucoCameraController, IConfigurableController, IHasArucoCameraParameters where T : ArucoCamera Type Parameters Name Description T Fields maxPerspectiveFov Declaration protected const float maxPerspectiveFov = 179F Field Value Type Description System.Single minPerspectiveFov Declaration protected const float minPerspectiveFov = 1F Field Value Type Description System.Single rectifyFlags Declaration protected Dictionary<OmnidirCameraUndistortionGeneric<T>.RectificationTypes, Cv.Omnidir.Rectifify> rectifyFlags Field Value Type Description Dictionary < OmnidirCameraUndistortionGeneric.RectificationTypes <>, Cv.Omnidir.Rectifify > Properties PerspectiveFieldOfViews Gets or sets the desired field of view for the Unity cameras shooting the undistorted and rectified images. Declaration public float[] PerspectiveFieldOfViews { get; set; } Property Value Type Description System.Single [] RectificationType Gets or sets the algorithm to use for the rectification of the images. See this tutorial for illustrated examples: https://docs.opencv.org/3.4/dd/d12/tutorial_omnidir_calib_main.html Declaration public OmnidirCameraUndistortionGeneric<T>.RectificationTypes RectificationType { get; set; } Property Value Type Description OmnidirCameraUndistortionGeneric.RectificationTypes <> Methods Configuring() Throw exception if PerspectiveFieldOfViews length is different than CameraNumber . Declaration protected override void Configuring() Overrides ArucoCameraUndistortion.Configuring() InitializeRectification() Initializes the using the PerspectiveFieldOfViews values for perspective rectification or uses the recommended values: https://docs.opencv.org/3.3.1/dd/d12/tutorial_omnidir_calib_main.html . Initializes the to identity matrix. Declaration protected override void InitializeRectification() Overrides ArucoCameraUndistortion.InitializeRectification() InitializeUndistortionMaps() Declaration protected override void InitializeUndistortionMaps() Overrides ArucoCameraUndistortion.InitializeUndistortionMaps() OnValidate() Resizes the length of the ArucoUnity.Cameras.Undistortions.OmnidirCameraUndistortionGeneric`1.perspectiveFieldOfViews editor field to CameraNumber if different. Declaration protected virtual void OnValidate() Implements IArucoCameraUndistortion IArucoCameraController IConfigurableController IHasArucoCameraParameters"
  },
  "api/ArucoUnity.Cameras.Parameters.StereoArucoCameraParameters.html": {
    "href": "api/ArucoUnity.Cameras.Parameters.StereoArucoCameraParameters.html",
    "title": "Class StereoArucoCameraParameters | Aruco Unity documentation",
    "keywords": "Class StereoArucoCameraParameters Manages the camera parameters of a stereo camera calibration. Inheritance System.Object StereoArucoCameraParameters Namespace : ArucoUnity.Cameras.Parameters Assembly : cs.temp.dll.dll Syntax [Serializable] public class StereoArucoCameraParameters Constructors StereoArucoCameraParameters() Creates an empty StereoCameraParameters. Declaration public StereoArucoCameraParameters() Remarks This constructor is needed for the serialization. Fields CameraNumber Declaration public const int CameraNumber = 2 Field Value Type Description System.Int32 Properties CalibrationFlagsValue Gets or sets the stereo calibration flags used. Declaration public int CalibrationFlagsValue { get; set; } Property Value Type Description System.Int32 ReprojectionError Gets or sets the average re-projection error of the calibration. Declaration public double ReprojectionError { get; set; } Property Value Type Description System.Double RotationVector Gets or sets the rotation vector between the first and the second camera coordinate systems. Declaration public Cv.Vec3d RotationVector { get; set; } Property Value Type Description Cv.Vec3d Remarks When UpdateSerializedProperties() is called, it's copied to the RotationVectorValues property. RotationVectorValues Gets or sets the rotation matrix values between the coordinate systems of the cameras. Equals to the RotationVector content and automatically written when SaveToXmlFile(String) is called. Declaration public double[] RotationVectorValues { get; set; } Property Value Type Description System.Double [] Remarks This property is be public for the serialization. TranslationVector Gets or sets the translation vector between the coordinate systems of the cameras. Declaration public Cv.Vec3d TranslationVector { get; set; } Property Value Type Description Cv.Vec3d Remarks When UpdateSerializedProperties() is called, it's copied to the TranslationVectorValues property. TranslationVectorValues Gets or sets the translation vector values between the coordinate systems of the cameras. Equals to the TranslationVector content and automatically written when SaveToXmlFile(String) is called. Declaration public double[] TranslationVectorValues { get; set; } Property Value Type Description System.Double [] Remarks This property is be public for the serialization. Methods UpdateNonSerializedProperties() Initializes the non serialized properties from the serialized properties. Declaration public void UpdateNonSerializedProperties() UpdateSerializedProperties() Updates the serialized properties from the non serialized properties. Declaration public void UpdateSerializedProperties()"
  },
  "api/ArucoUnity.Cameras.Parameters.ArucoCameraParameters.html": {
    "href": "api/ArucoUnity.Cameras.Parameters.ArucoCameraParameters.html",
    "title": "Class ArucoCameraParameters | Aruco Unity documentation",
    "keywords": "Class ArucoCameraParameters Manage the camera parameters from a calibration. Inheritance System.Object ArucoCameraParameters Namespace : ArucoUnity.Cameras.Parameters Assembly : cs.temp.dll.dll Syntax [Serializable] public class ArucoCameraParameters Constructors ArucoCameraParameters() Create an empty CameraParameters and set CalibrationDateTime to now. Declaration public ArucoCameraParameters() Remarks This constructor is needed for the serialization. ArucoCameraParameters(Int32) Initialize the properties. Declaration public ArucoCameraParameters(int camerasNumber) Parameters Type Name Description System.Int32 camerasNumber The number of camera in the camera system. Must be equal to the number of cameras of the related ArucoCamera . Fields cameraMatrices Declaration protected Cv.Mat[] cameraMatrices Field Value Type Description Cv.Mat [] Properties CalibrationDateTime The calibration date and time. Declaration public DateTime CalibrationDateTime { get; set; } Property Value Type Description System.DateTime CalibrationFlagsValue The calibration flags used. Declaration public int CalibrationFlagsValue { get; set; } Property Value Type Description System.Int32 CameraMatrices The camera matrices of the calibration. Declaration public Cv.Mat[] CameraMatrices { get; set; } Property Value Type Description Cv.Mat [] Remarks When SaveToXmlFile(String) is called, it's serialized with the CameraMatricesType and CameraMatricesValues properties. CameraMatricesType The camera matrix type of the calibration. Equals to and automatically written when SaveToXmlFile(String) is called. Declaration public Cv.Type CameraMatricesType { get; set; } Property Value Type Description Cv.Type Remarks This property is be public for the serialization. CameraMatricesValues The camera matrix values of the calibration. Equals to the CameraMatrices content and automatically written when SaveToXmlFile(String) is called. Declaration public double[][][] CameraMatricesValues { get; set; } Property Value Type Description System.Double [][][] Remarks This property is be public for the serialization. CameraNumber The number of the camera during the calibration. Declaration public int CameraNumber { get; set; } Property Value Type Description System.Int32 DistCoeffs The distorsition coefficients of the calibration. Declaration public Cv.Mat[] DistCoeffs { get; set; } Property Value Type Description Cv.Mat [] Remarks When SaveToXmlFile(String) is called, it's serialized with the DistCoeffsType and DistCoeffsValues properties. DistCoeffsType The distorsition coefficients type of the calibration. Equals to and automatically written when SaveToXmlFile(String) is called. Declaration public Cv.Type DistCoeffsType { get; set; } Property Value Type Description Cv.Type Remarks This property is be public for the serialization. DistCoeffsValues The distorsition coefficients values of the calibration. Equals to the DistCoeffs content and automatically written when SaveToXmlFile(String) is called. Declaration public double[][][] DistCoeffsValues { get; set; } Property Value Type Description System.Double [][][] Remarks This property is be public for the serialization. FilePath The file path of the parameters. Declaration public string FilePath { get; protected set; } Property Value Type Description System.String FixAspectRatioValue Non null if there is a fix image aspect ratio. Declaration public float FixAspectRatioValue { get; set; } Property Value Type Description System.Single ImageHeights The image height during the calibration. Declaration public int[] ImageHeights { get; set; } Property Value Type Description System.Int32 [] ImageWidths The image width during the calibration. Declaration public int[] ImageWidths { get; set; } Property Value Type Description System.Int32 [] OmnidirXis The xi parameter used in the omnidir calibration process (ccalib module). Declaration public Cv.Mat[] OmnidirXis { get; set; } Property Value Type Description Cv.Mat [] Remarks When SaveToXmlFile(String) is called, it's serialized with the OmnidirXisType and OmnidirXisValues properties. OmnidirXisType The xi parameter type of the calibration. Equals to and automatically written when SaveToXmlFile(String) is called. Declaration public Cv.Type OmnidirXisType { get; set; } Property Value Type Description Cv.Type Remarks This property is be public for the serialization. OmnidirXisValues The xi parameter values of the calibration. Equals to the OmnidirXis content and automatically written when SaveToXmlFile(String) is called. Declaration public double[][][] OmnidirXisValues { get; set; } Property Value Type Description System.Double [][][] Remarks This property is be public for the serialization. ReprojectionErrors The average re-projection error of the calibration. Declaration public double[] ReprojectionErrors { get; set; } Property Value Type Description System.Double [] StereoCameraParameters Parameters from possible stereo calibration on the camera system. Declaration public StereoArucoCameraParameters StereoCameraParameters { get; set; } Property Value Type Description StereoArucoCameraParameters Methods LoadFromXmlFile(String) Create a new CameraParameters object from a previously saved camera parameters XML file. Declaration public static ArucoCameraParameters LoadFromXmlFile(string cameraParametersFilePath) Parameters Type Name Description System.String cameraParametersFilePath The file path to load. Returns Type Description ArucoCameraParameters The CameraParameters loaded from the XML file or null if the file coulnd't be loaded. Exceptions Type Condition System.ArgumentException If the camera parameters couldn't be loaded because of a wrong file path. SaveToXmlFile(String) Save the camera parameters to a XML file. Declaration public void SaveToXmlFile(string cameraParametersFilePath) Parameters Type Name Description System.String cameraParametersFilePath The file path where to save the object. Exceptions Type Condition System.ArgumentException If the camera parameters couldn't be saved because of a wrong file path."
  },
  "api/ArucoUnity.Cameras.Displays.ArucoCameraDisplay.html": {
    "href": "api/ArucoUnity.Cameras.Displays.ArucoCameraDisplay.html",
    "title": "Class ArucoCameraDisplay | Aruco Unity documentation",
    "keywords": "Class ArucoCameraDisplay Manages Unity virual cameras that shoot 3D content aligned with the Images displayed as background. It creates the augmented reality effect by the images from the physical cameras and the ArucoObject tracked by ArucoObjectsTracker . Inheritance System.Object ArucoCameraController ArucoCameraDisplay ArucoCameraDisplayGeneric<T, U> Implements IArucoCameraDisplay IArucoCameraController IConfigurableController Inherited Members ArucoCameraController.ArucoCamera Namespace : ArucoUnity.Cameras.Displays Assembly : cs.temp.dll.dll Syntax public abstract class ArucoCameraDisplay : ArucoCameraController, IArucoCameraDisplay, IArucoCameraController, IConfigurableController Fields cameraBackgroundDistance Declaration public const float cameraBackgroundDistance = 1F Field Value Type Description System.Single Properties ArucoCameraUndistortion Gets or sets the optional undistortion process associated with the ArucoCamera . Declaration public IArucoCameraUndistortion ArucoCameraUndistortion { get; set; } Property Value Type Description IArucoCameraUndistortion BackgroundCameras Declaration public virtual Camera[] BackgroundCameras { get; protected set; } Property Value Type Description Camera [] Backgrounds Declaration public virtual Renderer[] Backgrounds { get; protected set; } Property Value Type Description Renderer [] Cameras Declaration public virtual Camera[] Cameras { get; protected set; } Property Value Type Description Camera [] Methods ConfigureDefaultBackgrounds() Places the Backgrounds in front of the corresponding BackgroundCameras centered and scaled to fit in the camera view. Declaration protected virtual void ConfigureDefaultBackgrounds() ConfigureDisplay() Configures the BackgroundCameras and the Backgrounds according to the ArucoCameraUndistortion if set otherwise with default values. Declaration protected virtual void ConfigureDisplay() ConfigureRectifiedBackground(Int32) Places a Backgrounds in front of the corresponding BackgroundCameras centered with the principal point of the corresponding rectified camera matrix in and scaled to fit in the field of view calculated from the focal lengths of the rectified camera matrix. Declaration protected virtual void ConfigureRectifiedBackground(int cameraId) Parameters Type Name Description System.Int32 cameraId The id of the background and the background camera to configure. ConfigureRectifiedCamera(Int32) Configures the field of view of a Cameras according to the vertical focal length of the corresponding rectified camera matrix in . If the camera targets an eye in VR mode, Unity has already configured it. Declaration protected virtual void ConfigureRectifiedCamera(int cameraId) Parameters Type Name Description System.Int32 cameraId The id of the camera to configure. Configuring() Adds ArucoCameraUndistortion as dependency if set. Declaration protected override void Configuring() Overrides ArucoCameraController.Configuring() PlaceArucoObject(Transform, Int32, Vector3, Quaternion) Declaration public virtual void PlaceArucoObject(Transform arucoObject, int cameraId, Vector3 localPosition, Quaternion localRotation) Parameters Type Name Description Transform arucoObject System.Int32 cameraId Vector3 localPosition Quaternion localRotation SetDisplayActive(Boolean) Activates or deactivates the Cameras , the BackgroundCameras and the Backgrounds . Declaration protected virtual void SetDisplayActive(bool value) Parameters Type Name Description System.Boolean value True to activate, false to deactivate. Starting() Calls ConfigureDisplay() the SetDisplayActive(Boolean) to activate the display. Declaration protected override void Starting() Stopping() Deactivates the display with SetDisplayActive(Boolean) . Declaration protected override void Stopping() Implements IArucoCameraDisplay IArucoCameraController IConfigurableController"
  },
  "api/ArucoUnity.Cameras.ArucoCamera.html": {
    "href": "api/ArucoUnity.Cameras.ArucoCamera.html",
    "title": "Class ArucoCamera | Aruco Unity documentation",
    "keywords": "Class ArucoCamera Captures images of a camera. Inheritance System.Object ArucoCamera ArucoWebcam StereoArucoCamera Implements IArucoCamera IConfigurableController Namespace : ArucoUnity.Cameras Assembly : cs.temp.dll.dll Syntax public abstract class ArucoCamera : ConfigurableController, IArucoCamera, IConfigurableController Remarks To add a new camera, you need to derive this class. See ArucoWebcam as example. You need to implement , , and UpdatingImages() . Fields currentBuffer Declaration protected uint currentBuffer Field Value Type Description System.UInt32 dontFlipCode Declaration protected readonly int? dontFlipCode Field Value Type Description System.Nullable < System.Int32 > flipHorizontallyImages Declaration protected bool flipHorizontallyImages Field Value Type Description System.Boolean flipVerticallyImages Declaration protected bool flipVerticallyImages Field Value Type Description System.Boolean imageBuffers Declaration protected Cv.Mat[][] imageBuffers Field Value Type Description Cv.Mat [][] imageDataBuffers Declaration protected byte[][][] imageDataBuffers Field Value Type Description System.Byte [][][] imagesFlipCode Declaration protected int? imagesFlipCode Field Value Type Description System.Nullable < System.Int32 > imagesToTextureDatas Declaration protected byte[][] imagesToTextureDatas Field Value Type Description System.Byte [][] imagesToTextures Declaration protected Cv.Mat[] imagesToTextures Field Value Type Description Cv.Mat [] imagesUpdatedThisFrame Declaration protected bool imagesUpdatedThisFrame Field Value Type Description System.Boolean Properties CameraNumber Declaration public abstract int CameraNumber { get; } Property Value Type Description System.Int32 ImageDatas Declaration public byte[][] ImageDatas { get; } Property Value Type Description System.Byte [][] ImageDataSizes Declaration public int[] ImageDataSizes { get; } Property Value Type Description System.Int32 [] ImageRatios Declaration public float[] ImageRatios { get; } Property Value Type Description System.Single [] Images Declaration public Cv.Mat[] Images { get; } Property Value Type Description Cv.Mat [] Name Declaration public abstract string Name { get; protected set; } Property Value Type Description System.String NextImageDatas Declaration protected byte[][] NextImageDatas { get; } Property Value Type Description System.Byte [][] NextImages Declaration protected Cv.Mat[] NextImages { get; } Property Value Type Description Cv.Mat [] Textures Declaration public Texture2D[] Textures { get; } Property Value Type Description Texture2D [] Methods Configuring() Configures the properties. Declaration protected override void Configuring() OnImagesUpdated() Calls UndistortRectifyImages with the NextImages , swaps Images and ImageDatas , the calls ImagesUpdated and applies the changes made on the Images to the Textures . Declaration protected virtual void OnImagesUpdated() OnStarted() Initializes the Images , ImageDataSizes , ImageDatas , NextImages , and NextImageDatas properties from the Textures property. Declaration protected override void OnStarted() Update() When configured and started, calls UpdatingImages() then OnImagesUpdated() . Declaration protected virtual void Update() UpdatingImages() Updates NextImages with the new camera images. Declaration protected abstract bool UpdatingImages() Returns Type Description System.Boolean If NextImages have been updated. Events ImagesUpdated Declaration public event Action ImagesUpdated Event Type Type Description System.Action UndistortRectifyImages Declaration public event Action<Cv.Mat[], byte[][]> UndistortRectifyImages Event Type Type Description System.Action < Cv.Mat [], System.Byte [][]> Implements IArucoCamera IConfigurableController"
  },
  "api/ArucoUnity.Calibration.html": {
    "href": "api/ArucoUnity.Calibration.html",
    "title": "Namespace ArucoUnity.Calibration | Aruco Unity documentation",
    "keywords": "Namespace ArucoUnity.Calibration Classes ArucoCameraCalibration Calibrates a ArucoCamera with a ArucoBoard and saves the calibrated camera parameters in a file managed by ArucoCameraParametersController . Base class to reference in editor fields. See the OpenCV and the ArUco module documentations for more information about the calibration process: http://docs.opencv.org/3.4/da/d13/tutorial_aruco_calibration.html and https://docs.opencv.org/3.4/da/d13/tutorial_aruco_calibration.html ArucoCameraCalibrationGeneric<T, U> ArucoCameraCalibrationGUI CalibrationFlags Manages the flags of the ArucoCameraCalibration process. Base class to reference in editor fields. CalibrationFlagsGeneric<T> Manages the flags of the ArucoCameraCalibration process. Generic class to use in scripts."
  },
  "api/ArucoUnity.Calibration.Pinhole.PinholeCameraCalibrationFlags.html": {
    "href": "api/ArucoUnity.Calibration.Pinhole.PinholeCameraCalibrationFlags.html",
    "title": "Class PinholeCameraCalibrationFlags | Aruco Unity documentation",
    "keywords": "Class PinholeCameraCalibrationFlags Manages the flags of the pinhole camera process. Inheritance System.Object CalibrationFlags CalibrationFlagsGeneric < Cv.Calib > PinholeCameraCalibrationFlags Inherited Members CalibrationFlagsGeneric<Cv.Calib>.Value CalibrationFlagsGeneric<Cv.Calib>.Flags CalibrationFlagsGeneric<Cv.Calib>.flags CalibrationFlags.UseIntrinsicGuess CalibrationFlags.FixKDistorsionCoefficients CalibrationFlags.OnValidate() Namespace : ArucoUnity.Calibration.Pinhole Assembly : cs.temp.dll.dll Syntax public class PinholeCameraCalibrationFlags : CalibrationFlagsGeneric<Cv.Calib> Properties FixAspectRatio Declaration public bool FixAspectRatio { get; set; } Property Value Type Description System.Boolean FixAspectRatioValue Declaration public float FixAspectRatioValue { get; set; } Property Value Type Description System.Single FixFocalLength Declaration public bool FixFocalLength { get; set; } Property Value Type Description System.Boolean FixIntrinsic Declaration public bool FixIntrinsic { get; set; } Property Value Type Description System.Boolean FixKLength Declaration protected override int FixKLength { get; } Property Value Type Description System.Int32 Overrides CalibrationFlags.FixKLength FixPrincipalPoint Gets or sets if the principal point (cx, cy) is not changed during the calibration. Declaration public bool FixPrincipalPoint { get; set; } Property Value Type Description System.Boolean FixS1_S2_S3_S4 Declaration public bool FixS1_S2_S3_S4 { get; set; } Property Value Type Description System.Boolean FixTauxTauy Declaration public bool FixTauxTauy { get; set; } Property Value Type Description System.Boolean RationalModel Declaration public bool RationalModel { get; set; } Property Value Type Description System.Boolean SameFocalLength Declaration public bool SameFocalLength { get; set; } Property Value Type Description System.Boolean ThinPrismModel Declaration public bool ThinPrismModel { get; set; } Property Value Type Description System.Boolean TiltedModel Declaration public bool TiltedModel { get; set; } Property Value Type Description System.Boolean ZeroTangentialDistorsion Declaration public bool ZeroTangentialDistorsion { get; set; } Property Value Type Description System.Boolean Methods UpdateCalibrationFlags() Declaration protected override void UpdateCalibrationFlags() Overrides CalibrationFlags.UpdateCalibrationFlags() UpdateCalibrationOptions() Declaration protected override void UpdateCalibrationOptions() Overrides CalibrationFlags.UpdateCalibrationOptions()"
  },
  "api/ArucoUnity.Calibration.ArucoCameraCalibration.html": {
    "href": "api/ArucoUnity.Calibration.ArucoCameraCalibration.html",
    "title": "Class ArucoCameraCalibration | Aruco Unity documentation",
    "keywords": "Class ArucoCameraCalibration Calibrates a ArucoCamera with a ArucoBoard and saves the calibrated camera parameters in a file managed by ArucoCameraParametersController . Base class to reference in editor fields. See the OpenCV and the ArUco module documentations for more information about the calibration process: http://docs.opencv.org/3.4/da/d13/tutorial_aruco_calibration.html and https://docs.opencv.org/3.4/da/d13/tutorial_aruco_calibration.html Inheritance System.Object ArucoObjectDetector ArucoCameraCalibration ArucoCameraCalibrationGeneric<T, U> Implements IHasDetectorParameter Inherited Members ArucoObjectDetector.DetectorParameters Namespace : ArucoUnity.Calibration Assembly : cs.temp.dll.dll Syntax public abstract class ArucoCameraCalibration : ArucoObjectDetector, IHasDetectorParameter Fields applicationPath Declaration protected string applicationPath Field Value Type Description System.String calibratingException Declaration protected Exception calibratingException Field Value Type Description System.Exception calibratingMutex Declaration protected Mutex calibratingMutex Field Value Type Description System.Threading.Mutex calibratingThread Declaration protected Thread calibratingThread Field Value Type Description System.Threading.Thread Properties AllMarkerCorners Gets the detected marker corners for each camera. Declaration public Std.VectorVectorVectorPoint2f[] AllMarkerCorners { get; protected set; } Property Value Type Description Std.VectorVectorVectorPoint2f [] AllMarkerIds Gets the detected marker ids for each camera. Declaration public Std.VectorVectorInt[] AllMarkerIds { get; protected set; } Property Value Type Description Std.VectorVectorInt [] CalibrationBoard Gets or sets the ArUco board to use for calibration. Declaration public ArucoBoard CalibrationBoard { get; set; } Property Value Type Description ArucoBoard CalibrationFlags Gets or sets the flags for the cameras calibration. Declaration public CalibrationFlags CalibrationFlags { get; set; } Property Value Type Description CalibrationFlags CalibrationRunning Gets if CalibrateAsync() has been called and hasn't completed yet. Declaration public bool CalibrationRunning { get; protected set; } Property Value Type Description System.Boolean CameraParametersController Gets or sets the camera parameters to use if UseIntrinsicGuess is true. Otherwise, the camera parameters file will be generated from the camera name and the calibration datetime. Declaration public ArucoCameraParametersController CameraParametersController { get; set; } Property Value Type Description ArucoCameraParametersController Images Gets the images to use for the calibration. Declaration public Std.VectorMat[] Images { get; protected set; } Property Value Type Description Std.VectorMat [] IsCalibrated Gets if the last CalibrateAsync() call has been a success. Declaration public bool IsCalibrated { get; protected set; } Property Value Type Description System.Boolean MarkerCorners Gets the detected marker corners on the current images of each camera. Declaration public Std.VectorVectorPoint2f[] MarkerCorners { get; protected set; } Property Value Type Description Std.VectorVectorPoint2f [] MarkerIds Gets the detected marker ids on the current images of each camera. Declaration public Std.VectorInt[] MarkerIds { get; protected set; } Property Value Type Description Std.VectorInt [] RefineMarkersDetection Gets or sets if need to use a refine algorithm to find not detected markers based on the already detected and the board layout. Declaration public bool RefineMarkersDetection { get; set; } Property Value Type Description System.Boolean Rvecs Gets the estimated rotation vector for each detected markers in each camera. Declaration public Std.VectorVec3d[] Rvecs { get; protected set; } Property Value Type Description Std.VectorVec3d [] Tvecs Gets the estimated translation vector for each detected markers in each camera. Declaration public Std.VectorVec3d[] Tvecs { get; protected set; } Property Value Type Description Std.VectorVec3d [] Methods AddImages() Adds the current images of the cameras and the detected corners for the calibration. Declaration public virtual void AddImages() ArucoCamera_ImagesUpdated() Detects and draw the ArUco markers on the current images of the cameras. Declaration protected virtual void ArucoCamera_ImagesUpdated() Calibrate() Calibrates each mono camera in ArucoCamera using the detected markers added with AddImages() , the ArucoCameraParameters , the ArucoCameraUndistortion and save the results on a calibration file. Stereo calibrations will be additionally executed on these results for every camera pair. Declaration public virtual void Calibrate() Calibrate(Std.VectorVectorPoint2f[], Std.VectorVectorPoint3f[]) Applies a calibration to the ArucoCamera , set the extrinsic camera parameters to Rvecs and Tvecs and saves the camera parameters in CameraParameters . Declaration protected abstract void Calibrate(Std.VectorVectorPoint2f[] imagePoints, Std.VectorVectorPoint3f[] objectPoints) Parameters Type Name Description Std.VectorVectorPoint2f [] imagePoints The detected image points of each camera. Std.VectorVectorPoint3f [] objectPoints The corresponding object points of each camera. CalibrateAsync() Calls Calibrate() in a background thread. Declaration public virtual void CalibrateAsync() CancelCalibrateAsync() Stops the calibration if CalibrationRunning is true. Declaration public virtual void CancelCalibrateAsync() Configuring() Checks if CalibrationBoard is set and calls ResetCalibration() . Declaration protected override void Configuring() Overrides ArucoObjectDetector.Configuring() DetectMarkers() Detects the Aruco markers on the current images of the cameras and store the results in the MarkerCorners and MarkerIds properties. Declaration public virtual void DetectMarkers() DrawDetectedMarkers() Draws the detected ArUco markers on the current images of the cameras. Declaration public virtual void DrawDetectedMarkers() InitializeCameraParameters() Initializes and configure the CameraParameters . Declaration protected virtual void InitializeCameraParameters() LateUpdate() Calls the Calibrated event when a calibration has just completed. Declaration protected virtual void LateUpdate() ResetCalibration() Resets the properties. Declaration public virtual void ResetCalibration() Starting() Susbcribes to UndistortRectifyImages . Declaration protected override void Starting() Stopping() Unsusbcribes from UndistortRectifyImages . Declaration protected override void Stopping() Events Calibrated Called when IsCalibrated is set to true. Declaration public event Action Calibrated Event Type Type Description System.Action Implements IHasDetectorParameter"
  },
  "api/ArucoUnity.Calibration.Omnidir.StereoOmnidirCameraCalibration.html": {
    "href": "api/ArucoUnity.Calibration.Omnidir.StereoOmnidirCameraCalibration.html",
    "title": "Class StereoOmnidirCameraCalibration | Aruco Unity documentation",
    "keywords": "Class StereoOmnidirCameraCalibration Inheritance System.Object ArucoObjectDetector ArucoCameraCalibration ArucoCameraCalibrationGeneric < StereoArucoCamera , OmnidirCameraCalibrationFlags > StereoOmnidirCameraCalibration Implements IHasDetectorParameter Inherited Members ArucoCameraCalibrationGeneric<StereoArucoCamera, OmnidirCameraCalibrationFlags>.calibrationFlags ArucoCameraCalibrationGeneric<StereoArucoCamera, OmnidirCameraCalibrationFlags>.Awake() ArucoCameraCalibration.CalibrationBoard ArucoCameraCalibration.RefineMarkersDetection ArucoCameraCalibration.CameraParametersController ArucoCameraCalibration.CalibrationFlags ArucoCameraCalibration.AllMarkerCorners ArucoCameraCalibration.AllMarkerIds ArucoCameraCalibration.Images ArucoCameraCalibration.Rvecs ArucoCameraCalibration.Tvecs ArucoCameraCalibration.MarkerCorners ArucoCameraCalibration.MarkerIds ArucoCameraCalibration.IsCalibrated ArucoCameraCalibration.CalibrationRunning ArucoCameraCalibration.Calibrated ArucoCameraCalibration.applicationPath ArucoCameraCalibration.calibratingThread ArucoCameraCalibration.calibratingMutex ArucoCameraCalibration.calibratingException ArucoCameraCalibration.LateUpdate() ArucoCameraCalibration.Configuring() ArucoCameraCalibration.Starting() ArucoCameraCalibration.Stopping() ArucoCameraCalibration.ResetCalibration() ArucoCameraCalibration.DetectMarkers() ArucoCameraCalibration.DrawDetectedMarkers() ArucoCameraCalibration.AddImages() ArucoCameraCalibration.CalibrateAsync() ArucoCameraCalibration.CancelCalibrateAsync() ArucoCameraCalibration.Calibrate() ArucoCameraCalibration.ArucoCamera_ImagesUpdated() ArucoCameraCalibration.InitializeCameraParameters() ArucoObjectDetector.DetectorParameters Namespace : ArucoUnity.Calibration.Omnidir Assembly : cs.temp.dll.dll Syntax public class StereoOmnidirCameraCalibration : ArucoCameraCalibrationGeneric<StereoArucoCamera, OmnidirCameraCalibrationFlags>, IHasDetectorParameter Methods Calibrate(Std.VectorVectorPoint2f[], Std.VectorVectorPoint3f[]) Declaration protected override void Calibrate(Std.VectorVectorPoint2f[] imagePoints, Std.VectorVectorPoint3f[] objectPoints) Parameters Type Name Description Std.VectorVectorPoint2f [] imagePoints Std.VectorVectorPoint3f [] objectPoints Overrides ArucoCameraCalibration.Calibrate(Std.VectorVectorPoint2f[], Std.VectorVectorPoint3f[]) Implements IHasDetectorParameter"
  },
  "api/ArucoUnity.Calibration.Omnidir.OmnidirCameraCalibrationFlags.html": {
    "href": "api/ArucoUnity.Calibration.Omnidir.OmnidirCameraCalibrationFlags.html",
    "title": "Class OmnidirCameraCalibrationFlags | Aruco Unity documentation",
    "keywords": "Class OmnidirCameraCalibrationFlags Manages the flags of the omnidir calibration process. Inheritance System.Object CalibrationFlags CalibrationFlagsGeneric < Cv.Omnidir.Calib > OmnidirCameraCalibrationFlags Inherited Members CalibrationFlagsGeneric<Cv.Omnidir.Calib>.Value CalibrationFlagsGeneric<Cv.Omnidir.Calib>.Flags CalibrationFlagsGeneric<Cv.Omnidir.Calib>.flags CalibrationFlags.UseIntrinsicGuess CalibrationFlags.FixKDistorsionCoefficients Namespace : ArucoUnity.Calibration.Omnidir Assembly : cs.temp.dll.dll Syntax public class OmnidirCameraCalibrationFlags : CalibrationFlagsGeneric<Cv.Omnidir.Calib> Properties FixCenter Declaration public bool FixCenter { get; set; } Property Value Type Description System.Boolean FixGamma Declaration public bool FixGamma { get; set; } Property Value Type Description System.Boolean FixKLength Declaration protected override int FixKLength { get; } Property Value Type Description System.Int32 Overrides CalibrationFlags.FixKLength FixP Declaration public bool[] FixP { get; set; } Property Value Type Description System.Boolean [] FixPLength Declaration protected int FixPLength { get; } Property Value Type Description System.Int32 FixSkew Declaration public bool FixSkew { get; set; } Property Value Type Description System.Boolean FixXi Declaration public bool FixXi { get; set; } Property Value Type Description System.Boolean Methods OnValidate() Declaration protected override void OnValidate() Overrides CalibrationFlags.OnValidate() UpdateCalibrationFlags() Declaration protected override void UpdateCalibrationFlags() Overrides CalibrationFlags.UpdateCalibrationFlags() UpdateCalibrationOptions() Declaration protected override void UpdateCalibrationOptions() Overrides CalibrationFlags.UpdateCalibrationOptions()"
  },
  "api/ArucoUnity.Calibration.CalibrationFlagsGeneric-1.html": {
    "href": "api/ArucoUnity.Calibration.CalibrationFlagsGeneric-1.html",
    "title": "Class CalibrationFlagsGeneric<T> | Aruco Unity documentation",
    "keywords": "Class CalibrationFlagsGeneric<T> Manages the flags of the ArucoCameraCalibration process. Generic class to use in scripts. Inheritance System.Object CalibrationFlags CalibrationFlagsGeneric<T> OmnidirCameraCalibrationFlags PinholeCameraCalibrationFlags Inherited Members CalibrationFlags.UseIntrinsicGuess CalibrationFlags.FixKDistorsionCoefficients CalibrationFlags.FixKLength CalibrationFlags.UpdateCalibrationFlags() CalibrationFlags.UpdateCalibrationOptions() CalibrationFlags.OnValidate() Namespace : ArucoUnity.Calibration Assembly : cs.temp.dll.dll Syntax public abstract class CalibrationFlagsGeneric<T> : CalibrationFlags where T : struct, IConvertible, IComparable, IFormattable Type Parameters Name Description T Fields flags Declaration protected T flags Field Value Type Description T Properties Flags Gets or sets the calibration flags enum and keeps updated the flag properties. Declaration public T Flags { get; set; } Property Value Type Description T Value Declaration public override int Value { get; set; } Property Value Type Description System.Int32 Overrides CalibrationFlags.Value"
  },
  "api/ArucoUnity.Calibration.ArucoCameraCalibrationGUI.html": {
    "href": "api/ArucoUnity.Calibration.ArucoCameraCalibrationGUI.html",
    "title": "Class ArucoCameraCalibrationGUI | Aruco Unity documentation",
    "keywords": "Class ArucoCameraCalibrationGUI Inheritance System.Object ArucoCameraCalibrationGUI Namespace : ArucoUnity.Calibration Assembly : cs.temp.dll.dll Syntax public class ArucoCameraCalibrationGUI : MonoBehaviour Methods Awake() Prepares the buttons and subscribes to ArucoCalibrator started event to set the image display. Declaration protected void Awake() ConfigureUI(IConfigurableController) Configures the images display. Declaration protected void ConfigureUI(IConfigurableController controller) Parameters Type Name Description IConfigurableController controller OnDestroy() Unsubscribes from ArucoCalibrator events. Declaration protected void OnDestroy()"
  },
  "api/ArucoUnity.Plugin.Std.VectorVec3d.html": {
    "href": "api/ArucoUnity.Plugin.Std.VectorVec3d.html",
    "title": "Class Std.VectorVec3d | Aruco Unity documentation",
    "keywords": "Class Std.VectorVec3d Inheritance System.Object Utility.HandleCppPtr Std.VectorVec3d Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class VectorVec3d : Utility.HandleCppPtr Constructors VectorVec3d() Declaration public VectorVec3d() VectorVec3d(IntPtr, Utility.DeleteResponsibility) Declaration public VectorVec3d(IntPtr vectorVec3dPtr, Utility.DeleteResponsibility deleteResponsibility = Utility.DeleteResponsibility.True) Parameters Type Name Description System.IntPtr vectorVec3dPtr Utility.DeleteResponsibility deleteResponsibility Methods At(UInt32) Declaration public Cv.Vec3d At(uint pos) Parameters Type Name Description System.UInt32 pos Returns Type Description Cv.Vec3d Data() Declaration public Cv.Vec3d[] Data() Returns Type Description Cv.Vec3d [] DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() PushBack(Cv.Vec3d) Declaration public void PushBack(Cv.Vec3d value) Parameters Type Name Description Cv.Vec3d value Size() Declaration public uint Size() Returns Type Description System.UInt32"
  },
  "api/ArucoUnity.Plugin.Std.VectorPoint3f.html": {
    "href": "api/ArucoUnity.Plugin.Std.VectorPoint3f.html",
    "title": "Class Std.VectorPoint3f | Aruco Unity documentation",
    "keywords": "Class Std.VectorPoint3f Inheritance System.Object Utility.HandleCppPtr Std.VectorPoint3f Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class VectorPoint3f : Utility.HandleCppPtr Constructors VectorPoint3f() Declaration public VectorPoint3f() VectorPoint3f(IntPtr, Utility.DeleteResponsibility) Declaration public VectorPoint3f(IntPtr vectorPoint3fPtr, Utility.DeleteResponsibility deleteResponsibility = Utility.DeleteResponsibility.True) Parameters Type Name Description System.IntPtr vectorPoint3fPtr Utility.DeleteResponsibility deleteResponsibility Methods At(UInt32) Declaration public Cv.Point3f At(uint pos) Parameters Type Name Description System.UInt32 pos Returns Type Description Cv.Point3f Data() Declaration public Cv.Point3f[] Data() Returns Type Description Cv.Point3f [] DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() PushBack(Cv.Point3f) Declaration public void PushBack(Cv.Point3f value) Parameters Type Name Description Cv.Point3f value Size() Declaration public uint Size() Returns Type Description System.UInt32"
  },
  "api/ArucoUnity.Plugin.Std.VectorPoint2f.html": {
    "href": "api/ArucoUnity.Plugin.Std.VectorPoint2f.html",
    "title": "Class Std.VectorPoint2f | Aruco Unity documentation",
    "keywords": "Class Std.VectorPoint2f Inheritance System.Object Utility.HandleCppPtr Std.VectorPoint2f Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class VectorPoint2f : Utility.HandleCppPtr Constructors VectorPoint2f() Declaration public VectorPoint2f() VectorPoint2f(IntPtr, Utility.DeleteResponsibility) Declaration public VectorPoint2f(IntPtr vectorPoint2fPtr, Utility.DeleteResponsibility deleteResponsibility = Utility.DeleteResponsibility.True) Parameters Type Name Description System.IntPtr vectorPoint2fPtr Utility.DeleteResponsibility deleteResponsibility Methods At(UInt32) Declaration public Cv.Point2f At(uint pos) Parameters Type Name Description System.UInt32 pos Returns Type Description Cv.Point2f Data() Declaration public Cv.Point2f[] Data() Returns Type Description Cv.Point2f [] DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() PushBack(Cv.Point2f) Declaration public void PushBack(Cv.Point2f value) Parameters Type Name Description Cv.Point2f value Size() Declaration public uint Size() Returns Type Description System.UInt32"
  },
  "api/ArucoUnity.Plugin.Std.VectorMat.html": {
    "href": "api/ArucoUnity.Plugin.Std.VectorMat.html",
    "title": "Class Std.VectorMat | Aruco Unity documentation",
    "keywords": "Class Std.VectorMat Inheritance System.Object Utility.HandleCppPtr Std.VectorMat Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class VectorMat : Utility.HandleCppPtr Constructors VectorMat() Declaration public VectorMat() VectorMat(IntPtr, Utility.DeleteResponsibility) Declaration public VectorMat(IntPtr vectorMatPtr, Utility.DeleteResponsibility deleteResponsibility = Utility.DeleteResponsibility.True) Parameters Type Name Description System.IntPtr vectorMatPtr Utility.DeleteResponsibility deleteResponsibility Methods At(UInt32) Declaration public Cv.Mat At(uint pos) Parameters Type Name Description System.UInt32 pos Returns Type Description Cv.Mat Data() Declaration public Cv.Mat[] Data() Returns Type Description Cv.Mat [] DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() PushBack(Cv.Mat) Declaration public void PushBack(Cv.Mat value) Parameters Type Name Description Cv.Mat value Size() Declaration public uint Size() Returns Type Description System.UInt32"
  },
  "api/ArucoUnity.Plugin.Std.VectorInt.html": {
    "href": "api/ArucoUnity.Plugin.Std.VectorInt.html",
    "title": "Class Std.VectorInt | Aruco Unity documentation",
    "keywords": "Class Std.VectorInt Inheritance System.Object Utility.HandleCppPtr Std.VectorInt Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class VectorInt : Utility.HandleCppPtr Constructors VectorInt() Declaration public VectorInt() VectorInt(IntPtr, Utility.DeleteResponsibility) Declaration public VectorInt(IntPtr vectorIntPtr, Utility.DeleteResponsibility deleteResponsibility = Utility.DeleteResponsibility.True) Parameters Type Name Description System.IntPtr vectorIntPtr Utility.DeleteResponsibility deleteResponsibility Methods At(UInt32) Declaration public int At(uint pos) Parameters Type Name Description System.UInt32 pos Returns Type Description System.Int32 Data() Declaration public int[] Data() Returns Type Description System.Int32 [] DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() PushBack(Int32) Declaration public void PushBack(int value) Parameters Type Name Description System.Int32 value Reserve(UInt32) Declaration public void Reserve(uint newCap) Parameters Type Name Description System.UInt32 newCap Size() Declaration public uint Size() Returns Type Description System.UInt32"
  },
  "api/ArucoUnity.Plugin.Std.VectorDouble.html": {
    "href": "api/ArucoUnity.Plugin.Std.VectorDouble.html",
    "title": "Class Std.VectorDouble | Aruco Unity documentation",
    "keywords": "Class Std.VectorDouble Inheritance System.Object Utility.HandleCppPtr Std.VectorDouble Inherited Members Utility.HandleCppPtr.DeleteResponsibility Utility.HandleCppPtr.CppPtr Namespace : ArucoUnity.Plugin Assembly : cs.temp.dll.dll Syntax public class VectorDouble : Utility.HandleCppPtr Constructors VectorDouble() Declaration public VectorDouble() VectorDouble(IntPtr, Utility.DeleteResponsibility) Declaration public VectorDouble(IntPtr vectorDoublePtr, Utility.DeleteResponsibility deleteResponsibility = Utility.DeleteResponsibility.True) Parameters Type Name Description System.IntPtr vectorDoublePtr Utility.DeleteResponsibility deleteResponsibility Methods At(UInt32) Declaration public double At(uint pos) Parameters Type Name Description System.UInt32 pos Returns Type Description System.Double Data() Declaration public double[] Data() Returns Type Description System.Double [] DeleteCppPtr() Declaration protected override void DeleteCppPtr() Overrides Utility.HandleCppPtr.DeleteCppPtr() PushBack(Double) Declaration public void PushBack(double value) Parameters Type Name Description System.Double value Reserve(UInt32) Declaration public void Reserve(uint newCap) Parameters Type Name Description System.UInt32 newCap Size() Declaration public uint Size() Returns Type Description System.UInt32"
  },
  "manual/create-markers.html": {
    "href": "manual/create-markers.html",
    "title": "Create Markers | Aruco Unity documentation",
    "keywords": "Create Markers Motivation Before tracking markers with your camera, you need to create, print and place them in the environment. You can use four type of Aruco objects: markers , grid boards , charuco boards and diamond markers . From left to right: a marker, a diamond marker, a grid board, a charuco board. CreateMarkers scene Open the Assets/ArucoUnity/Scenes/CreateMarkers.unity scene to visualize the Aruco objects. Play this scene to create them. You can find the created images in Assets/ArucoUnity/Images/ . Manual creation Marker Manual creation and configuration of a marker. Create an empty object. Add a ArucoMarker script. Configure it: Select a dictionary of markers. It determines the marker size (for example 4x4 bits) and had a size (for example 50 markers). A lower dictionary size is better to avoid detection errors. For more details, see \"Markers and Dictionaries\" and \"Selection a dictionary\" sections of this tutorial . Set MarkerSideLength in pixels. It controls the image size. Set MarkerBorderBits with a minimum of 1. It controls the width of the black border of the marker, helping its detection. Set MarkerId , from 0 to the dictionary size. Add a ArucoObjectCreator script. Configure it: Add the ArucoMarker script to the ArucoObject field. Check DisplayInPlayMode if you want to display the marker in play mode. Check SaveImage to save the marker in an image file in play mode. Set the OutputFolder path to save the image, relative to the persistentDataPath in builds or to the \"Assets\" folder of your project in the editor. Check AutomaticFilename for an automatic image filename based on the ArucoObject property values. Set the image filename in OptionalImageFilename if AutomaticFilename is not checked. Play the scene. The marker is automatically created on a child plane of our object and saved on the project folder. Grid board Example of a grid board with the corresponding configuration. The process is the same as in the marker subsection. The additional configurable parameters are: MarkersNumberX : The number of markers on the board X axis. MarkersNumberY : The number of markers on the board Y axis. MarkerSeparation : The margin between markers in pixels. Charuco board Example of a charuco board with the corresponding configuration. The process is the same as in the marker subsection. The additional configurable parameters are: MarginLength : The markers margin on the white squares. SquaresNumberX : The number of squares on the board X axis. SquaresNumberY : The number of squares on the board Y axis. SquareSideLength : The width in pixels of each square. Diamond marker Example of a diamond marker with the corresponding configuration. The process is the same as in the marker subsection. The additional configurable parameters are: SquareSideLength : The width in pixels of each square. MarkersXId : The ids of the four markers."
  }
}